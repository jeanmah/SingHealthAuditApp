[{"/Users/mac/Documents/SingHealthAuditApp/frontend/src/index.js":"1","/Users/mac/Documents/SingHealthAuditApp/frontend/src/App.js":"2","/Users/mac/Documents/SingHealthAuditApp/frontend/src/Navbar.js":"3","/Users/mac/Documents/SingHealthAuditApp/frontend/src/pages/Institution.js":"4","/Users/mac/Documents/SingHealthAuditApp/frontend/src/pages/Error.js":"5","/Users/mac/Documents/SingHealthAuditApp/frontend/src/pages/Institutions.js":"6","/Users/mac/Documents/SingHealthAuditApp/frontend/src/components/testJwt/AuthenticatedRoute.js":"7","/Users/mac/Documents/SingHealthAuditApp/frontend/src/pages/Account.js":"8","/Users/mac/Documents/SingHealthAuditApp/frontend/src/pages/Tenant.js":"9","/Users/mac/Documents/SingHealthAuditApp/frontend/src/pages/FbChecklist.js":"10","/Users/mac/Documents/SingHealthAuditApp/frontend/src/Context.js":"11","/Users/mac/Documents/SingHealthAuditApp/frontend/src/components/testJwt/Login.js":"12","/Users/mac/Documents/SingHealthAuditApp/frontend/src/data.js":"13","/Users/mac/Documents/SingHealthAuditApp/frontend/src/components/Audits.js":"14","/Users/mac/Documents/SingHealthAuditApp/frontend/src/components/HomeCategories.js":"15","/Users/mac/Documents/SingHealthAuditApp/frontend/src/AuthenticationService.js":"16","/Users/mac/Documents/SingHealthAuditApp/frontend/src/components/Modal.js":"17","/Users/mac/Documents/SingHealthAuditApp/frontend/src/components/Question.js":"18","/Users/mac/Documents/SingHealthAuditApp/frontend/src/styles.js":"19","/Users/mac/Documents/SingHealthAuditApp/frontend/src/pages/AuditorHome.js":"20","/Users/mac/Documents/SingHealthAuditApp/frontend/src/pages/TenantHome.js":"21","/Users/mac/Documents/SingHealthAuditApp/frontend/src/pages/ManagerHome.js":"22","/Users/mac/Documents/SingHealthAuditApp/frontend/src/pages/Store.js":"23","/Users/mac/Documents/SingHealthAuditApp/frontend/src/pages/EditAccount.js":"24","/Users/mac/Documents/SingHealthAuditApp/frontend/src/pages/EditPassword.js":"25","/Users/mac/Documents/SingHealthAuditApp/frontend/src/pages/Chat.js":"26"},{"size":432,"mtime":1616226774447,"results":"27","hashOfConfig":"28"},{"size":2456,"mtime":1617647742873,"results":"29","hashOfConfig":"28"},{"size":3530,"mtime":1617649479502,"results":"30","hashOfConfig":"28"},{"size":2092,"mtime":1616675466467,"results":"31","hashOfConfig":"28"},{"size":103,"mtime":1616226774448,"results":"32","hashOfConfig":"28"},{"size":1199,"mtime":1616675466468,"results":"33","hashOfConfig":"28"},{"size":403,"mtime":1616670676970,"results":"34","hashOfConfig":"28"},{"size":2568,"mtime":1617649283319,"results":"35","hashOfConfig":"28"},{"size":1352,"mtime":1617563662792,"results":"36","hashOfConfig":"28"},{"size":3007,"mtime":1617022608347,"results":"37","hashOfConfig":"28"},{"size":8565,"mtime":1617649221425,"results":"38","hashOfConfig":"28"},{"size":6726,"mtime":1617567417014,"results":"39","hashOfConfig":"28"},{"size":14865,"mtime":1617647889013,"results":"40","hashOfConfig":"28"},{"size":1043,"mtime":1616670676969,"results":"41","hashOfConfig":"28"},{"size":508,"mtime":1617460319426,"results":"42","hashOfConfig":"28"},{"size":1977,"mtime":1617018638075,"results":"43","hashOfConfig":"28"},{"size":1931,"mtime":1616670676969,"results":"44","hashOfConfig":"28"},{"size":1499,"mtime":1617017244525,"results":"45","hashOfConfig":"28"},{"size":956,"mtime":1617559397452,"results":"46","hashOfConfig":"28"},{"size":863,"mtime":1617467069749,"results":"47","hashOfConfig":"28"},{"size":415,"mtime":1617563646473,"results":"48","hashOfConfig":"28"},{"size":420,"mtime":1617471214368,"results":"49","hashOfConfig":"28"},{"size":414,"mtime":1617563724439,"results":"50","hashOfConfig":"28"},{"size":3958,"mtime":1617648770598,"results":"51","hashOfConfig":"28"},{"size":2179,"mtime":1617648783449,"results":"52","hashOfConfig":"28"},{"size":897,"mtime":1617648944555,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"rsyd8z",{"filePath":"57","messages":"58","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"56"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"56"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"56"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"56"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"56"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"56"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"56"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"56"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"56"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"56"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"56"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125"},"/Users/mac/Documents/SingHealthAuditApp/frontend/src/index.js",[],["126","127"],"/Users/mac/Documents/SingHealthAuditApp/frontend/src/App.js",["128","129","130"],"import logo from \"./logo.svg\";\nimport React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Navbar from \"./Navbar\";\nimport AuditorHome from \"./pages/AuditorHome\";\nimport Account from \"./pages/Account\";\nimport Tenant from \"./pages/Tenant\";\nimport Error from \"./pages/Error\";\nimport Institutions from \"./pages/Institutions\";\nimport Institution from \"./pages/Institution\";\nimport FbChecklist from \"./pages/FbChecklist\";\nimport AuthenticatedRoute from \"./components/testJwt/AuthenticatedRoute\";\nimport LoginComponent from \"./components/testJwt/Login\";\n// import FbCategoryB from \"./pages/fbChecklistPages/FbCategoryB\";\n// import FbCategoryC from \"./pages/fbChecklistPages/FbCategoryC\";\n// import FbCategoryD from \"./pages/fbChecklistPages/FbCategoryD\";\n// import FbCategoryE from \"./pages/fbChecklistPages/FbCategoryE\";\nimport { ContextProvider } from \"./Context\";\nimport TenantHome from \"./pages/TenantHome\";\nimport ManagerHome from \"./pages/ManagerHome\";\nimport Store from \"./pages/Store\";\nimport EditAccount from \"./pages/EditAccount\";\nimport EditPassword from \"./pages/EditPassword\";\nimport Chat from \"./pages/Chat\";\n\nfunction App() {\n  return (\n    <Router>\n      <ContextProvider>\n        <Switch>\n          <Route exact path=\"/\" exact component={LoginComponent} />\n          <AuthenticatedRoute exact path=\"/home/a\" component={AuditorHome} />\n          <AuthenticatedRoute exact path=\"/home/t\" component={TenantHome} />\n          <AuthenticatedRoute exact path=\"/home/m\" component={ManagerHome} />\n          <AuthenticatedRoute exact path=\"/account\" component={Account} />\n          <AuthenticatedRoute exact path=\"/edit_account\" component={EditAccount} />\n          <AuthenticatedRoute exact path=\"/edit_password\" component={EditPassword} />\n          <AuthenticatedRoute exact path=\"/institutions\" component={Institutions} />\n          <AuthenticatedRoute exact path=\"/institution/:institutionid\" component={Institution} />\n          <AuthenticatedRoute exact path=\"/tenant/:tenantId\" component={Tenant} />\n          <AuthenticatedRoute exact path=\"/tenant/fbChecklist/:tenantId\" component={FbChecklist} />\n          <AuthenticatedRoute exact path=\"/store\" component={Store} />\n          <AuthenticatedRoute exact path=\"/chat\" component={Chat} />\n          <AuthenticatedRoute exact path=\"/error\" component={Error} />\n        </Switch>\n      </ContextProvider>\n    </Router>\n  );\n}\n\nexport default App;\n","/Users/mac/Documents/SingHealthAuditApp/frontend/src/Navbar.js",["131","132","133"],"import React, { useState, useRef, useEffect, useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { FaBars } from \"react-icons/fa\";\n\nimport { auditorNavLinks, tenantNavLinks, managerNavLinks, navBarImage } from \"./data\";\nimport auditor from \"./auditor.png\";\nimport { Context } from './Context';\n\nfunction Navbar() {\n  const { accountState, getAccountInfo } = useContext(Context);\n  const { role_id, username } = accountState;\n  const [toggleClicked, settoggleClicked] = useState(false);\n  const linksContainerRef = useRef(null);\n  const linksRef = useRef(null);\n  const showLinks = () => {\n    settoggleClicked(!toggleClicked);\n  };\n\n  useEffect(() => {\n    getAccountInfo();\n    let linksHeight = linksRef.current.getBoundingClientRect().height;\n    if (toggleClicked) {\n      linksContainerRef.current.style.height = `${linksHeight}px`;\n    } else {\n      linksContainerRef.current.style.height = \"0px\";\n    }\n  }, [toggleClicked]);\n\n  function mapLinks(links) {\n    return (\n      links.map((link, index) => {\n        const { id, url, text } = link;\n        return (\n          <li key={index}>\n            <Link to={url}>{text}</Link>\n          </li>\n        );\n      })\n    )\n  }\n\n  function getNavLinks(role) {\n    if (role === \"Auditor\") {\n      return mapLinks(auditorNavLinks);\n    } else if (role === \"Tenant\") {\n      return mapLinks(tenantNavLinks);\n    } else if (role === \"Manager\") {\n      return mapLinks(managerNavLinks);\n    };\n  };\n\n  // function getNavLinks(role) {\n  //   if (role == \"Auditor\") {\n  //     return auditorNavLinks;\n  //   } else if (role == \"Tenant\") {\n  //     return tenantNavLinks;\n  //   } else if (role == \"Manager\") {\n  //     return managerNavLinks;\n  //   };\n  // };\n\n  const navLinks = auditorNavLinks;\n\n  const fakeNavLinks = getNavLinks(role_id);\n\n  console.log(role_id);\n  console.log(navLinks);\n  console.log(fakeNavLinks);\n  console.log(navLinks===fakeNavLinks);\n\n  return (\n    <nav>\n      <div className=\"nav-pc\">\n        <div className=\"nav-mobile\">\n          <img src={auditor} className=\"logo\" alt=\"auditor\"></img>\n          <div className=\"auditor-name\">Welcome {username}</div>\n          <button\n            className=\"nav-toggle\"\n            onClick={() => {\n              showLinks();\n            }}\n          >\n            <FaBars />\n          </button>\n        </div>\n        <div className=\"links-container\" ref={linksContainerRef}>\n          <ul className=\"links\" ref={linksRef}>\n            {getNavLinks(accountState.role_id)}\n          </ul>\n        </div>\n      </div>\n    </nav>\n  );\n\n  // return (\n  //   <nav>\n  //     <div className=\"nav-pc\">\n  //       <div className=\"nav-mobile\">\n  //         <img src={auditor} className=\"logo\" alt=\"auditor\"></img>\n  //         <div className=\"auditor-name\">Welcome Marcus {}</div>\n  //         <button\n  //           className=\"nav-toggle\"\n  //           onClick={() => {\n  //             showLinks();\n  //           }}\n  //         >\n  //           <FaBars />\n  //         </button>\n  //       </div>\n  //       <div className=\"links-container\" ref={linksContainerRef}>\n  //         <ul className=\"links\" ref={linksRef}>\n  //           {fakeNavLinks.map((link, index) => {\n  //             const { id, url, text } = link;\n  //             return (\n  //               <li key={index}>\n  //                 <Link to={url}>{text}</Link>\n  //               </li>\n  //             );\n  //           })}\n  //         </ul>\n  //       </div>\n  //     </div>\n  //   </nav>\n  // );\n}\n\nexport default Navbar;\n","/Users/mac/Documents/SingHealthAuditApp/frontend/src/pages/Institution.js",["134","135","136"],"import React from \"react\";\nimport { tenants, institutions } from \"../data\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { FaAngleRight } from \"react-icons/fa\";\nimport institutionImage from \"../images/institutionhome.png\";\nimport Navbar from \"../Navbar\";\n\nfunction Institution() {\n  //obtain id which is indicated in the url\n  const { institutionid } = useParams();\n  //array of one object which is the selected institution\n  const selectedInstitution = institutions.filter((institution) => {\n    const { id } = institution;\n    return institutionid === id;\n  });\n  //filter the tenants based on the selected institution\n  const selectedTenants = tenants.filter((tenant) => {\n    const { institution } = tenant;\n    return institutionid === institution;\n  });\n\n  return (\n    <>\n      <Navbar />\n      {selectedInstitution.map((institution, index) => {\n        const { id, name, imageUrl } = institution;\n        return (\n          <section key={id} className=\"institution-header\">\n            <img src={imageUrl} className=\"institution-logo\" alt=\"logo\"></img>\n          </section>\n        );\n      })}\n      {selectedTenants.map((tenant, index) => {\n        const { tenantid, tenantName, status } = tenant;\n        return (\n          <>\n            {tenant.status === \"resolved\" ? (\n              <Link key={tenantid} to={`/tenant/${tenantid}`}>\n                <section className=\"institution-tenant-resolved\">\n                  <div>{tenantName}</div>\n                  <div className=\"institution-tenantbtn\">\n                    <FaAngleRight />\n                  </div>\n                </section>\n              </Link>\n            ) : (\n              <Link key={tenantid} to={`/tenant/${tenantid}`}>\n                <section className=\"institution-tenant-unresolved\">\n                  <div>{tenantName}</div>\n                  <div className=\"institution-tenantbtn\">\n                    <FaAngleRight />\n                  </div>\n                </section>\n              </Link>\n            )}\n          </>\n        );\n      })}\n    </>\n  );\n}\n\nexport default Institution;\n","/Users/mac/Documents/SingHealthAuditApp/frontend/src/pages/Error.js",[],"/Users/mac/Documents/SingHealthAuditApp/frontend/src/pages/Institutions.js",["137","138","139"],"import React from \"react\";\nimport { institutions } from \"../data\";\nimport { Link } from \"react-router-dom\";\nimport { FaAngleRight } from \"react-icons/fa\";\nimport Navbar from \"../Navbar\";\n// import CGH from \"../images/cgh.png\";\n// import KKH from \"../images/kkh.png\";\n// import SGH from \"../images/sgh.png\";\n// import SKH from \"../images/skh.png\";\n// import NCCS from \"../images/nccs.png\";\n// import NDCS from \"../images/ndcs.jpeg\";\n\nfunction Institutions() {\n  return (\n    <>\n      <Navbar />\n      <div className=\"institutions-head\">\n        {institutions.map((institution, index) => {\n          const { id, name, tenantNames, imageUrl } = institution;\n          return (\n            <Link key={index} to={`/institution/${id}`}>\n              <article key={id} className=\"institutions-institution\">\n                <img src={imageUrl} className=\"hospital-logo\"></img>\n                <header className=\"institutions-btn\">\n                  <span className=\"institutions-btnicon\">\n                    <FaAngleRight />\n                  </span>\n                </header>\n              </article>\n            </Link>\n          );\n        })}\n      </div>\n    </>\n  );\n}\n\nexport default Institutions;\n","/Users/mac/Documents/SingHealthAuditApp/frontend/src/components/testJwt/AuthenticatedRoute.js",[],"/Users/mac/Documents/SingHealthAuditApp/frontend/src/pages/Account.js",["140","141"],"import React, { useEffect, useContext } from \"react\";\nimport { Link } from 'react-router-dom';\nimport { Typography, Button } from \"@material-ui/core\";\n\nimport { Context } from \"../Context\";\nimport Navbar from \"../Navbar\";\nimport useStyles from \"../styles\";\nimport { FormGroup } from \"@material-ui/core\";\n\nfunction Account() {\n  const {\n    accountState,\n    getAccountInfo\n  } = useContext(Context);\n\n  // All possible account info categories for 3 types of users\n  const {\n    acc_id,\n    branch_id,\n    employee_id,\n    email,\n    username,\n    first_name,\n    last_name,\n    hp,\n    mgr_id,\n    role_id,\n    store_id,\n    type_id,\n  } = accountState;\n\n  useEffect(() => {\n    getAccountInfo();\n  }, []);\n\n  const styles = useStyles();\n  const API_URL = \"http://localhost:8080\";\n\n  // Used to generate one category of account info\n  // Filter out those empty categories\n  const AccountInfo = (props) => {\n    if (props.info != null) {\n      return <Typography align=\"center\">{props.category}: {props.info}</Typography>;\n    } else {\n      return null;\n    };\n  };\n\n  return (\n    <main className={styles.main}>\n      <Navbar />\n      <br />\n      <Typography variant=\"h3\" align='center'>Account</Typography>\n      <br />\n      <AccountInfo category=\"Username\" info={username}/>\n      <AccountInfo category=\"First Name\" info={first_name}/>\n      <AccountInfo category=\"Last Name\" info={last_name}/>\n      <br />\n      <AccountInfo category=\"Email\" info={email}/>\n      <AccountInfo category=\"Contact Number\" info={hp}/>\n      <AccountInfo category=\"Role\" info={role_id}/>\n      <br />\n      <AccountInfo category=\"Account ID\" info={acc_id}/>\n      <AccountInfo category=\"Branch ID\" info={branch_id}/>\n      <AccountInfo category=\"Employee ID\" info={employee_id} />\n      <AccountInfo category=\"Mgr ID\" info={mgr_id}/>\n      <AccountInfo category=\"Store ID\" info={store_id}/>\n      <AccountInfo category=\"Store Type\" info={type_id}/>\n      <br />\n      <FormGroup column=\"true\">\n        <Button\n          className={styles.buttons}\n          align=\"center\"\n          variant=\"outlined\"\n          fullWidth\n          color=\"primary\"\n        >\n          <Link to=\"/edit_account\">\n            Edit Account\n          </Link>\n        </Button>\n        <Button\n          className={styles.buttons}\n          align=\"center\"\n          variant=\"outlined\"\n          fullWidth\n          color=\"secondary\"\n        >\n          <Link to=\"/edit_password\">\n            Edit Password\n          </Link>\n        </Button>\n\n      </FormGroup>\n\n    </main>\n  );\n}\n\nexport default Account;\n","/Users/mac/Documents/SingHealthAuditApp/frontend/src/pages/Tenant.js",["142","143","144","145","146","147"],"import React, { useContext } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { Context } from \"../Context\";\nimport Navbar from \"../Navbar\";\n\nfunction Tenant() {\n  //get tenantid from url\n  const { tenantId } = useParams();\n\n  //Context: tenants state\n  const { tenantsState } = useContext(Context);\n  //Context: audits state\n  const { auditsState, updateAudit } = useContext(Context);\n\n  //get tenant objects among tenants array\n  const tenantObject = tenantsState.find(\n    (tenant) => tenant.tenantid === tenantId\n  );\n\n  const {\n    tenantid,\n    tenantName,\n    timeRemaining,\n    status,\n    institution,\n    latestScore,\n  } = tenantObject;\n\n  console.log(auditsState);\n\n  const tenantAudits = auditsState.filter((audit) => {\n    return audit.tenantid === tenantId;\n  });\n  return (\n    <div className=\"tenant-page\">\n      <Navbar />\n      <div className=\"tenant-name\">{tenantName}</div>\n      <div className=\"tenant-container\">\n        {/* <section className=\"tenant-content\">\n          {tenantAudits.map((tenant, index) => {\n            return <div key={index}>{tenant.score}</div>;\n          })}\n        </section> */}\n\n        <div>View Chat</div>\n        <div>View Previous Audits</div>\n        <Link to={`/tenant/fbChecklist/${tenantid}`}>Conduct Audit</Link>\n      </div>\n    </div>\n  );\n}\n\nexport default Tenant;\n","/Users/mac/Documents/SingHealthAuditApp/frontend/src/pages/FbChecklist.js",["148","149","150","151","152","153"],"import React, { useState, useContext, useEffect, useCallback } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport Question from \"../components/Question\";\nimport { Context } from \"../Context\";\nimport Modal from \"../components/Modal\";\nimport Navbar from \"../Navbar\";\n\nfunction FbCategory() {\n  //get tenant id from url\n  const { tenantId } = useParams();\n  //Context: Fb Checklist\n  const {\n    fbChecklistState,\n    setFbChecklistState,\n    getFbChecklistQuestions,\n    fbReportState,\n    setFbReportState,\n    submitFbReport,\n  } = useContext(Context);\n\n  const [isLoading, setIsLoading] = useState(true);\n\n  //Context: to call update audits function and reset checked values after clicking submit\n  // const { updateAudit, resetTenantFbChecklist } = useContext(Context);\n  // //Context: tenants state\n  // const { tenantsState } = useContext(Context);\n\n  //call this function when component is mounted\n  useEffect(() => {\n    //function to retrieve questions\n    getFbChecklistQuestions();\n  }, []);\n  //to set isLoading to false and display HTML DOM elements when fbChecklistState is complete\n  useEffect(() => {\n    if (fbChecklistState.length === 96) {\n      setIsLoading(false);\n    }\n  }, [fbChecklistState]);\n  //function called when submit button is clicked\n\n  //retrieve fbchecklist questions from backend\n  // getFbChecklistQuestions(\"FB\")\n  //   .then((response) => {\n  //     setFbChecklistState(response.data);\n  //   })\n  //   .catch(() => {\n  //     console.log(\"failed to retrieve fbchecklist\");\n  //   });\n  //create new array of questions with status to allow checking of pass/fail\n  // const fbChecklistReport = prepareFbChecklistReport(fbChecklistState);\n\n  // console.log(fbChecklistReport);\n\n  // const tenantObject = tenantsState.find(\n  //   (tenant) => tenant.tenantid === tenantId\n  // );\n  //destructure tenantObject\n  // const { tenantid, tenantName, status, institution } = tenantObject;\n\n  return (\n    <div>\n      {isLoading && <div>Loading</div>}\n      {!isLoading && (\n        <>\n          <Navbar />\n          <div className=\"category-head\">\n            <h2>FB Checklist</h2>\n            {fbChecklistState.map((question, index) => {\n              const { fb_qn_id, requirement } = question;\n              return (\n                <Question\n                  key={index}\n                  fb_qn_id={fb_qn_id}\n                  requirement={requirement}\n                  tenantId={tenantId}\n                />\n              );\n            })}\n            <br />\n            {/* <Link to={`/tenant/${tenantId}`}> */}\n            <button\n              // onClick={() => {\n              //   updateAudit(tenantId, \"FB\", tenantName, \"unresolved\");\n              //   resetTenantFbChecklist(tenantId);\n              // }}\n              onClick={() => submitFbReport(1006, fbReportState)}\n            >\n              Submit\n            </button>\n            {/* </Link> */}\n          </div>\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default FbCategory;\n","/Users/mac/Documents/SingHealthAuditApp/frontend/src/Context.js",["154","155","156","157"],"import React, { useState, createContext, useCallback } from \"react\";\nimport { audits, fbChecklist, tenants, institutions } from \"./data\";\nimport axios from \"axios\";\nimport { Redirect } from \"react-router-dom\";\nimport AuthenticationService from './AuthenticationService';\n\nexport const Context = createContext();\n\nexport const ContextProvider = (props) => {\n  //BACKEND  FUNCTIONS\n  const API_URL = \"http://localhost:8080\";\n\n  const getAccountInfo = () => {\n    AuthenticationService.getStoredAxiosInterceptor();\n    console.log(\"this is calling getAccountInfo\");\n    return axios\n      .get(`${API_URL}/account/getUserProfile`, {\n        params: {},\n      })\n      .then((response) => {\n        console.log(\"Response from getUserProfile\", response.data);\n        setAccountState(response.data);\n      })\n      .catch(() => {\n        console.log(\"userProfile retrieval failed\");\n      });\n  }\n\n  const getAllChatsOfUser = () => {\n    AuthenticationService.getStoredAxiosInterceptor();\n    console.log(\"This is calling getAllChatsOfUser\");\n    return axios\n      .get(`${API_URL}/chat/getAllChatsOfUser`, {\n        params: {},\n      })\n      .then((response) => {\n        console.log(\"Response from getAllChatsOfUser\", response.data);\n        //setAllChatsOfUserState(response.data);\n      })\n      .catch(() => {\n        console.log(\"allChatsOfUser retrieval failed\")\n      })\n  }\n\n  const getFbChecklistQuestions = useCallback(() => {\n    AuthenticationService.getStoredAxiosInterceptor();\n    return axios\n      .get(`${API_URL}/report/getAllQuestions`, {\n        params: { type: \"FB\" },\n      })\n      .then((response) => {\n        setFbChecklistState(response.data);\n        createFbReportState(response.data);\n      })\n      .catch(() => {\n        console.log(\"fb checklist retrieval failed\");\n      });\n  }, []);\n\n  const submitFbReport = useCallback((tenantid, fbreport) => {\n    console.log(JSON.stringify(fbreport));\n    console.log(\"reached here\");\n    let FormData = require(\"form-data\");\n    let formdata = new FormData();\n    formdata.append(\"checklist\", JSON.stringify(fbreport));\n    return axios\n      .post(\n        `${API_URL}/report/postReportSubmission?type=FB&tenant_id=${tenantid}&remarks=`,\n        formdata,\n        {\n          headers: {\n            \"Content-Type\": `multipart/form-data; boundary=${formdata._boundary}`,\n          },\n          // params: { type: \"FB\", tenant_id: t_id, remarks: \"\" },\n          // data: formdata,\n        }\n      )\n      .then((response) => {\n        console.log(response);\n        if (response.status === 200) {\n          return <Redirect to={`/tenant/${tenantid}`} />;\n        }\n      })\n      .catch(() => {\n        console.log(\"Failed FB report submission\");\n      });\n  });\n\n  //FRONTEND STATES AND FUNCTIONS\n  //state for report\n  const [fbReportState, setFbReportState] = useState([]);\n  //state to keep track of audit\n  const [auditsState, setAuditsState] = useState(audits);\n  //state to keep track of all tenants\n  const [tenantsState, setTenantsState] = useState(tenants);\n  //state for fbChecklist\n  const [fbChecklistState, setFbChecklistState] = useState(fbChecklist);\n  //state for institutions\n  const [institutionsState, setInstitutionstate] = useState(institutions);\n  //state for account\n  const [accountState, setAccountState] = useState([]);\n  //state for chats of user\n  const [allChatsOfUserState, setAllChatsOfUserState] = useState([]);\n  //state of comments in modal\n  const [comment, setComment] = useState(\"\");\n\n  //function to prepare report state\n  const createFbReportState = useCallback((checklist, response) => {\n    console.log(checklist);\n    //create temporary array\n    let array = [];\n    checklist.forEach((question) => {\n      const { fb_qn_id } = question;\n      array.push({\n        qn_id: fb_qn_id,\n        status: false,\n        severity: 0,\n        remarks: \"\",\n        images: \"\",\n      });\n    });\n    //set fbreportstate to array\n    setFbReportState(array);\n\n    console.log(\"created fb report\");\n    console.log(array);\n  }, []);\n\n  //function to update audits state\n  const updateAudit = (\n    tenantid,\n    type,\n    tenantname,\n    // timeremaining,\n    status\n    // date\n  ) => {\n    const tenantObject = tenantsState.find(\n      (tenant) => tenant.tenantid === tenantid\n    );\n    const tenantFbChecklist = tenantObject.fbChecklist;\n    let score = tenantFbChecklist.reduce((total, question) => {\n      if (question.checked === true) {\n        total += 1;\n      }\n      return total;\n    }, 0);\n\n    setAuditsState((prevAudits) => {\n      return [\n        ...prevAudits,\n        {\n          tenantid: tenantid,\n          type: type,\n          tenantname: tenantname,\n          // timeremaining: timeremaining,\n          status: status,\n          // date: date,\n          institution: tenantObject.institution,\n          score: score,\n        },\n      ];\n    });\n  };\n\n  //function to reset tenant's fb checklist checked values\n  const resetTenantFbChecklist = (tenantId) => {\n    const tenantObject = tenantsState.find(\n      (tenant) => tenant.tenantid === tenantId\n    );\n    //fbchecklist property for a tenant\n    const tenantFbChecklist = tenantObject.fbChecklist;\n    //reset each checked to false\n    tenantFbChecklist.forEach((question) => {\n      question.checked = false;\n    });\n    // //get tenants array without tenantObject\n    // const remainingTenants = tenantsState.filter((tenant) => {\n    //   return tenant.tenantid !== tenantId;\n    // });\n    // //update state with newTenantObject\n    // setTenantsState([...remainingTenants, tenantObject]);\n  };\n\n  //functions to close and open modal\n  const openQuestionModal = (questionId) => {\n    console.log(\"clicked openmodal\");\n    const checklistQuestion = fbChecklistState.find((question) => {\n      return question.id === questionId;\n    });\n    checklistQuestion.modalOpen = true;\n    // const remainingQuestions = fbChecklistState.filter((question) => {\n    //   return question.id !== questionId;\n    // });\n    // setFbChecklistState([...remainingQuestions, checklistQuestion]);\n  };\n  const closeQuestionModal = (questionId) => {\n    console.log(\"clicked closemodal\");\n    const checklistQuestion = fbChecklistState.find((question) => {\n      return question.id === questionId;\n    });\n    checklistQuestion.modalOpen = false;\n    // const remainingQuestions = fbChecklistState.filter((question) => {\n    //   return question.id !== questionId;\n    // });\n    // setFbChecklistState([...remainingQuestions, checklistQuestion]);\n  };\n\n  //functions to update tenant comment property\n  const updateTenantComment = (tenantId, questionId) => {\n    //find object with specific tenantId\n    const tenantObject = tenantsState.find((tenant) => {\n      return tenant.tenantid === tenantId;\n    });\n    //fbchecklist property for a tenant\n    const tenantFbChecklist = tenantObject.fbChecklist;\n    //find question within the array of questions\n    const checklistQuestion = tenantFbChecklist.find((question) => {\n      return question.id === questionId;\n    });\n    //update checked property\n    checklistQuestion.comment = comment;\n    console.log(tenantId, questionId);\n    console.log(tenantObject);\n    console.log(tenantsState);\n\n    // const remainingQuestions = tenantFbChecklist.filter((question) => {\n    //   return question.id !== questionId;\n    // });\n    // const newTenantChecklist = [...remainingQuestions, checklistQuestion];\n    // //update tenantObject\n    // tenantObject[fbChecklist] = newTenantChecklist;\n    // //get tenants array without tenantObject\n    // const remainingTenants = tenantsState.filter((tenant) => {\n    //   return tenant.tenantid !== tenantId;\n    // });\n\n    // //update state with newTenantObject\n    // setTenantsState([...remainingTenants, tenantObject]);\n    // console.log(tenantsState);\n  };\n\n  return (\n    <Context.Provider\n      value={{\n        openQuestionModal,\n        closeQuestionModal,\n        tenantsState,\n        setTenantsState,\n\n        fbChecklistState,\n        setFbChecklistState,\n        auditsState,\n        setAuditsState,\n        updateAudit,\n        resetTenantFbChecklist,\n        \n        comment,\n        setComment,\n        updateTenantComment,\n        getFbChecklistQuestions,\n\n        accountState,\n        setAccountState,\n        getAccountInfo,\n\n        allChatsOfUserState,\n        setAllChatsOfUserState,\n        getAllChatsOfUser,\n\n        fbReportState,\n        setFbReportState,\n        createFbReportState,\n        submitFbReport,\n      }}\n    >\n      {props.children}\n    </Context.Provider>\n  );\n};\n","/Users/mac/Documents/SingHealthAuditApp/frontend/src/components/testJwt/Login.js",["158","159"],"import React, { Component, useState } from \"react\";\nimport { Grid, Link, Paper, CssBaseline, Box, Typography, Avatar, Button, TextField, FormControlLabel, Checkbox } from \"@material-ui/core\";\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\n// import red from '@material-ui/core/colors/red';\n\nimport AuthenticationService from \"../../AuthenticationService\";\nimport useStyles from '../../../src/styles';\nimport { useHistory } from \"react-router\";\n\nfunction Login() {\n  const [usernameState, setUsernameState] = useState(\"\");\n  const [passwordState, setPasswordState] = useState(\"\");\n  const [hasLoginFailedState, setHasLoginFailedState] = useState(false);\n  const [showSuccessMessageState, setShowSuccessMessageState] = useState(false);\n\n  const styles = useStyles();\n  const history = useHistory();\n\n  const DisplayMessage = () => {\n    if (hasLoginFailedState) {\n      return <Typography align=\"center\" color=\"secondary\">Invalid Credentials</Typography>\n    } else if (showSuccessMessageState) {\n      return <Typography>Login Successful</Typography>\n    } else {\n      return null;\n    }\n  }\n\n  function loginClicked() {\n    console.log(usernameState);\n    console.log(passwordState);\n    AuthenticationService.executeJwtAuthenticationService(\n      usernameState,\n      passwordState\n    )\n      .then((response) => {\n        console.log(response);\n        console.log(response.data);\n        AuthenticationService.registerSuccessfulLoginForJwt(\n          usernameState,\n          response.data.token\n        );\n\n        if (response.data.accountType === \"Auditor\") {\n          history.push(`/home/a`);\n        } else if (response.data.accountType === \"Tenant\") {\n          history.push(`/home/t`);\n        } else if (response.data.accountType === \"Manager\") {\n          history.push(`/home/m`);\n        }\n      })\n      .catch(() => {\n        setShowSuccessMessageState(false);\n        setHasLoginFailedState(true);\n      });\n  };\n\n  return (\n    <Grid container component=\"main\" className={styles.root}>\n      <CssBaseline />\n      <Grid item xs={false} sm={4} md={7} className={styles.image} />\n      <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n        <div className={styles.paper}>\n          <Avatar className={styles.avatar}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign in\n          </Typography>\n          <form className={styles.form} noValidate>\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"username\"\n              label=\"Username\"\n              name=\"username\"\n              autoComplete=\"username\"\n              autoFocus\n              value={usernameState}\n              onChange={(e) => setUsernameState(e.target.value)}\n            />\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              id=\"password\"\n              autoComplete=\"current-password\"\n              value={passwordState}\n              onChange={(e) => setPasswordState(e.target.value)}\n            />\n            <DisplayMessage />\n            <FormControlLabel\n              control={<Checkbox value=\"remember\" color=\"primary\" />}\n              label=\"Remember me\"\n            />\n            <Button\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={styles.submit}\n              onClick={() => loginClicked()}\n            >\n              Sign In\n            </Button>\n            <Grid container>\n              <Grid item xs>\n                <Link href=\"#\" variant=\"body2\">\n                  Forgot password?\n                </Link>\n              </Grid>\n              <Grid item>\n                <Link href=\"#\" variant=\"body2\">\n                  {\"Don't have an account? Sign Up\"}\n                </Link>\n              </Grid>\n            </Grid>\n            {/* <Box mt={5}>\n              <Copyright />\n            </Box> */}\n          </form>\n        </div>\n      </Grid>\n    </Grid>\n  )\n\n}\n\nclass LoginComponent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      username: \"\",\n      password: \"\",\n      hasLoginFailed: false,\n      showSuccessMessage: false,\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.loginClicked = this.loginClicked.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value,\n    });\n  }\n\n  loginClicked() {\n    console.log(this.state.username);\n    console.log(this.state.password);\n    AuthenticationService.executeJwtAuthenticationService(\n      this.state.username,\n      this.state.password\n    )\n      .then((response) => {\n        console.log(response);\n        console.log(response.data);\n        AuthenticationService.registerSuccessfulLoginForJwt(\n          this.state.username,\n          response.data.token\n        );\n\n        if (response.data.accountType === \"Auditor\") {\n          this.props.history.push(`/home/a`);\n        } else if (response.data.accountType === \"Tenant\") {\n          this.props.history.push(`/home/t`);\n        } else if (response.data.accountType === \"Manager\") {\n          this.props.history.push(`/home/m`);\n        }\n      })\n      .catch(() => {\n        this.setState({ showSuccessMessage: false });\n        this.setState({ hasLoginFailed: true });\n      });\n  }\n\n  render() {\n    return (\n      <div>\n        <h2>Login</h2>\n        <div className=\"container\">\n          {/*<ShowInvalidCredentials hasLoginFailed={this.state.hasLoginFailed}/>*/}\n          {this.state.hasLoginFailed && (\n            <div className=\"alert alert-warning\">Invalid Credentials</div>\n          )}\n          {this.state.showSuccessMessage && <div>Login Sucessful</div>}\n          {/*<ShowLoginSuccessMessage showSuccessMessage={this.state.showSuccessMessage}/>*/}\n          <div>\n            User Name:{\" \"}\n            <input\n              type=\"text\"\n              name=\"username\"\n              value={this.state.username}\n              onChange={this.handleChange}\n            />\n          </div>\n          <div>\n            Password:{\" \"}\n            <input\n              type=\"password\"\n              name=\"password\"\n              value={this.state.password}\n              onChange={this.handleChange}\n            />\n          </div>\n          <button className=\"btn btn-success\" onClick={this.loginClicked}>\n            Login\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Login;\n","/Users/mac/Documents/SingHealthAuditApp/frontend/src/data.js",["160","161"],"import React from \"react\";\n\nconst users = [\n  {\n    username: \"hannz\",\n    password: \"test123\",\n    type: \"auditor\",\n  },\n  {\n    username: \"ZHZHZH\",\n    pasword: \"test123\",\n    type: \"tenant\",\n  }\n]\n\nexport const auditorAccountDatas = [\n  \"acc_id\", // 1003\n  \"appealed_audits\", // null\n  \"branch_id\", // \"*\"\n  \"completed_audits\", // null\n  \"email\", // \"jeanmah828@gmail.com\"\n  \"employee_id\", // 1004332\n  \"first_name\", // \"Hannah\"\n  \"hp\", // \"90270062\"\n  \"last_name\", // \"Mah\"\n  \"mgr_id\", // 1001\n  \"outstanding_audit_ids\", // null\n  \"role_id\", // \"Auditor\"\n  \"username\", // \"hannz\"\n]\n\nexport const tenantAccountDatas = [\n  \"acc_id\", //1004\n  \"audit_score\", //2\n  \"branch_id\", //\"CGH\"\n  \"email\", //\"yzh98640860@gmail.com\"\n  \"employee_id\", //1004516\n  \"first_name\", //\"Zhonghao\"\n  \"hp\", //\"98640860\"\n  \"last_name\", //\"Yang\"\n  \"last_audit\", //-1\n  \"past_audits\", //null\n  \"role_id\", //\"Tenant\"\n  \"store_addr\", //\"#01-20\"\n  \"type_id\", //\"FB\"\n  \"username\", //\"ZHZHZH\"\n];\n\nexport const managerAccountDatas = [\n  \"acc_id\", //1001\n  \"branch_id\", //\"HQ\"\n  \"email\", //\"marcushojww@gmail.com\"\n  \"employee_id\", //1002222\n  \"first_name\", //\"Marcus\"\n  \"hp\", //\"+65 432432\"\n  \"last_name\", //\"Ho\"\n  \"role_id\", //\"Manager\"\n  \"username\", //\"mcMarcus\"\n];\n\nexport const auditorNavLinks = [\n  {\n    id: 1,\n    url: \"/home/a\",\n    text: \"Home\",\n  },\n  {\n    id: 2,\n    url: \"/chat\",\n    text: \"Chat\",\n  },\n  {\n    id: 3,\n    url: \"/institutions\",\n    text: \"Institutions\",\n  },\n  {\n    id: 4,\n    url: \"/account\",\n    text: \"My Account\",\n  },\n];\n\nexport const tenantNavLinks = [\n  {\n    id: 1,\n    url: \"/home/t\",\n    text: \"Home\",\n  },\n  {\n    id: 2,\n    url: \"/chat\",\n    text: \"Chat\",\n  },\n  {\n    id: 3,\n    url: \"/store\",\n    text: \"My Store\",\n  },\n  {\n    id: 4,\n    url: \"/account\",\n    text: \"My Account\",\n  }\n]\n\nexport const managerNavLinks = [\n  {\n    id: 1,\n    url: \"/home/m\",\n    text: \"Home\",\n  },\n  {\n    id: 2,\n    url: \"/account\",\n    text: \"My Account\",\n  }\n]\n\nexport const audits = [\n  {\n    tenantid: \"1\",\n    type: \"FB\",\n    tenantName: \"Kopitiam\",\n    timeRemaining: 30,\n    status: \"unresolved\",\n    date: \"-\",\n    institution: \"CGH\",\n    score: \"\",\n  },\n  {\n    tenantid: \"2\",\n    type: \"FB\",\n    tenantName: \"1983\",\n    timeRemaining: 2,\n    status: \"unresolved\",\n    date: \"-\",\n    institution: \"KKH\",\n    score: \"\",\n  },\n  {\n    tenantid: \"3\",\n    type: \"FB\",\n    tenantName: \"7-Eleven\",\n    timeRemaining: 10,\n    status: \"unresolved\",\n    date: \"-\",\n    institution: \"SGH\",\n    score: \"\",\n  },\n  {\n    tenantid: \"4\",\n    type: \"Non-FB\",\n    tenantName: \"Kcuts\",\n    timeRemaining: 0,\n    status: \"resolved\",\n    date: \"12-02-20\",\n    institution: \"SKH\",\n    score: \"\",\n  },\n  {\n    tenantid: \"5\",\n    type: \"FB\",\n    tenantName: \"Kaki Makan\",\n    timeRemaining: 0,\n    status: \"resolved\",\n    date: \"27-02-20\",\n    institution: \"NCCS\",\n    score: \"\",\n  },\n  {\n    tenantid: \"6\",\n    type: \"FB\",\n    tenantName: \"7-Eleven\",\n    timeRemaining: 0,\n    status: \"resolved\",\n    date: \"13-01-20\",\n    institution: \"NDCS\",\n    score: \"\",\n  },\n  {\n    tenantid: \"7\",\n    type: \"FB\",\n    tenantName: \"myNonna's\",\n    timeRemaining: 2,\n    status: \"unresolved\",\n    date: \"-\",\n    institution: \"NHCS\",\n    score: \"\",\n  },\n  {\n    tenantid: \"8\",\n    type: \"Non-FB\",\n    tenantName: \"Comics Connection\",\n    timeRemaining: 10,\n    status: \"unresolved\",\n    date: \"-\",\n    institution: \"SNEC\",\n    score: \"\",\n  },\n];\n\nexport const tenants = [\n  {\n    tenantid: \"1\",\n    tenantName: \"Kopitiam\",\n    timeRemaining: 30,\n    status: \"unresolved\",\n    institution: \"1\",\n    latestScore: 0,\n    fbChecklist: [\n      {\n        id: \"1\",\n        category: \"A\",\n        text: \"FB-A-Question-1\",\n        checked: false,\n        comment: \"\",\n      },\n      {\n        id: \"2\",\n        category: \"A\",\n        text: \"FB-A-Question-2\",\n        checked: false,\n        comment: \"\",\n      },\n      {\n        id: \"3\",\n        category: \"A\",\n        text: \"FB-A-Question-3\",\n        checked: false,\n        comment: \"\",\n      },\n      {\n        id: \"4\",\n        category: \"A\",\n        text: \"FB-A-Question-4\",\n        checked: false,\n        comment: \"\",\n      },\n      {\n        id: \"5\",\n        category: \"B\",\n        text: \"FB-B-Question-1\",\n        checked: false,\n        comment: \"\",\n      },\n      {\n        id: \"6\",\n        category: \"B\",\n        text: \"FB-B-Question-2\",\n        checked: false,\n        comment: \"\",\n      },\n      {\n        id: \"7\",\n        category: \"B\",\n        text: \"FB-B-Question-3\",\n        checked: false,\n        comment: \"\",\n      },\n      {\n        id: \"8\",\n        category: \"B\",\n        text: \"FB-B-Question-4\",\n        checked: false,\n        comment: \"\",\n      },\n    ],\n  },\n  {\n    tenantid: \"2\",\n    tenantName: \"1983\",\n    timeRemaining: 2,\n    status: \"unresolved\",\n    institution: \"2\",\n    latestScore: 0,\n    score: [{ date: \"12-3-2021\", value: 0 }],\n  },\n  {\n    tenantid: \"3\",\n    tenantName: \"7-Eleven\",\n    timeRemaining: 10,\n    status: \"unresolved\",\n    institution: \"3\",\n    latestScore: 0,\n    score: [{ date: \"12-3-2021\", value: 0 }],\n    fbChecklist: [\n      {\n        id: \"1\",\n        category: \"A\",\n        text: \"FB-A-Question-1\",\n        checked: false,\n        comment: \"\",\n      },\n      {\n        id: \"2\",\n        category: \"A\",\n        text: \"FB-A-Question-2\",\n        checked: false,\n        comment: \"\",\n      },\n      {\n        id: \"3\",\n        category: \"A\",\n        text: \"FB-A-Question-3\",\n        checked: false,\n        comment: \"\",\n      },\n      {\n        id: \"4\",\n        category: \"A\",\n        text: \"FB-A-Question-4\",\n        checked: false,\n        comment: \"\",\n      },\n      {\n        id: \"5\",\n        category: \"B\",\n        text: \"FB-B-Question-1\",\n        checked: false,\n        comment: \"\",\n      },\n      {\n        id: \"6\",\n        category: \"B\",\n        text: \"FB-B-Question-2\",\n        checked: false,\n        comment: \"\",\n      },\n      {\n        id: \"7\",\n        category: \"B\",\n        text: \"FB-B-Question-3\",\n        checked: false,\n        comment: \"\",\n      },\n      {\n        id: \"8\",\n        category: \"B\",\n        text: \"FB-B-Question-4\",\n        checked: false,\n        comment: \"\",\n      },\n    ],\n  },\n  {\n    tenantid: \"4\",\n    tenantName: \"Kcuts\",\n    timeRemaining: 0,\n    status: \"resolved\",\n    institution: \"4\",\n    latestScore: 0,\n    score: [{ date: \"12-3-2021\", value: 0 }],\n    fbChecklist: [\n      {\n        id: \"1\",\n        category: \"A\",\n        text: \"FB-A-Question-1\",\n        checked: false,\n        comment: \"\",\n      },\n      {\n        id: \"2\",\n        category: \"A\",\n        text: \"FB-A-Question-2\",\n        checked: false,\n        comment: \"\",\n      },\n      {\n        id: \"3\",\n        category: \"A\",\n        text: \"FB-A-Question-3\",\n        checked: false,\n        comment: \"\",\n      },\n      {\n        id: \"4\",\n        category: \"A\",\n        text: \"FB-A-Question-4\",\n        checked: false,\n        comment: \"\",\n      },\n      {\n        id: \"5\",\n        category: \"B\",\n        text: \"FB-B-Question-1\",\n        checked: false,\n        comment: \"\",\n      },\n      {\n        id: \"6\",\n        category: \"B\",\n        text: \"FB-B-Question-2\",\n        checked: false,\n        comment: \"\",\n      },\n      {\n        id: \"7\",\n        category: \"B\",\n        text: \"FB-B-Question-3\",\n        checked: false,\n        comment: \"\",\n      },\n      {\n        id: \"8\",\n        category: \"B\",\n        text: \"FB-B-Question-4\",\n        checked: false,\n        comment: \"\",\n      },\n    ],\n  },\n  {\n    tenantid: \"5\",\n    tenantName: \"Kaki Makan\",\n    timeRemaining: 0,\n    status: \"resolved\",\n    date: \"27-02-20\",\n    institution: \"5\",\n    latestScore: 0,\n    score: [{ date: \"12-3-2021\", value: 0 }],\n    fbChecklist: [\n      {\n        id: \"1\",\n        category: \"A\",\n        text: \"FB-A-Question-1\",\n        checked: false,\n        comment: \"\",\n      },\n      {\n        id: \"2\",\n        category: \"A\",\n        text: \"FB-A-Question-2\",\n        checked: false,\n        comment: \"\",\n      },\n      {\n        id: \"3\",\n        category: \"A\",\n        text: \"FB-A-Question-3\",\n        checked: false,\n        comment: \"\",\n      },\n      {\n        id: \"4\",\n        category: \"A\",\n        text: \"FB-A-Question-4\",\n        checked: false,\n        comment: \"\",\n      },\n      {\n        id: \"5\",\n        category: \"B\",\n        text: \"FB-B-Question-1\",\n        checked: false,\n        comment: \"\",\n      },\n      {\n        id: \"6\",\n        category: \"B\",\n        text: \"FB-B-Question-2\",\n        checked: false,\n        comment: \"\",\n      },\n      {\n        id: \"7\",\n        category: \"B\",\n        text: \"FB-B-Question-3\",\n        checked: false,\n        comment: \"\",\n      },\n      {\n        id: \"8\",\n        category: \"B\",\n        text: \"FB-B-Question-4\",\n        checked: false,\n        comment: \"\",\n      },\n    ],\n  },\n  {\n    tenantid: \"6\",\n    tenantName: \"7-Eleven\",\n    timeRemaining: 0,\n    status: \"resolved\",\n    date: \"13-01-20\",\n    institution: \"6\",\n    latestScore: 0,\n    score: [{ date: \"12-3-2021\", value: 0 }],\n    fbChecklist: [\n      {\n        id: \"1\",\n        category: \"A\",\n        text: \"FB-A-Question-1\",\n        checked: false,\n        comment: \"\",\n      },\n      {\n        id: \"2\",\n        category: \"A\",\n        text: \"FB-A-Question-2\",\n        checked: false,\n        comment: \"\",\n      },\n      {\n        id: \"3\",\n        category: \"A\",\n        text: \"FB-A-Question-3\",\n        checked: false,\n        comment: \"\",\n      },\n      {\n        id: \"4\",\n        category: \"A\",\n        text: \"FB-A-Question-4\",\n        checked: false,\n        comment: \"\",\n      },\n      {\n        id: \"5\",\n        category: \"B\",\n        text: \"FB-B-Question-1\",\n        checked: false,\n        comment: \"\",\n      },\n      {\n        id: \"6\",\n        category: \"B\",\n        text: \"FB-B-Question-2\",\n        checked: false,\n        comment: \"\",\n      },\n      {\n        id: \"7\",\n        category: \"B\",\n        text: \"FB-B-Question-3\",\n        checked: false,\n        comment: \"\",\n      },\n      {\n        id: \"8\",\n        category: \"B\",\n        text: \"FB-B-Question-4\",\n        checked: false,\n        comment: \"\",\n      },\n    ],\n  },\n  {\n    tenantid: \"7\",\n    tenantName: \"myNonna's\",\n    timeRemaining: 2,\n    status: \"unresolved\",\n    date: \"-\",\n    institution: \"1\",\n    latestScore: 0,\n    score: [{ date: \"12-3-2021\", value: 0 }],\n    fbChecklist: [\n      {\n        id: \"1\",\n        category: \"A\",\n        text: \"FB-A-Question-1\",\n        checked: false,\n        comment: \"\",\n      },\n      {\n        id: \"2\",\n        category: \"A\",\n        text: \"FB-A-Question-2\",\n        checked: false,\n        comment: \"\",\n      },\n      {\n        id: \"3\",\n        category: \"A\",\n        text: \"FB-A-Question-3\",\n        checked: false,\n        comment: \"\",\n      },\n      {\n        id: \"4\",\n        category: \"A\",\n        text: \"FB-A-Question-4\",\n        checked: false,\n        comment: \"\",\n      },\n      {\n        id: \"5\",\n        category: \"B\",\n        text: \"FB-B-Question-1\",\n        checked: false,\n        comment: \"\",\n      },\n      {\n        id: \"6\",\n        category: \"B\",\n        text: \"FB-B-Question-2\",\n        checked: false,\n        comment: \"\",\n      },\n      {\n        id: \"7\",\n        category: \"B\",\n        text: \"FB-B-Question-3\",\n        checked: false,\n        comment: \"\",\n      },\n      {\n        id: \"8\",\n        category: \"B\",\n        text: \"FB-B-Question-4\",\n        checked: false,\n        comment: \"\",\n      },\n    ],\n  },\n  {\n    tenantid: \"8\",\n    tenantName: \"Comics Connection\",\n    timeRemaining: 10,\n    status: \"unresolved\",\n    date: \"-\",\n    institution: \"2\",\n    latestScore: 0,\n    score: [{ date: \"12-3-2021\", value: 0 }],\n    fbChecklist: [\n      {\n        id: \"1\",\n        category: \"A\",\n        text: \"FB-A-Question-1\",\n        checked: false,\n        comment: \"\",\n      },\n      {\n        id: \"2\",\n        category: \"A\",\n        text: \"FB-A-Question-2\",\n        checked: false,\n        comment: \"\",\n      },\n      {\n        id: \"3\",\n        category: \"A\",\n        text: \"FB-A-Question-3\",\n        checked: false,\n        comment: \"\",\n      },\n      {\n        id: \"4\",\n        category: \"A\",\n        text: \"FB-A-Question-4\",\n        checked: false,\n        comment: \"\",\n      },\n      {\n        id: \"5\",\n        category: \"B\",\n        text: \"FB-B-Question-1\",\n        checked: false,\n        comment: \"\",\n      },\n      {\n        id: \"6\",\n        category: \"B\",\n        text: \"FB-B-Question-2\",\n        checked: false,\n        comment: \"\",\n      },\n      {\n        id: \"7\",\n        category: \"B\",\n        text: \"FB-B-Question-3\",\n        checked: false,\n        comment: \"\",\n      },\n      {\n        id: \"8\",\n        category: \"B\",\n        text: \"FB-B-Question-4\",\n        checked: false,\n        comment: \"\",\n      },\n    ],\n  },\n];\n\nexport const categories = [\"all\", \"unresolved\", \"resolved\"];\n\nexport const auditors = [\n  {\n    id: \"1\",\n    name: \"Marcus Ho\",\n    dob: \"19 January 1998\",\n  },\n];\n\nexport const institutions = [\n  {\n    id: \"1\",\n    name: \"CGH\",\n    tenantNames: [],\n    tenantIDs: [],\n    imageUrl: \"../images/cgh.png\",\n  },\n  {\n    id: \"2\",\n    name: \"KKH\",\n    tenantNames: [],\n    tenantIDs: [],\n    imageUrl: \"../images/kkh.png\",\n  },\n  {\n    id: \"3\",\n    name: \"SGH\",\n    tenantNames: [],\n    tenantIDs: [],\n    imageUrl: \"../images/sgh.png\",\n  },\n  {\n    id: \"4\",\n    name: \"SKH\",\n    tenantNames: [],\n    tenantIDs: [],\n    imageUrl: \"../images/skh.png\",\n  },\n  {\n    id: \"5\",\n    name: \"NCCS\",\n    tenantNames: [],\n    tenantIDs: [],\n    imageUrl: \"../images/nccs.png\",\n  },\n  {\n    id: \"6\",\n    name: \"NDCS\",\n    tenantNames: [],\n    tenantIDs: [],\n    imageUrl: \"../images/ndcs.png\",\n  },\n];\n\nexport const checklistTypes = [\n  \"FB Checklist\",\n  \"Non-FB Checklist\",\n  \"SM Checklist\",\n];\n\nexport const fbChecklist = [\n  {\n    id: \"1\",\n    category: \"A\",\n    text:\n      \"Shop is open and ready to service patients/visitors according to operating hours.\",\n    modalOpen: false,\n  },\n  {\n    id: \"2\",\n    category: \"A\",\n    text: \"Staff Attendance: adequate staff for peak and non-peak hours.\",\n    modalOpen: false,\n  },\n  {\n    id: \"3\",\n    category: \"A\",\n    text: \"At least one (1) clearly assigned person in-charge on site.\",\n    modalOpen: false,\n  },\n  {\n    id: \"4\",\n    category: \"A\",\n    text:\n      \"Staff who are unfit for work due to illness should not report to work).\",\n    modalOpen: false,\n  },\n  {\n    id: \"5\",\n    category: \"B\",\n    text: \"Cleaning and maintenance records for equipment, ventilation and exhaust system.\",\n    modalOpen: false,\n  },\n  {\n    id: \"6\",\n    category: \"B\",\n    text: \"Adequate and regular pest control.\",\n    modalOpen: false,\n  },\n  {\n    id: \"7\",\n    category: \"B\",\n    text: \"Goods and equipment are within shop boundary.\",\n    modalOpen: false,\n  },\n  {\n    id: \"8\",\n    category: \"B\",\n    text: \"Store display/ Shop front is neat and tidy.\",\n    modalOpen: false,\n  },\n];\n","/Users/mac/Documents/SingHealthAuditApp/frontend/src/components/Audits.js",["162","163","164"],"import React, { useRef } from \"react\";\nimport { FaAngleRight } from \"react-icons/fa\";\nimport { Link } from \"react-router-dom\";\n\nfunction Audits({ homeAudits }) {\n  //to display the audits on the home page\n  //change color based on whether it is resolved or not\n  const homeAuditGridRef = useRef(null);\n\n  return (\n    <div>\n      {homeAudits.map((audit, index) => {\n        const { tenantid, tenantName, timeRemaining, status, date } = audit;\n\n        return (\n          <Link key={index} to={`/tenant/${tenantid}`}>\n            <div\n              className={`${\n                audit.status === \"resolved\"\n                  ? \"homeaudit-grid-resolved\"\n                  : \"homeaudit-grid-unresolved\"\n              }`}\n              ref={homeAuditGridRef}\n            >\n              <div className=\"tenantName-gridItem\">{tenantName}</div>\n              <div className=\"btn-homeToTenant\">\n                <FaAngleRight />\n              </div>\n            </div>\n          </Link>\n        );\n      })}\n    </div>\n  );\n}\n\nexport default Audits;\n","/Users/mac/Documents/SingHealthAuditApp/frontend/src/components/HomeCategories.js",[],"/Users/mac/Documents/SingHealthAuditApp/frontend/src/AuthenticationService.js",[],"/Users/mac/Documents/SingHealthAuditApp/frontend/src/components/Modal.js",["165","166"],"import React, { useState, useContext } from \"react\";\n// import ReactDOM from \"react-dom\";\nimport { Context } from \"../Context\";\nimport { FaRegTimesCircle } from \"react-icons/fa\";\n\nfunction Modal({ questionId, tenantId }) {\n  //Context: state of modal (whether it is open or not)\n  const { fbChecklistState, closeQuestionModal } = useContext(Context);\n  //state for comments and updating comments\n  const { comment, setComment, updateTenantComment } = useContext(Context);\n  //state of displayedComments\n  const { tenantsState } = useContext(Context);\n\n  //handle change in textbox by updating comment state\n  const handleChange = (event) => {\n    console.log(questionId);\n    setComment(event.target.value);\n  };\n  //handle submit\n  const handleSubmit = (event) => {\n    updateTenantComment(tenantId, questionId);\n  };\n\n  const checklistQuestion = fbChecklistState.find((question) => {\n    return question.id === questionId;\n  });\n\n  console.log(checklistQuestion.modalOpen);\n\n  return (\n    <>\n      <section\n        className={`${\n          fbChecklistState.find((question) => {\n            return question.id === questionId;\n          }).modalOpen\n            ? \"modal-overlay show-modal\"\n            : \"modal-overlay\"\n        }`}\n      >\n        <div className=\"modal-container\">\n          <FaRegTimesCircle\n            className=\"modal-closebtn\"\n            onClick={() => {\n              closeQuestionModal(questionId);\n            }}\n          />\n          <div>Write a Comment</div>\n          <textarea\n            className=\"modal-commentbox\"\n            value={comment}\n            onChange={(event) => {\n              handleChange(event);\n            }}\n          />\n          <button\n            onClick={() => {\n              handleSubmit();\n            }}\n          >\n            Submit\n          </button>\n        </div>\n      </section>\n    </>\n  );\n\n  // document.getElementById(\"portal\")\n}\n\nexport default Modal;\n","/Users/mac/Documents/SingHealthAuditApp/frontend/src/components/Question.js",["167","168"],"import React, { useContext, useEffect } from \"react\";\n\nimport { FaRegEdit } from \"react-icons/fa\";\nimport { Context } from \"../Context\";\n\nfunction Question({ fb_qn_id, requirement }) {\n  //Context: state of modal (whether it is open or not)\n  const {\n    openQuestionModal,\n    fbReportState,\n    setFbReportState,\n    fbChecklist,\n  } = useContext(Context);\n  //Context: state of tenants to update checklist check\n  // const { tenantsState, updateFbChecklistChecked } = useContext(Context);\n  //Coontext: state of displayedComments\n  //function to handle change when checkbox is clicked\n\n  const handleChange = (questionId) => {\n    console.log(questionId);\n    setFbReportState((prevState) => {\n      return prevState.map((question) =>\n        question.qn_id === questionId\n          ? { ...question, status: !question.status }\n          : question\n      );\n    });\n\n    // if (fbReportState.length === fbChecklist.length) {\n    //   console.log(fbReportState);\n    // }\n  };\n\n  useEffect(() => {\n    if (fbReportState.length === 96) {\n      console.log(fbReportState);\n    }\n  }, [fbReportState]);\n\n  return (\n    <div>\n      <span>{requirement}</span>\n      <input\n        type=\"checkbox\"\n        // id={id}\n        // name={`Check${id}`}\n        onChange={() => {\n          handleChange(fb_qn_id);\n        }}\n      />\n      <FaRegEdit\n        onClick={() => {\n          // openQuestionModal(fb_qn_id);\n        }}\n      />\n\n      <div>Comment: </div>\n    </div>\n  );\n}\n\nexport default Question;\n","/Users/mac/Documents/SingHealthAuditApp/frontend/src/styles.js",[],"/Users/mac/Documents/SingHealthAuditApp/frontend/src/pages/AuditorHome.js",["169"],"import React, { useState } from \"react\";\nimport { audits } from \"../data\";\nimport { Link } from \"react-router-dom\";\nimport HomeCategories from \"../components/HomeCategories\";\nimport Audits from \"../components/Audits\";\nimport Navbar from \"../Navbar\";\n\nfunction AuditorHome() {\n  //home audits displayed\n  const [homeAudits, setHomeAudits] = useState(audits);\n\n  //filter audits based on category\n  const filterAudits = (category) => {\n    if (category === \"all\") {\n      setHomeAudits(audits);\n    } else {\n      const filteredAudits = audits.filter(\n        (audit) => audit.status === category\n      );\n      setHomeAudits(filteredAudits);\n    }\n  };\n\n  return (\n    <main>\n      <Navbar />\n      <div>\n        <HomeCategories filterAudits={filterAudits} />\n        <Audits homeAudits={homeAudits} />\n      </div>\n    </main>\n  );\n}\n\nexport default AuditorHome;\n","/Users/mac/Documents/SingHealthAuditApp/frontend/src/pages/TenantHome.js",[],"/Users/mac/Documents/SingHealthAuditApp/frontend/src/pages/ManagerHome.js",["170","171","172","173","174"],"import React, { useState } from \"react\";\nimport { audits } from \"../data\";\nimport { Link } from \"react-router-dom\";\nimport HomeCategories from \"../components/HomeCategories\";\nimport Audits from \"../components/Audits\";\nimport Navbar from \"../Navbar\";\n\nfunction ManagerHome() {\n  return (\n    <main>\n      <Navbar />\n      <div>\n        This is manager homepage\n      </div>\n    </main>\n  );\n}\n\nexport default ManagerHome;","/Users/mac/Documents/SingHealthAuditApp/frontend/src/pages/Store.js",["175"],"import React, { useState } from \"react\";\n// import { audits } from \"../data\";\n// import { Link } from \"react-router-dom\";\n// import HomeCategories from \"../components/HomeCategories\";\n// import Audits from \"../components/Audits\";\nimport Navbar from \"../Navbar\";\n\nfunction Store() {\n  return (\n    <main>\n      <Navbar />\n      <div>\n        This is store page\n      </div>\n    </main>\n  );\n}\n\nexport default Store;","/Users/mac/Documents/SingHealthAuditApp/frontend/src/pages/EditAccount.js",["176"],"import React, { useState, useEffect, useContext } from \"react\";\nimport { Typography, Button, TextField, FormGroup } from \"@material-ui/core\";\nimport axios from \"axios\";\n\nimport { Context } from \"../Context\";\nimport Navbar from \"../Navbar\";\nimport useStyles from \"../styles\";\n\nfunction EditAccount() {\n\n  const {\n    accountState,\n    getAccountInfo\n  } = useContext(Context);\n\n  // All possible account info categories for 3 types of users\n  const {\n    acc_id,\n    branch_id,\n    employee_id,\n    email,\n    username,\n    first_name,\n    last_name,\n    hp,\n    mgr_id,\n    role_id,\n    store_id,\n    type_id,\n  } = accountState;\n\n  const [usernameState, setUsernameState] = useState(username);\n  const [firstnameState, setFirstnameState] = useState(first_name);\n  const [lastnameState, setLastnameState] = useState(last_name);\n  const [emailState, setEmailState] = useState(email);\n  const [hpState, setHpState] = useState(hp);\n\n  useEffect(() => {\n    getAccountInfo();\n  }, []);\n\n  const API_URL = \"http://localhost:8080\";\n  const styles = useStyles();\n  const disabledInfo = [\n    \"Role\", \n    \"Account ID\", \n    \"Employee ID\", \n    \"Branch ID\", \n    \"Mgr ID\", \n    \"Store ID\", \n    \"Store Type\"\n  ];\n\n  const EditAccountInfo = (props) => {\n    if (props.info == null) {\n      return null\n    } else if (disabledInfo.includes(props.category)) {\n      return <TextField \n        label={props.category} \n        defaultValue={props.info} \n        disabled={true}\n      />\n    } else {\n      console.log(\"You shouldn't use this function.\")\n    }\n  }\n\n  function postAccountChange(newUsername, newFirstName, newLastName, newEmail, newHp) {\n    console.log(\"This is posting account changes\");\n    let payload = {\n      username: newUsername,\n      first_name: newFirstName,\n      last_name: newLastName,\n      email: newEmail,\n      hp: newHp,\n    };\n    console.log(payload);\n    let FormData = require(\"form-data\");\n    let formdata = new FormData();\n    formdata.append(\"changes\", JSON.stringify(payload));\n    return axios\n      .post(\n        `${API_URL}/account/postProfileUpdate`,\n        formdata,\n        {\n          headers: {\n            \"Content-Type\": `multipart/form-data; boundary=${formdata._boundary}`,\n          },\n        }\n      )\n      .then((response) => {\n        console.log(response);\n      })\n      .catch(() => {\n        console.log(\"Failed account change submission\");\n      });\n  }\n\n  return (\n    <main className={styles.main}>\n      <Navbar />\n      <br />\n      <Typography variant=\"h3\" align=\"center\">Edit Account</Typography>\n      <FormGroup column=\"true\">\n        <TextField label=\"Username\" onChange={(e) => setUsernameState(e.target.value)} />\n        <TextField label=\"First Name\" onChange={(e) => setFirstnameState(e.target.value)} />\n        <TextField label=\"Last Name\" onChange={(e) => setLastnameState(e.target.value)} />\n        <TextField label=\"Email\" onChange={(e) => setEmailState(e.target.value)} />\n        <TextField label=\"Contact Number\" onChange={(e) => setHpState(e.target.value)} />\n        <br />\n        <EditAccountInfo category=\"Role\" info={role_id}/>\n        <EditAccountInfo category=\"Account ID\" info={acc_id}/>\n        <EditAccountInfo category=\"Branch ID\" info={branch_id}/>\n        <EditAccountInfo category=\"Employee ID\" info={employee_id} />\n        <EditAccountInfo category=\"Mgr ID\" info={mgr_id}/>\n        <EditAccountInfo category=\"Store ID\" info={store_id}/>\n        <EditAccountInfo category=\"Store Type\" info={type_id}/>\n        <br />\n      </FormGroup>\n      <Button\n        className={styles.buttons}\n        align=\"center\"\n        variant=\"outlined\"\n        color=\"primary\"\n        fullWidth\n        onClick={() => \n          postAccountChange(\n            usernameState,\n            firstnameState,\n            lastnameState,\n            emailState,\n            hpState,\n          )\n        }\n      >\n        Submit\n      </Button>\n    </main>\n  )\n}\n\nexport default EditAccount;","/Users/mac/Documents/SingHealthAuditApp/frontend/src/pages/EditPassword.js",["177","178","179"],"import React, { useState, useContext } from \"react\";\nimport { Typography, Button, TextField, FormGroup } from \"@material-ui/core\";\nimport axios from \"axios\";\n\nimport { Context } from \"../Context\";\nimport useStyles from \"../styles\";\nimport Navbar from \"../Navbar\";\n\nfunction EditPassword() {\n  const {\n    accountState,\n    getAccountInfo\n  } = useContext(Context);\n\n  const API_URL = \"http://localhost:8080\";\n  const [passwordState, setPasswordState] = useState(\"\");\n  const [confirmPasswordState, setConfirmPasswordState] = useState(\"\");\n  const styles = useStyles();\n\n  function submitNewPassword(newPassword, confirmedNewPassword) {\n    if (newPassword != confirmedNewPassword) {\n      console.log(\"Two passwords are not the same.\")\n    } else {\n      postPasswordChange(newPassword);\n      console.log(\"Password change updated.\")\n    }\n  }\n\n  function postPasswordChange(newPassword) {\n    console.log(\"This is posting password change\");\n    let FormData = require(\"form-data\");\n    let formdata = new FormData();\n    formdata.append(\"new_password\", newPassword);\n    return axios\n      .post(\n        `${API_URL}/account/postPasswordUpdate`,\n        formdata,\n        {\n          headers: {\n            \"Content-Type\": `multipart/form-data; boundary=${formdata._boundary}`,\n          },\n        }\n      )\n      .then((response) => {\n        console.log(response);\n      })\n      .catch(() => {\n        console.log(\"Failed password change submission\");\n      })\n  }\n\n  return (\n    <main className={styles.main}>\n      <Navbar />\n      <br />\n      <Typography variant=\"h3\" align=\"center\">Edit Password</Typography>\n      <FormGroup column=\"true\">\n        <TextField label=\"New Password\" onChange={(e) => setPasswordState(e.target.value)}/>\n        <TextField label=\"Confirm New Password\" onChange={(e) => setConfirmPasswordState(e.target.value)}/>\n      </FormGroup>\n      <Button \n        align=\"center\"\n        variant=\"outlined\"\n        color=\"primary\"\n        className={styles.buttons}\n        fullWidth\n        onClick={() => submitNewPassword(passwordState, confirmPasswordState)}\n      >\n        Submit\n      </Button>\n    </main>\n  )\n}\n\nexport default EditPassword;","/Users/mac/Documents/SingHealthAuditApp/frontend/src/pages/Chat.js",["180","181","182","183","184"],"import React, { useEffect, useContext } from \"react\";\nimport { Link } from 'react-router-dom';\nimport { Typography, Button } from \"@material-ui/core\";\nimport axios from \"axios\";\n\nimport { Context } from \"../Context\";\nimport Navbar from \"../Navbar\";\nimport useStyles from \"../styles\";\nimport { FormGroup } from \"@material-ui/core\";\n\nfunction Chat() {\n\n  const {\n    allChatsOfUserState,\n    getAllChatsOfUser\n  } = useContext(Context);\n\n  useEffect(() => {\n    getAllChatsOfUser();\n  }, []);\n\n  const styles = useStyles();\n\n  return (\n    <main className={styles.main}>\n      <Navbar />\n      <br />\n      <Typography variant=\"h3\" align=\"center\">Chat</Typography>\n      <Button\n        className={styles.buttons}\n        align=\"center\"\n        variant=\"outlined\"\n        color=\"primary\"\n        fullWidth\n      >\n        Get All Chats of User\n      </Button>\n    </main>\n  )\n}\n\nexport default Chat;",{"ruleId":"185","replacedBy":"186"},{"ruleId":"187","replacedBy":"188"},{"ruleId":"189","severity":1,"message":"190","line":1,"column":8,"nodeType":"191","messageId":"192","endLine":1,"endColumn":12},{"ruleId":"189","severity":1,"message":"193","line":4,"column":8,"nodeType":"191","messageId":"192","endLine":4,"endColumn":14},{"ruleId":"194","severity":1,"message":"195","line":31,"column":33,"nodeType":"196","endLine":31,"endColumn":38},{"ruleId":"189","severity":1,"message":"197","line":5,"column":60,"nodeType":"191","messageId":"192","endLine":5,"endColumn":71},{"ruleId":"198","severity":1,"message":"199","line":27,"column":6,"nodeType":"200","endLine":27,"endColumn":21,"suggestions":"201"},{"ruleId":"189","severity":1,"message":"202","line":32,"column":17,"nodeType":"191","messageId":"192","endLine":32,"endColumn":19},{"ruleId":"189","severity":1,"message":"203","line":5,"column":8,"nodeType":"191","messageId":"192","endLine":5,"endColumn":24},{"ruleId":"189","severity":1,"message":"204","line":26,"column":21,"nodeType":"191","messageId":"192","endLine":26,"endColumn":25},{"ruleId":"189","severity":1,"message":"205","line":34,"column":39,"nodeType":"191","messageId":"192","endLine":34,"endColumn":45},{"ruleId":"189","severity":1,"message":"204","line":19,"column":23,"nodeType":"191","messageId":"192","endLine":19,"endColumn":27},{"ruleId":"189","severity":1,"message":"206","line":19,"column":29,"nodeType":"191","messageId":"192","endLine":19,"endColumn":40},{"ruleId":"207","severity":1,"message":"208","line":23,"column":17,"nodeType":"209","endLine":23,"endColumn":63},{"ruleId":"198","severity":1,"message":"199","line":34,"column":6,"nodeType":"200","endLine":34,"endColumn":8,"suggestions":"210"},{"ruleId":"189","severity":1,"message":"211","line":37,"column":9,"nodeType":"191","messageId":"192","endLine":37,"endColumn":16},{"ruleId":"189","severity":1,"message":"212","line":13,"column":24,"nodeType":"191","messageId":"192","endLine":13,"endColumn":35},{"ruleId":"189","severity":1,"message":"213","line":23,"column":5,"nodeType":"191","messageId":"192","endLine":23,"endColumn":18},{"ruleId":"189","severity":1,"message":"205","line":24,"column":5,"nodeType":"191","messageId":"192","endLine":24,"endColumn":11},{"ruleId":"189","severity":1,"message":"214","line":25,"column":5,"nodeType":"191","messageId":"192","endLine":25,"endColumn":16},{"ruleId":"189","severity":1,"message":"215","line":26,"column":5,"nodeType":"191","messageId":"192","endLine":26,"endColumn":16},{"ruleId":"189","severity":1,"message":"216","line":31,"column":9,"nodeType":"191","messageId":"192","endLine":31,"endColumn":21},{"ruleId":"189","severity":1,"message":"217","line":1,"column":50,"nodeType":"191","messageId":"192","endLine":1,"endColumn":61},{"ruleId":"189","severity":1,"message":"218","line":2,"column":10,"nodeType":"191","messageId":"192","endLine":2,"endColumn":14},{"ruleId":"189","severity":1,"message":"219","line":5,"column":8,"nodeType":"191","messageId":"192","endLine":5,"endColumn":13},{"ruleId":"189","severity":1,"message":"220","line":14,"column":5,"nodeType":"191","messageId":"192","endLine":14,"endColumn":24},{"ruleId":"189","severity":1,"message":"221","line":17,"column":5,"nodeType":"191","messageId":"192","endLine":17,"endColumn":21},{"ruleId":"198","severity":1,"message":"222","line":32,"column":6,"nodeType":"200","endLine":32,"endColumn":8,"suggestions":"223"},{"ruleId":"198","severity":1,"message":"224","line":58,"column":6,"nodeType":"200","endLine":58,"endColumn":8,"suggestions":"225"},{"ruleId":"198","severity":1,"message":"226","line":60,"column":26,"nodeType":"191","endLine":60,"endColumn":37},{"ruleId":"189","severity":1,"message":"227","line":99,"column":10,"nodeType":"191","messageId":"192","endLine":99,"endColumn":27},{"ruleId":"189","severity":1,"message":"228","line":99,"column":29,"nodeType":"191","messageId":"192","endLine":99,"endColumn":48},{"ruleId":"189","severity":1,"message":"229","line":2,"column":42,"nodeType":"191","messageId":"192","endLine":2,"endColumn":45},{"ruleId":"189","severity":1,"message":"230","line":134,"column":7,"nodeType":"191","messageId":"192","endLine":134,"endColumn":21},{"ruleId":"189","severity":1,"message":"231","line":1,"column":8,"nodeType":"191","messageId":"192","endLine":1,"endColumn":13},{"ruleId":"189","severity":1,"message":"232","line":3,"column":7,"nodeType":"191","messageId":"192","endLine":3,"endColumn":12},{"ruleId":"189","severity":1,"message":"213","line":13,"column":39,"nodeType":"191","messageId":"192","endLine":13,"endColumn":52},{"ruleId":"189","severity":1,"message":"205","line":13,"column":54,"nodeType":"191","messageId":"192","endLine":13,"endColumn":60},{"ruleId":"189","severity":1,"message":"233","line":13,"column":62,"nodeType":"191","messageId":"192","endLine":13,"endColumn":66},{"ruleId":"189","severity":1,"message":"234","line":1,"column":17,"nodeType":"191","messageId":"192","endLine":1,"endColumn":25},{"ruleId":"189","severity":1,"message":"235","line":12,"column":11,"nodeType":"191","messageId":"192","endLine":12,"endColumn":23},{"ruleId":"189","severity":1,"message":"236","line":9,"column":5,"nodeType":"191","messageId":"192","endLine":9,"endColumn":22},{"ruleId":"189","severity":1,"message":"237","line":12,"column":5,"nodeType":"191","messageId":"192","endLine":12,"endColumn":16},{"ruleId":"189","severity":1,"message":"218","line":3,"column":10,"nodeType":"191","messageId":"192","endLine":3,"endColumn":14},{"ruleId":"189","severity":1,"message":"234","line":1,"column":17,"nodeType":"191","messageId":"192","endLine":1,"endColumn":25},{"ruleId":"189","severity":1,"message":"238","line":2,"column":10,"nodeType":"191","messageId":"192","endLine":2,"endColumn":16},{"ruleId":"189","severity":1,"message":"218","line":3,"column":10,"nodeType":"191","messageId":"192","endLine":3,"endColumn":14},{"ruleId":"189","severity":1,"message":"239","line":4,"column":8,"nodeType":"191","messageId":"192","endLine":4,"endColumn":22},{"ruleId":"189","severity":1,"message":"240","line":5,"column":8,"nodeType":"191","messageId":"192","endLine":5,"endColumn":14},{"ruleId":"189","severity":1,"message":"234","line":1,"column":17,"nodeType":"191","messageId":"192","endLine":1,"endColumn":25},{"ruleId":"198","severity":1,"message":"199","line":40,"column":6,"nodeType":"200","endLine":40,"endColumn":8,"suggestions":"241"},{"ruleId":"189","severity":1,"message":"242","line":11,"column":5,"nodeType":"191","messageId":"192","endLine":11,"endColumn":17},{"ruleId":"189","severity":1,"message":"243","line":12,"column":5,"nodeType":"191","messageId":"192","endLine":12,"endColumn":19},{"ruleId":"244","severity":1,"message":"245","line":21,"column":21,"nodeType":"246","messageId":"247","endLine":21,"endColumn":23},{"ruleId":"189","severity":1,"message":"218","line":2,"column":10,"nodeType":"191","messageId":"192","endLine":2,"endColumn":14},{"ruleId":"189","severity":1,"message":"248","line":4,"column":8,"nodeType":"191","messageId":"192","endLine":4,"endColumn":13},{"ruleId":"189","severity":1,"message":"249","line":9,"column":10,"nodeType":"191","messageId":"192","endLine":9,"endColumn":19},{"ruleId":"189","severity":1,"message":"250","line":14,"column":5,"nodeType":"191","messageId":"192","endLine":14,"endColumn":24},{"ruleId":"198","severity":1,"message":"251","line":20,"column":6,"nodeType":"200","endLine":20,"endColumn":8,"suggestions":"252"},"no-native-reassign",["253"],"no-negated-in-lhs",["254"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Navbar' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'navBarImage' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getAccountInfo'. Either include it or remove the dependency array.","ArrayExpression",["255"],"'id' is assigned a value but never used.","'institutionImage' is defined but never used.","'name' is assigned a value but never used.","'status' is assigned a value but never used.","'tenantNames' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["256"],"'API_URL' is assigned a value but never used.","'updateAudit' is assigned a value but never used.","'timeRemaining' is assigned a value but never used.","'institution' is assigned a value but never used.","'latestScore' is assigned a value but never used.","'tenantAudits' is assigned a value but never used.","'useCallback' is defined but never used.","'Link' is defined but never used.","'Modal' is defined but never used.","'setFbChecklistState' is assigned a value but never used.","'setFbReportState' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getFbChecklistQuestions'. Either include it or remove the dependency array.",["257"],"React Hook useCallback has a missing dependency: 'createFbReportState'. Either include it or remove the dependency array.",["258"],"React Hook useCallback does nothing when called with only one argument. Did you forget to pass an array of dependencies?","'institutionsState' is assigned a value but never used.","'setInstitutionstate' is assigned a value but never used.","'Box' is defined but never used.","'LoginComponent' is defined but never used.","'React' is defined but never used.","'users' is assigned a value but never used.","'date' is assigned a value but never used.","'useState' is defined but never used.","'tenantsState' is assigned a value but never used.","'openQuestionModal' is assigned a value but never used.","'fbChecklist' is assigned a value but never used.","'audits' is defined but never used.","'HomeCategories' is defined but never used.","'Audits' is defined but never used.",["259"],"'accountState' is assigned a value but never used.","'getAccountInfo' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'axios' is defined but never used.","'FormGroup' is defined but never used.","'allChatsOfUserState' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getAllChatsOfUser'. Either include it or remove the dependency array.",["260"],"no-global-assign","no-unsafe-negation",{"desc":"261","fix":"262"},{"desc":"263","fix":"264"},{"desc":"265","fix":"266"},{"desc":"267","fix":"268"},{"desc":"263","fix":"269"},{"desc":"270","fix":"271"},"Update the dependencies array to be: [getAccountInfo, toggleClicked]",{"range":"272","text":"273"},"Update the dependencies array to be: [getAccountInfo]",{"range":"274","text":"275"},"Update the dependencies array to be: [getFbChecklistQuestions]",{"range":"276","text":"277"},"Update the dependencies array to be: [createFbReportState]",{"range":"278","text":"279"},{"range":"280","text":"275"},"Update the dependencies array to be: [getAllChatsOfUser]",{"range":"281","text":"282"},[939,954],"[getAccountInfo, toggleClicked]",[702,704],"[getAccountInfo]",[1018,1020],"[getFbChecklistQuestions]",[1813,1815],"[createFbReportState]",[977,979],[486,488],"[getAllChatsOfUser]"]