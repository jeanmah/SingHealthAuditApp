[{"/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/index.js":"1","/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/App.js":"2","/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/Context.js":"3","/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/pages/Tenant.js":"4","/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/pages/Account.js":"5","/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/pages/Institutions.js":"6","/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/pages/HomeAuditor.js":"7","/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/pages/FbChecklist.js":"8","/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/pages/EditAccount.js":"9","/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/pages/Error.js":"10","/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/pages/Loading.js":"11","/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/pages/Institution.js":"12","/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/pages/ManagerHome.js":"13","/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/pages/TenantHome.js":"14","/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/pages/Store.js":"15","/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/pages/EditPassword.js":"16","/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/pages/Chat.js":"17","/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/pages/AuditReport.js":"18","/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/components/testJwt/Login.js":"19","/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/components/testJwt/AuthenticatedRoute.js":"20","/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/data.js":"21","/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/AuthenticationService.js":"22","/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/Navbar.js":"23","/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/components/HomeCategories.js":"24","/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/components/Audits.js":"25","/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/components/HomeAuditorCards.js":"26","/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/styles.js":"27","/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/components/InstitutionsCards.js":"28","/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/components/Question.js":"29","/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/components/HomeAuditorTabs.js":"30","/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/pages/SMAChecklist.js":"31","/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/pages/NonFbChecklist.js":"32","/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/pages/TenantReport.js":"33","/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/pages/AllChats.js":"34","/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/pages/StoreReport.js":"35","/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/pages/Announcements.js":"36","/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/pages/AuditEmail.js":"37","/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/components/LimitedNotificationRow.js":"38","/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/components/ReportQuestion.js":"39","/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/components/ChatCards.js":"40","/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/components/NotificationRow.js":"41","/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/components/TenantReportCard.js":"42","/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/components/AuditReportCard.js":"43","/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/components/utils.js":"44","/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/components/TenantHomeTabs.js":"45","/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/components/TenantHomeCards.js":"46"},{"size":432,"mtime":1615629682191,"results":"47","hashOfConfig":"48"},{"size":4142,"mtime":1619361791251,"results":"49","hashOfConfig":"48"},{"size":22107,"mtime":1619362060522,"results":"50","hashOfConfig":"48"},{"size":12376,"mtime":1619362060560,"results":"51","hashOfConfig":"48"},{"size":2556,"mtime":1619361790950,"results":"52","hashOfConfig":"48"},{"size":1057,"mtime":1617719768858,"results":"53","hashOfConfig":"48"},{"size":1914,"mtime":1619361791238,"results":"54","hashOfConfig":"48"},{"size":4189,"mtime":1619361874028,"results":"55","hashOfConfig":"48"},{"size":5720,"mtime":1619362060560,"results":"56","hashOfConfig":"48"},{"size":103,"mtime":1615482392661,"results":"57","hashOfConfig":"48"},{"size":880,"mtime":1619361790951,"results":"58","hashOfConfig":"48"},{"size":2232,"mtime":1619361790951,"results":"59","hashOfConfig":"48"},{"size":13281,"mtime":1619361790952,"results":"60","hashOfConfig":"48"},{"size":1979,"mtime":1619361790953,"results":"61","hashOfConfig":"48"},{"size":9155,"mtime":1619361790952,"results":"62","hashOfConfig":"48"},{"size":3513,"mtime":1619361790951,"results":"63","hashOfConfig":"48"},{"size":4963,"mtime":1619361790951,"results":"64","hashOfConfig":"48"},{"size":4977,"mtime":1619362060563,"results":"65","hashOfConfig":"48"},{"size":4366,"mtime":1619362683143,"results":"66","hashOfConfig":"48"},{"size":403,"mtime":1619109059045,"results":"67","hashOfConfig":"48"},{"size":16012,"mtime":1619362060522,"results":"68","hashOfConfig":"48"},{"size":2019,"mtime":1619361790942,"results":"69","hashOfConfig":"48"},{"size":3823,"mtime":1619361790942,"results":"70","hashOfConfig":"48"},{"size":508,"mtime":1615637216653,"results":"71","hashOfConfig":"48"},{"size":1043,"mtime":1617719768843,"results":"72","hashOfConfig":"48"},{"size":6080,"mtime":1619362060563,"results":"73","hashOfConfig":"48"},{"size":4206,"mtime":1619362060487,"results":"74","hashOfConfig":"48"},{"size":4295,"mtime":1619361790946,"results":"75","hashOfConfig":"48"},{"size":11160,"mtime":1619361874028,"results":"76","hashOfConfig":"48"},{"size":4306,"mtime":1619361790945,"results":"77","hashOfConfig":"48"},{"size":4164,"mtime":1619361790952,"results":"78","hashOfConfig":"48"},{"size":4130,"mtime":1619361790952,"results":"79","hashOfConfig":"48"},{"size":5257,"mtime":1619361790953,"results":"80","hashOfConfig":"48"},{"size":5290,"mtime":1619361790950,"results":"81","hashOfConfig":"48"},{"size":3446,"mtime":1619361790952,"results":"82","hashOfConfig":"48"},{"size":4340,"mtime":1619361790950,"results":"83","hashOfConfig":"48"},{"size":9035,"mtime":1619361790951,"results":"84","hashOfConfig":"48"},{"size":1490,"mtime":1619361790946,"results":"85","hashOfConfig":"48"},{"size":2334,"mtime":1619361790946,"results":"86","hashOfConfig":"48"},{"size":2062,"mtime":1619361790943,"results":"87","hashOfConfig":"48"},{"size":9810,"mtime":1619361790946,"results":"88","hashOfConfig":"48"},{"size":12876,"mtime":1619361790947,"results":"89","hashOfConfig":"48"},{"size":8307,"mtime":1619361790942,"results":"90","hashOfConfig":"48"},{"size":1481,"mtime":1619361790947,"results":"91","hashOfConfig":"48"},{"size":4942,"mtime":1619361790947,"results":"92","hashOfConfig":"48"},{"size":4885,"mtime":1619361790947,"results":"93","hashOfConfig":"48"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},"19x7rlu",{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"96"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"96"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"96"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"96"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"96"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"96"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"96"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"96"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"96"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"96"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"96"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"96"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"96"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"96"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"96"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"96"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"159"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"96"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"96"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"96"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"96"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"96"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"96"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"96"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"96"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"96"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"96"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"96"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"96"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"96"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"96"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"96"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"96"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"96"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"96"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"96"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"96"},"/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/index.js",[],["225","226"],"/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/App.js",["227"],"//import logo from \"./logo.svg\";\nimport React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  Redirect,\n} from \"react-router-dom\";\n\nimport Account from \"./pages/Account\";\nimport Tenant from \"./pages/Tenant\";\nimport Error from \"./pages/Error\";\nimport Institutions from \"./pages/Institutions\";\nimport Institution from \"./pages/Institution\";\nimport FbChecklist from \"./pages/FbChecklist\";\nimport NonFbChecklist from \"./pages/NonFbChecklist\";\nimport SMAChecklist from \"./pages/SMAChecklist\";\nimport AuthenticatedRoute from \"./components/testJwt/AuthenticatedRoute\";\nimport LoginComponent from \"./components/testJwt/Login\";\nimport HomeAuditor from \"./pages/HomeAuditor\";\nimport Loading from \"./pages/Loading\";\nimport AuditReport from \"./pages/AuditReport\";\nimport { ContextProvider } from \"./Context\";\nimport TenantHome from \"./pages/TenantHome\";\nimport ManagerHome from \"./pages/ManagerHome\";\nimport Store from \"./pages/Store\";\nimport EditAccount from \"./pages/EditAccount\";\nimport EditPassword from \"./pages/EditPassword\";\nimport AllChats from \"./pages/AllChats\";\nimport Chat from \"./pages/Chat\";\nimport TenantReport from \"./pages/TenantReport\";\nimport AuditEmail from \"./pages/AuditEmail\";\nimport Announcement from \"./pages/Announcements\";\nimport StoreReport from \"./pages/StoreReport\";\n\nfunction App() {\n  return (\n    <Router>\n      <ContextProvider>\n        <Switch>\n          <Route exact path=\"/\" component={LoginComponent} />\n          <AuthenticatedRoute exact path=\"/home/a\" component={HomeAuditor} />\n          <AuthenticatedRoute exact path=\"/home/t\" component={TenantHome} />\n          <AuthenticatedRoute exact path=\"/home/m\" component={ManagerHome} />\n          <AuthenticatedRoute exact path=\"/account\" component={Account} />\n          <AuthenticatedRoute\n            exact\n            path=\"/edit_account\"\n            component={EditAccount}\n          />\n          <AuthenticatedRoute\n            exact\n            path=\"/edit_password\"\n            component={EditPassword}\n          />\n          <AuthenticatedRoute\n            exact\n            path=\"/institutions\"\n            component={Institutions}\n          />\n          <AuthenticatedRoute\n            exact\n            path=\"/institution/:institutionName\"\n            component={Institution}\n          />\n          <AuthenticatedRoute\n            exact\n            path=\"/tenant/:tenantId\"\n            component={Tenant}\n          />\n          <AuthenticatedRoute\n            exact\n            path=\"/tenant/report/:reportId\"\n            component={AuditReport}\n          />\n          <AuthenticatedRoute\n            exact\n            path=\"/tenant/fbChecklist/:tenantId\"\n            component={FbChecklist}\n          />\n          <AuthenticatedRoute\n            exact\n            path=\"/tenant/nfbChecklist/:tenantId\"\n            component={NonFbChecklist}\n          />\n          <AuthenticatedRoute\n            exact\n            path=\"/tenant/smaChecklist/:tenantId\"\n            component={SMAChecklist}\n          />\n          <AuthenticatedRoute\n            exact\n            path=\"/tenant/report/:reportId\"\n            component={AuditReport}\n          />\n          <AuthenticatedRoute\n            exact\n            path=\"/tenant/email/:reportId\"\n            component={AuditEmail}\n          />\n          <AuthenticatedRoute\n            exact\n            path=\"/t/report/:reportId\"\n            component={TenantReport}\n          />\n          <AuthenticatedRoute exact path=\"/store\" component={Store} />\n\n          <AuthenticatedRoute exact path=\"/allChats\" component={AllChats} />\n\n          <AuthenticatedRoute\n            exact\n            path=\"/fullreport/:reportId\"\n            component={StoreReport}\n          />\n          <AuthenticatedRoute exact path=\"/chat/:chatId\" component={Chat} />\n          <AuthenticatedRoute\n            exact\n            path=\"/announcements\"\n            component={Announcement}\n          />\n\n          <AuthenticatedRoute exact path=\"/error\" component={Error} />\n          <Redirect to=\"/\" component={LoginComponent} />\n        </Switch>\n      </ContextProvider>\n    </Router>\n  );\n}\n\nexport default App;\n","/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/Context.js",["228","229","230","231","232","233","234","235","236","237","238","239","240","241","242","243","244"],"import React, { useState, createContext, useCallback } from \"react\";\nimport { audits, fbChecklist, tenants, institutions } from \"./data\";\nimport axios from \"axios\";\nimport { useHistory } from \"react-router-dom\";\nimport AuthenticationService from \"./AuthenticationService\";\n\nexport const Context = createContext();\n\nexport const ContextProvider = (props) => {\n  const API_URL = \"http://localhost:8080\";\n  const history = useHistory();\n\n  /*\n  =============== \n  BACKEND\n  ===============\n  */\n\n  const getAccountInfo = () => {\n    AuthenticationService.getStoredAxiosInterceptor();\n    // console.log(\"this is calling getAccountInfo\");\n    return axios\n      .get(`${API_URL}/account/getUserProfile`, {\n        params: {},\n      })\n      .then((response) => {\n        // console.log(\"Response from getUserProfile\", response.data);\n        setAccountState(response.data);\n      })\n      .catch(() => {\n        console.log(\"userProfile retrieval failed\");\n      });\n  };\n\n  const getAllAuditors = () => {\n    AuthenticationService.getStoredAxiosInterceptor();\n    return axios.get(`${API_URL}/account/getAllUsersofType`, {\n      params: {\n        roleType: \"Auditor\",\n      },\n    });\n  };\n\n  const getAllTenants = () => {\n    AuthenticationService.getStoredAxiosInterceptor();\n    return axios.get(`${API_URL}/account/getAllUsersofType`, {\n      params: {\n        roleType: \"Tenant\",\n      },\n    });\n  };\n\n  const getAllChatsOfUser = () => {\n    AuthenticationService.getStoredAxiosInterceptor();\n    console.log(\"This is calling getAllChatsOfUser\");\n    return axios.get(`${API_URL}/chat/getAllChatsOfUser`, {\n      params: {},\n    });\n  };\n\n  const getChatEntriesOfUser = (chatId) => {\n    AuthenticationService.getStoredAxiosInterceptor();\n    console.log(\"This is calling getChatEntriesOfUser\");\n    //console.log(typeof parseInt(chatId));\n    //console.log(typeof parseInt(numLastestEntries));\n    return axios.get(`${API_URL}/chat/getChatEntriesOfUser`, {\n      params: {\n        parentChatId: parseInt(chatId),\n        //numLastestChatEntries: parseInt(numLastestChatEntries),\n      },\n    });\n  };\n\n  // function to post a new chat with another user\n  const postCreateNewChat = useCallback((auditor_id, tenant_id) => {\n    AuthenticationService.getStoredAxiosInterceptor();\n    console.log(auditor_id);\n    console.log(tenant_id);\n    let FormData = require(\"form-data\");\n    let formdata = new FormData();\n    formdata.append(\"auditor_id\", auditor_id);\n    formdata.append(\"tenant_id\", tenant_id);\n    return axios\n      .post(\n        `${API_URL}/chat/postCreateNewChat?auditor_id=${auditor_id}&tenant_id=${tenant_id}`,\n        {\n          params: {\n            auditor_id: parseInt(auditor_id),\n            tenant_id: parseInt(tenant_id),\n          },\n        }\n      )\n      .then((response) => {\n        console.log(response);\n        setChatSubmitState(response);\n      })\n      .catch((error) => {\n        console.log(\"Failed new chat creation\");\n        console.log(error.response); // check if its null\n        let error_msg = error.response.data;\n        if (error_msg != null) {\n          console.log(error);\n          console.log(typeof error_msg);\n          console.log(\"error msg: \" + error_msg); // use the response.data to redirect to the existed chat\n          let existing_chat_id = error_msg.split(\":\")[1];\n          history.push(`/chat/${existing_chat_id}`);\n        }\n      });\n  });\n\n  // function to post a new chat entry (message) in an existing chat\n  const postChatEntry = useCallback(\n    (parentChatId, subject, messageBody, attachments) => {\n      AuthenticationService.getStoredAxiosInterceptor();\n      let payload = {\n        subject: subject,\n        messageBody: messageBody,\n        attachments: attachments,\n      };\n      let FormData = require(\"form-data\");\n      let formdata = new FormData();\n      formdata.append(\"messageContents\", JSON.stringify(payload));\n      return axios\n        .post(\n          `${API_URL}/chat/postChatEntry?parentChatId=${parseInt(\n            parentChatId\n          )}`,\n          formdata,\n          {\n            headers: {\n              \"Content-Type\": `multipart/form-data; boundary=${formdata._boundary}`,\n            },\n          }\n        )\n        .then((response) => {\n          console.log(response);\n          setChatSubmitState(response);\n        })\n        .catch(() => {\n          console.log(\"Failed new chat entry post\");\n        });\n    }\n  );\n\n  const getAllAvailableNotifications = (role_id) => {\n    console.log(\"Getting allAvailableNotifications...\");\n    AuthenticationService.getStoredAxiosInterceptor();\n    return axios.get(`${API_URL}/notifications/getAllAvailableNotifications`, {\n      params: {\n        role_id: role_id,\n      },\n    });\n  };\n\n  const getCurrentNotifications = (role_id) => {\n    console.log(\"Getting currentNotifications...\");\n    AuthenticationService.getStoredAxiosInterceptor();\n    return axios.get(`${API_URL}/notifications/getCurrentNotifications`, {\n      params: {\n        role_id: role_id,\n      },\n    });\n  };\n\n  const getNotificationByNotificationId = (notification_id) => {\n    console.log(\"Getting notificationByNotificationId...\");\n    AuthenticationService.getStoredAxiosInterceptor();\n    return axios.get(\n      `${API_URL}/notifications/getNotificationByNotificationId`,\n      {\n        params: {\n          notification_id: notification_id,\n        },\n      }\n    );\n  };\n\n  const getNotificationsByCreatorId = (creator_id) => {\n    console.log(\"Getting notificationsByCreatorId...\");\n    AuthenticationService.getStoredAxiosInterceptor();\n    return axios.get(`${API_URL}/notifications/getNotificationsByCreatorId`, {\n      params: {\n        creator_id: creator_id,\n      },\n    });\n  };\n\n  // Function to post a new notification (only available to managers)\n  const postNewNotification = useCallback(\n    (title, message, receipt_date, end_date, to_role_ids) => {\n      AuthenticationService.getStoredAxiosInterceptor();\n      console.log(typeof title);\n      console.log(typeof message);\n      console.log(typeof receipt_date);\n      console.log(typeof end_date);\n      console.log(typeof to_role_ids);\n      let FormData = require(\"form-data\");\n      let formdata = new FormData();\n      let payload = {\n        title: title,\n        message: message,\n        receipt_date: receipt_date,\n        end_date: end_date,\n        to_role_ids: to_role_ids,\n      };\n      formdata.append(\"new_notification\", JSON.stringify(payload));\n      return axios\n        .post(`${API_URL}/notifications/postNewNotification`, formdata, {\n          headers: {\n            \"Content-Type\": `multipart/form-data; boundary=${formdata._boundary}`,\n          },\n        })\n        .then((response) => {\n          console.log(response);\n          setChatSubmitState(response);\n        })\n        .catch(() => {\n          console.log(\"Failed new notification post\");\n        });\n    }\n  );\n\n  // Function to modify existing notifiation (only available to managers)\n  const postModifyNotification = useCallback(\n    (notification_id, title, message, receipt_date, end_date, to_role_ids) => {\n      AuthenticationService.getStoredAxiosInterceptor();\n      console.log(typeof notification_id); // Integer\n      console.log(typeof title); // String\n      console.log(typeof message); // String\n      console.log(typeof receipt_date); // String\n      console.log(typeof end_date); // String\n      console.log(typeof to_role_ids); // Integer\n      let FormData = require(\"form-data\");\n      let formdata = new FormData();\n      let payload = {\n        notification_id: notification_id,\n        title: title,\n        message: message,\n        receipt_date: receipt_date,\n        end_date: end_date,\n        to_role_ids: to_role_ids,\n      };\n      formdata.append(\"modifiedNotification\", JSON.stringify(payload));\n      return axios\n        .post(`${API_URL}/notifications/postModifyNotification`, formdata, {\n          headers: {\n            \"Content-Type\": `multipart/form-data; boundary=${formdata._boundary}`,\n          },\n        })\n        .then((response) => {\n          console.log(response);\n          setChatSubmitState(response);\n        })\n        .catch(() => {\n          console.log(\"Failed modify notification post\");\n        });\n    }\n  );\n\n  // Function to delete existing notifiation (only available to managers)\n  const deleteNotification = (notification_id) => {\n    AuthenticationService.getStoredAxiosInterceptor();\n    console.log(\"Deleting the announcement...\" + notification_id);\n    console.log(typeof notification_id); // Integer\n    return axios\n      .delete(`${API_URL}/notifications/deleteNotification`, {\n        params: {\n          notification_id: notification_id,\n        },\n      })\n      .then((response) => {\n        console.log(response);\n        setChatSubmitState(response);\n      })\n      .catch(() => {\n        console.log(\"Failed to delete notification\");\n      });\n  };\n\n  /*\n  ---------------\n  FbChecklist\n  ---------------\n  */\n  //function to get Fb Checklist questions\n  const getFbChecklistQuestions = () => {\n    AuthenticationService.getStoredAxiosInterceptor();\n\n    return axios.get(`${API_URL}/report/getAllQuestions`, {\n      params: { type: \"FB\" },\n    });\n  };\n\n  const getNonFbChecklistQuestions = () => {\n    AuthenticationService.getStoredAxiosInterceptor();\n\n    return axios.get(`${API_URL}/report/getAllQuestions`, {\n      params: { type: \"NFB\" },\n    });\n  };\n\n  const getSMAChecklistQuestions = () => {\n    AuthenticationService.getStoredAxiosInterceptor();\n\n    return axios.get(`${API_URL}/report/getAllQuestions`, {\n      params: { type: \"SMA\" },\n    });\n  };\n\n  //function to submit FbChecklist report to compute the score\n  const submitFbReport = useCallback((tenantid, fbreport) => {\n    console.log(fbreport);\n    let FormData = require(\"form-data\");\n    let formdata = new FormData();\n    formdata.append(\"checklist\", JSON.stringify(fbreport));\n    return axios\n      .post(\n        `${API_URL}/report/postReportSubmission?type=FB&tenant_id=${tenantid}&remarks=`,\n        formdata,\n        {\n          headers: {\n            \"Content-Type\": `multipart/form-data; boundary=${formdata._boundary}`,\n          },\n          // params: { type: \"FB\", tenant_id: t_id, remarks: \"\" },\n          // data: formdata,\n        }\n      )\n      .then((response) => {\n        console.log(response);\n        // if (response.status === 200) {\n        //   return <Redirect to={`/tenant/${tenantid}`} />;\n        // }\n      })\n      .catch(() => {\n        console.log(\"Failed FB report submission\");\n      });\n  });\n\n  //function to submit nfbChecklist report to compute the score\n  const submitNonFbReport = useCallback((tenantid, nfbreport) => {\n    console.log(nfbreport);\n    let FormData = require(\"form-data\");\n    let formdata = new FormData();\n    formdata.append(\"checklist\", JSON.stringify(nfbreport));\n    return axios\n      .post(\n        `${API_URL}/report/postReportSubmission?type=NFB&tenant_id=${tenantid}&remarks=`,\n        formdata,\n        {\n          headers: {\n            \"Content-Type\": `multipart/form-data; boundary=${formdata._boundary}`,\n          },\n          // params: { type: \"FB\", tenant_id: t_id, remarks: \"\" },\n          // data: formdata,\n        }\n      )\n      .then((response) => {\n        console.log(response);\n        // if (response.status === 200) {\n        //   return <Redirect to={`/tenant/${tenantid}`} />;\n        // }\n      })\n      .catch(() => {\n        console.log(\"Failed NFB report submission\");\n      });\n  });\n\n  //function to submit smaChecklist report to compute the score\n  const submitSMAReport = useCallback((tenantid, smareport) => {\n    console.log(smareport);\n    let FormData = require(\"form-data\");\n    let formdata = new FormData();\n    formdata.append(\"checklist\", JSON.stringify(smareport));\n    return axios\n      .post(\n        `${API_URL}/report/postReportSubmission?type=SMA&tenant_id=${tenantid}&remarks=`,\n        formdata,\n        {\n          headers: {\n            \"Content-Type\": `multipart/form-data; boundary=${formdata._boundary}`,\n          },\n          // params: { type: \"FB\", tenant_id: t_id, remarks: \"\" },\n          // data: formdata,\n        }\n      )\n      .then((response) => {\n        console.log(response);\n        // if (response.status === 200) {\n        //   return <Redirect to={`/tenant/${tenantid}`} />;\n        // }\n      })\n      .catch(() => {\n        console.log(\"Failed SMA report submission\");\n      });\n  });\n\n  const submitReportUpdate = (report_id, group_update, remarks, report) => {\n    let FormData = require(\"form-data\");\n    let formdata = new FormData();\n    formdata.append(\"entry\", JSON.stringify(report));\n    return axios\n      .post(`${API_URL}/report/postReportUpdate`, formdata, {\n        headers: {\n          \"Content-Type\": `multipart/form-data; boundary=${formdata._boundary}`,\n        },\n        params: {\n          report_id: report_id,\n          group_update: group_update,\n          remarks: remarks,\n        },\n        // params: { type: \"FB\", tenant_id: t_id, remarks: \"\" },\n        // data: formdata,\n      })\n      .then((response) => {\n        console.log(response);\n        setResolvedState(report_id);\n      })\n      .catch(() => {\n        console.log(\"Failed report update\");\n      });\n  };\n\n  const getTenantRectification = (report_id, tenant_id, qn_id) => {\n    AuthenticationService.getStoredAxiosInterceptor();\n    console.log(tenant_id);\n    return axios.get(`${API_URL}/report/getRectificationEntryOfQn`, {\n      params: {\n        report_id: parseInt(report_id),\n        tenant_id: tenant_id,\n        qn_id: parseInt(qn_id),\n      },\n    });\n  };\n\n  /*\n  ---------------\n  Institution\n  ---------------\n  */\n\n  //function to get tenants in a particular institution\n  const getInstitutionTenants = (name) => {\n    AuthenticationService.getStoredAxiosInterceptor();\n    console.log(name);\n    return axios.get(`${API_URL}/account/getAllTenantsOfBranch`, {\n      params: { branch_id: name },\n    });\n  };\n  /*\n  --------------- \n  Tenant\n  ---------------\n  */\n  //function to get user info given user id\n  const getUserInfo = (userId) => {\n    AuthenticationService.getStoredAxiosInterceptor();\n    return axios.get(`${API_URL}/account/getUserProfile`, {\n      params: { user_id: parseInt(userId) },\n    });\n  };\n\n  const getUserInfoNoParams = () => {\n    AuthenticationService.getStoredAxiosInterceptor();\n    return axios.get(`${API_URL}/account/getUserProfile`);\n  };\n\n  /*\n  --------------------- \n  Home Auditor & Tenant\n  ----------------------\n  */\n\n  //function to get all the audits done given auditor's username\n  const getAudits = (userName) => {\n    AuthenticationService.getStoredAxiosInterceptor();\n    return axios.get(`${API_URL}/report/getReportIDs`, {\n      params: { username: userName, type: \"ALL\" },\n    });\n  };\n  //function to get all the audits given tenant id\n  const getAuditsTenant = (tenantid) => {\n    AuthenticationService.getStoredAxiosInterceptor();\n    return axios.get(`${API_URL}/report/getReportIDs`, {\n      params: { user_id: tenantid, type: \"ALL\" },\n    });\n  };\n\n  const getTenantAudits = (tenantid) => {\n    AuthenticationService.getStoredAxiosInterceptor();\n    return axios.get(`${API_URL}/report/getReportIDs`, {\n      params: { user_id: tenantid, type: \"ALL\" },\n    });\n  };\n\n  // const getClosedTenantAudits = (tenantid) => {\n  //   AuthenticationService.getStoredAxiosInterceptor();\n  //   return axios.get(`${API_URL}/report/getReportIDs`, {\n  //     params: { user_id: tenantid, type: \"CLOSED\" },\n  //   });\n  // };\n\n  const getReport = (reportId) => {\n    AuthenticationService.getStoredAxiosInterceptor();\n    return axios.get(`${API_URL}/report/getReport`, {\n      params: { report_id: parseInt(reportId) },\n    });\n  };\n\n  const getOriginalReport = (reportId) => {\n    AuthenticationService.getStoredAxiosInterceptor();\n    return axios.get(`${API_URL}/report/getOriginalAuditEntries`, {\n      params: { report_id: parseInt(reportId) },\n    });\n  };\n\n  const getReportStats = (reportId) => {\n    AuthenticationService.getStoredAxiosInterceptor();\n    return axios.get(`${API_URL}/report/getReportStatistics`, {\n      params: { report_id: parseInt(reportId) },\n    });\n  };\n\n  const getReportEntry = (reportId, entryId) => {\n    AuthenticationService.getStoredAxiosInterceptor();\n    return axios.get(`${API_URL}/report/getReportEntry`, {\n      params: { report_id: parseInt(reportId), entry_id: entryId },\n    });\n  };\n\n  const getQuestionInfo = (reportId, questionId) => {\n    AuthenticationService.getStoredAxiosInterceptor();\n    return axios.get(`${API_URL}/report/getQuestionInfo`, {\n      params: { report_id: parseInt(reportId), qn_id: parseInt(questionId) },\n    });\n  };\n\n  // const filterAudits = (category) => {\n  //   console.log(auditsState);\n  // };\n\n  /*\n  =============== \n  FRONTEND\n  ===============\n  */\n  //FRONTEND STATES AND FUNCTIONS\n  //state for report ids\n  const [reportIdsState, setReportIdsState] = useState();\n  //state for fb report\n  const [fbReportState, setFbReportState] = useState([]);\n  //state for nfb report\n  const [nfbReportState, setNonFbReportState] = useState();\n  //state for sma report\n  const [smaReportState, setSMAReportState] = useState();\n  //state of tenant type\n  const [tenantType, setTenantType] = useState();\n  //state to keep track of audit\n  const [auditsState, setAuditsState] = useState();\n  //state to keep track of all tenants\n  const [tenantState, setTenantState] = useState();\n  //state for fbChecklist\n\n  //state for institutions\n  //const [institutionsState, setInstitutionstate] = useState(institutions);\n  //state for account\n  const [accountState, setAccountState] = useState([]);\n  //state for chats of user\n  const [allChatsOfUserState, setAllChatsOfUserState] = useState([]);\n  //state for chat entries of a chat\n  const [chatEntriesOfUserState, setChatEntriesOfUserState] = useState([]);\n  //state for re-render AllChats & Chat\n  const [chatSubmitState, setChatSubmitState] = useState();\n  //state for current opened chat\n  const [currentChatState, setCurrentChatState] = useState();\n  //state for notifications to display\n  const [\n    allAvailableNotificationsState,\n    setAllAvailableNotificationsState,\n  ] = useState([]);\n  //state for current notifications\n  const [currentNotificationsState, setCurrentNotificationsState] = useState(\n    []\n  );\n  //state for notification searched by id\n  const [\n    notificationsByNotificationIdState,\n    setNotificationsByNotificationIdState,\n  ] = useState([]);\n  //state of comments in modal\n  const [comment, setComment] = useState(\"\");\n  //resolved state\n  const [resolvedState, setResolvedState] = useState();\n  //function to prepare report state\n  const createFbReportState = useCallback((checklist, response) => {\n    console.log(checklist);\n    //create temporary array\n    let array = [];\n    checklist.forEach((question) => {\n      const { fb_qn_id } = question;\n      array.push({\n        qn_id: fb_qn_id,\n        status: true,\n        severity: 0,\n        remarks: \"\",\n        images: \"\",\n      });\n    });\n    //set fbreportstate to array\n    setFbReportState(array);\n  }, []);\n\n  const createNonFbReportState = useCallback((checklist, response) => {\n    console.log(checklist);\n    //create temporary array\n    let array = [];\n    checklist.forEach((question) => {\n      const { nfb_qn_id } = question;\n      array.push({\n        qn_id: nfb_qn_id,\n        status: true,\n        severity: 0,\n        remarks: \"\",\n        images: \"\",\n      });\n    }); //set fbreportstate to array\n    setNonFbReportState(array);\n  }, []);\n\n  const createSMAReportState = useCallback((checklist, response) => {\n    console.log(checklist);\n    //create temporary array\n    let array = [];\n    checklist.forEach((question) => {\n      const { sma_qn_id } = question;\n      array.push({\n        qn_id: sma_qn_id,\n        status: true,\n        severity: 0,\n        remarks: \"\",\n        images: \"\",\n      });\n    }); //set fbreportstate to array\n    setSMAReportState(array);\n  }, []);\n\n  return (\n    <Context.Provider\n      value={{\n        // openQuestionModal,\n        // closeQuestionModal,\n        tenantState,\n        setTenantState,\n        auditsState,\n        setAuditsState,\n        // resetTenantFbChecklist,\n\n        comment,\n        setComment,\n        // updateTenantComment,\n        getFbChecklistQuestions,\n        getNonFbChecklistQuestions,\n        createNonFbReportState,\n        nfbReportState,\n        setNonFbReportState,\n        submitNonFbReport,\n        getSMAChecklistQuestions,\n\n        accountState,\n        setAccountState,\n        getAccountInfo,\n        getAllAuditors,\n        getAllTenants,\n\n        allChatsOfUserState,\n        setAllChatsOfUserState,\n        getAllChatsOfUser,\n        postCreateNewChat,\n\n        chatEntriesOfUserState,\n        setChatEntriesOfUserState,\n        getChatEntriesOfUser,\n        postChatEntry,\n\n        chatSubmitState,\n        setChatSubmitState,\n\n        currentChatState,\n        setCurrentChatState,\n\n        allAvailableNotificationsState,\n        getAllAvailableNotifications,\n        currentNotificationsState,\n        getCurrentNotifications,\n        notificationsByNotificationIdState,\n        getNotificationByNotificationId,\n        getNotificationsByCreatorId,\n        postNewNotification,\n        postModifyNotification,\n        deleteNotification,\n\n        fbReportState,\n        setFbReportState,\n        createFbReportState,\n        submitFbReport,\n        getInstitutionTenants,\n        getUserInfo,\n        getUserInfoNoParams,\n        getAudits,\n        getReport,\n        getQuestionInfo,\n        // getClosedTenantAudits,\n        getTenantAudits,\n        getReportStats,\n        getReportEntry,\n        submitReportUpdate,\n        getTenantRectification,\n\n        getOriginalReport,\n        resolvedState,\n        setResolvedState,\n        smaReportState,\n        setSMAReportState,\n        createSMAReportState,\n        submitSMAReport,\n        tenantType,\n        setTenantType,\n      }}\n    >\n      {props.children}\n    </Context.Provider>\n  );\n};\n","/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/pages/Tenant.js",["245","246","247","248"],"import React, { useContext, useEffect, useState } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { Context } from \"../Context\";\nimport Navbar from \"../Navbar\";\nimport Loading from \"./Loading\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport ExpandLess from \"@material-ui/icons/ExpandLess\";\nimport ExpandMore from \"@material-ui/icons/ExpandMore\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport QuestionAnswerIcon from \"@material-ui/icons/QuestionAnswer\";\nimport HistoryIcon from \"@material-ui/icons/History\";\nimport AssignmentTurnedInIcon from \"@material-ui/icons/AssignmentTurnedIn\";\nimport FastfoodIcon from \"@material-ui/icons/Fastfood\";\nimport StoreIcon from \"@material-ui/icons/Store\";\nimport LocalHospitalIcon from \"@material-ui/icons/LocalHospital\";\nimport Grid from \"@material-ui/core/Grid\";\nimport ReceiptIcon from \"@material-ui/icons/Receipt\";\nimport EmailIcon from \"@material-ui/icons/Email\";\nimport Button from \"@material-ui/core/Button\";\nimport ReportProblemIcon from \"@material-ui/icons/ReportProblem\";\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    padding: theme.spacing(4, 2, 10, 2),\n  },\n  list: {\n    width: \"100%\",\n    maxWidth: 800,\n    backgroundColor: theme.palette.background.paper,\n    // margin: theme.spacing(4, 0, 10, 0),\n  },\n  nested: {\n    // display: \"flex\",\n    paddingLeft: theme.spacing(4),\n  },\n  header: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(2, 0, 2, 0),\n  },\n  listItem: {\n    padding: theme.spacing(2, 2, 2, 2),\n  },\n  previousAuditsButtons: {\n    display: \"flex\",\n    padding: theme.spacing(0, 2, 3, 2),\n    justifyContent: \"center\",\n    // justifyContent: \"space-evenly\",\n  },\n  button: {\n    margin: theme.spacing(1, 2, 1, 2),\n  },\n  resolvedLabel: {\n    color: \"#F15A22\",\n    padding: theme.spacing(0, 2, 0, 2),\n  },\n}));\n\nfunction Tenant() {\n  //get tenantid from url\n  const { tenantId } = useParams();\n  // console.log(tenantId);\n  //tenant state\n  const [tenantState, setTenantState] = useState();\n  const [tenantAudits, setTenantAudits] = useState();\n  const [openChecklist, setOpenChecklist] = useState(false);\n  const [openPrevAudits, setOpenPrevAudits] = useState(false);\n  //Context: getUserInfo method\n  const { getUserInfo, getTenantAudits, getReport, getAudits } = useContext(\n    Context\n  );\n\n  const classes = useStyles();\n\n  useEffect(() => {\n    getUserInfo(tenantId)\n      .then((response) => {\n        // console.log(response);\n        setTenantState(response.data);\n      })\n      .catch(() => {\n        console.log(\"Failed to retrieve tenant info\");\n      });\n\n    // console.log(tenantId);\n    const username = sessionStorage.getItem(\"authenticatedUser\");\n    async function getResponse() {\n      try {\n        const reportIdArray = await getTenantAudits(tenantId).then(\n          (response) => {\n            console.log(response);\n\n            if (response.data.LATEST === -1) {\n              return [...response.data.CLOSED.past_audits];\n            }\n\n            return [...response.data.CLOSED.past_audits, response.data.LATEST];\n\n            // return [response.data.LATEST, ...response.data.CLOSED];\n          }\n        );\n        // console.log(reportIdArray);\n        // console.log(reportIdArray);\n\n        // const reportIdArray = await getAudits(username).then((response) => {\n        //   console.log(response);\n        //   return [\n        //     ...response.data.CLOSED.completed_audits,\n        //     ...response.data.OPEN.outstanding_audits,\n        //   ];\n        // });\n\n        //initialize array to store all objects of report info\n        let reportInfoArray = [];\n\n        for (let i = 0; i < reportIdArray.length; i++) {\n          let reportInfo = await getReport(reportIdArray[i]).then(\n            (response) => {\n              return response.data;\n            }\n          );\n          reportInfoArray.push(reportInfo);\n        }\n\n        if (reportInfoArray.length === reportIdArray.length) {\n          console.log(reportInfoArray);\n          setTenantAudits(reportInfoArray);\n        }\n      } catch (err) {\n        console.log(err);\n      }\n    }\n    getResponse();\n  }, []);\n\n  const handleChecklistClick = () => {\n    setOpenChecklist(!openChecklist);\n  };\n  const handlePrevAuditsClick = () => {\n    setOpenPrevAudits(!openPrevAudits);\n  };\n\n  return (\n    <div>\n      {tenantState && tenantAudits ? (\n        <>\n          <Navbar />\n          <Box className={classes.header} textAlign=\"center\" boxShadow={1}>\n            <Typography variant=\"h5\">{tenantState.store_name}</Typography>\n          </Box>\n          <Grid container className={classes.root}>\n            <List\n              component=\"nav\"\n              aria-labelledby=\"nested-list-subheader\"\n              className={classes.list}\n            >\n              {/* <ListItem button divider={true} className={classes.listItem}>\n                <ListItemIcon>\n                  <QuestionAnswerIcon color=\"primary\" />\n                </ListItemIcon>\n                <ListItemText primary=\"View Chats\" />\n              </ListItem> */}\n              <ListItem\n                button\n                onClick={handlePrevAuditsClick}\n                divider={true}\n                className={classes.listItem}\n              >\n                <ListItemIcon>\n                  <HistoryIcon color=\"primary\" />\n                </ListItemIcon>\n                <ListItemText primary=\"View Previous Audits\" />\n                {openPrevAudits ? <ExpandLess /> : <ExpandMore />}\n              </ListItem>\n              <Collapse in={openPrevAudits} timeout=\"auto\" unmountOnExit>\n                {tenantAudits.map((audit, index) => {\n                  const {\n                    open_date,\n                    overall_score,\n                    report_id,\n                    report_type,\n                    overall_status,\n                  } = audit;\n                  return (\n                    <>\n                      <List component=\"div\" disablePadding>\n                        <Box boxShadow={1}>\n                          <ListItem className={classes.nested}>\n                            <ListItemIcon>\n                              <ReceiptIcon color=\"secondary\" />\n                            </ListItemIcon>\n                            {report_type === \"FB\" && (\n                              <ListItemText\n                                primary={`F&B Checklist conducted on ${new Date(\n                                  open_date\n                                ).toString()}`}\n                                secondary={`Score: ${overall_score} `}\n                              />\n                            )}\n                            {report_type === \"NFB\" && (\n                              <ListItemText\n                                primary={`Non-F&B Checklist conducted on ${new Date(\n                                  open_date\n                                ).toString()}`}\n                                secondary={`Score: ${overall_score} `}\n                              />\n                            )}\n                            {report_type === \"SMA\" && (\n                              <ListItemText\n                                primary={`Safety Management Checklist conducted on ${new Date(\n                                  open_date\n                                ).toString()}`}\n                                secondary={`Score: ${overall_score} `}\n                              />\n                            )}\n                            {overall_status === 1 && (\n                              // <ListItemText className={classes.titleResolved}>\n                              <Typography\n                                variant=\"button\"\n                                className={classes.resolvedLabel}\n                              >\n                                Resolved\n                              </Typography>\n                              // </ListItemText>\n                            )}\n                          </ListItem>\n\n                          <div className={classes.previousAuditsButtons}>\n                            {overall_status !== 1 && (\n                              <Link to={`/tenant/report/${report_id}`}>\n                                <Button\n                                  variant=\"contained\"\n                                  color=\"secondary\"\n                                  size=\"small\"\n                                  className={classes.button}\n                                  startIcon={<ReportProblemIcon />}\n                                >\n                                  resolve\n                                </Button>\n                              </Link>\n                            )}\n                            <Link to={`/tenant/email/${report_id}`}>\n                              <Button\n                                variant=\"contained\"\n                                color=\"secondary\"\n                                size=\"small\"\n                                className={classes.button}\n                                startIcon={<EmailIcon />}\n                              >\n                                Email\n                              </Button>\n                            </Link>\n                            <Link to={`/fullreport/${report_id}`}>\n                              <Button\n                                variant=\"contained\"\n                                color=\"secondary\"\n                                size=\"small\"\n                                className={classes.button}\n                                startIcon={<CheckCircleIcon />}\n                              >\n                                report\n                              </Button>\n                            </Link>\n                          </div>\n                        </Box>\n                      </List>\n                    </>\n                  );\n                })}\n              </Collapse>\n              <ListItem\n                button\n                onClick={handleChecklistClick}\n                divider={true}\n                className={classes.listItem}\n              >\n                <ListItemIcon>\n                  <AssignmentTurnedInIcon color=\"primary\" />\n                </ListItemIcon>\n                <ListItemText primary=\"Start Audit\" />\n                {openChecklist ? <ExpandLess /> : <ExpandMore />}\n              </ListItem>\n\n              <Collapse in={openChecklist} timeout=\"auto\" unmountOnExit>\n                <List component=\"div\" disablePadding>\n                  <Link to={`/tenant/fbChecklist/${tenantId}`}>\n                    <ListItem button className={classes.nested}>\n                      <ListItemIcon>\n                        <FastfoodIcon color=\"secondary\" />\n                      </ListItemIcon>\n                      <ListItemText primary=\"Conduct F&B Audit\" />\n                    </ListItem>\n                  </Link>\n                  <Link to={`/tenant/nfbChecklist/${tenantId}`}>\n                    <ListItem button className={classes.nested}>\n                      <ListItemIcon>\n                        <StoreIcon color=\"secondary\" />\n                      </ListItemIcon>\n                      <ListItemText primary=\"Conduct Non-F&B Audit\" />\n                    </ListItem>\n                  </Link>\n                  <Link to={`/tenant/smaChecklist/${tenantId}`}>\n                    <ListItem button className={classes.nested}>\n                      <ListItemIcon>\n                        <LocalHospitalIcon color=\"secondary\" />\n                      </ListItemIcon>\n                      <ListItemText primary=\"Conduct Safe Managment Audit\" />\n                    </ListItem>\n                  </Link>\n                </List>\n              </Collapse>\n            </List>\n          </Grid>\n        </>\n      ) : (\n        <Loading />\n      )}\n    </div>\n  );\n}\n\nexport default Tenant;\n","/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/pages/Account.js",["249","250"],"import React, { useEffect, useContext } from \"react\";\nimport { Link } from 'react-router-dom';\nimport { Typography, Button } from \"@material-ui/core\";\n\nimport { Context } from \"../Context\";\nimport Navbar from \"../Navbar\";\nimport useStyles from \"../styles\";\nimport { FormGroup } from \"@material-ui/core\";\n\nfunction Account() {\n  const {\n    accountState,\n    getAccountInfo\n  } = useContext(Context);\n\n  // All possible account info categories for 3 types of users\n  const {\n    acc_id,\n    branch_id,\n    employee_id,\n    email,\n    username,\n    first_name,\n    last_name,\n    hp,\n    mgr_id,\n    role_id,\n    store_id,\n    type_id,\n  } = accountState;\n\n  useEffect(() => {\n    getAccountInfo();\n  }, []);\n\n  const styles = useStyles();\n  const API_URL = \"http://localhost:8080\";\n\n  // Used to generate one category of account info\n  // Filter out those empty categories\n  const AccountInfo = (props) => {\n    if (props.info != null) {\n      return <Typography align=\"center\">{props.category}: {props.info}</Typography>;\n    } else {\n      return null;\n    };\n  };\n\n  return (\n    <main className={styles.main}>\n      <Navbar />\n      <br />\n      <Typography variant=\"h3\" align='center'>Account</Typography>\n      <br />\n      <AccountInfo category=\"Username\" info={username}/>\n      <AccountInfo category=\"First Name\" info={first_name}/>\n      <AccountInfo category=\"Last Name\" info={last_name}/>\n      <br />\n      <AccountInfo category=\"Email\" info={email}/>\n      <AccountInfo category=\"Contact Number\" info={hp}/>\n      <AccountInfo category=\"Role\" info={role_id}/>\n      <br />\n      <AccountInfo category=\"Account ID\" info={acc_id}/>\n      <AccountInfo category=\"Branch ID\" info={branch_id}/>\n      <AccountInfo category=\"Employee ID\" info={employee_id} />\n      <AccountInfo category=\"Mgr ID\" info={mgr_id}/>\n      <AccountInfo category=\"Store ID\" info={store_id}/>\n      <AccountInfo category=\"Store Type\" info={type_id}/>\n      <br />\n      <FormGroup column=\"true\">\n        <Link to=\"/edit_account\">\n          <Button\n            className={styles.big_buttons}\n            align=\"center\"\n            variant=\"outlined\"\n            color=\"primary\"\n          >\n            Edit Account\n          </Button>\n        </Link>\n        <Link to=\"/edit_password\">\n          <Button\n            className={styles.big_buttons}\n            align=\"center\"\n            variant=\"outlined\"\n            color=\"secondary\"\n          >\n            Edit Password\n          </Button>\n        </Link>\n\n      </FormGroup>\n\n    </main>\n  );\n}\n\nexport default Account;\n","/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/pages/Institutions.js",["251","252","253"],"import React from \"react\";\nimport { institutions } from \"../data\";\nimport { Link } from \"react-router-dom\";\nimport { FaAngleRight } from \"react-icons/fa\";\nimport Navbar from \"../Navbar\";\nimport InstitutionsCards from \"../components/InstitutionsCards\";\n\nfunction Institutions() {\n  return (\n    <div>\n      <Navbar />\n\n      {/* <div className=\"institutions-head\"> */}\n      <InstitutionsCards />\n      {/* {institutions.map((institution, index) => {\n          const { id, name, tenantNames, imageUrl } = institution;\n          return (\n            <Link key={index} to={`/institution/${name}`}>\n              <article key={id} className=\"institutions-institution\">\n                <img src={imageUrl} className=\"hospital-logo\"></img>\n                <header className=\"institutions-btn\">\n                  <span className=\"institutions-btnicon\">\n                    <FaAngleRight />\n                  </span>\n                </header>\n              </article>\n            </Link>\n          );\n        })} */}\n    </div>\n  );\n}\n\nexport default Institutions;\n","/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/pages/HomeAuditor.js",["254"],"import React, { useEffect, useContext } from \"react\";\nimport HomeAuditorCards from \"../components/HomeAuditorCards\";\nimport HomeAuditorTabs from \"../components/HomeAuditorTabs\";\nimport Navbar from \"../Navbar\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { Context } from \"../Context\";\nimport Loading from \"./Loading\";\n\nfunction HomeAuditor() {\n  const { getAudits, auditsState, setAuditsState, getReport } = useContext(\n    Context\n  );\n\n  useEffect(() => {\n    const username = sessionStorage.getItem(\"authenticatedUser\");\n\n    async function getResponse() {\n      try {\n        const reportIdArray = await getAudits(username).then((response) => {\n          console.log(response);\n          return [\n            ...response.data.CLOSED.completed_audits,\n            ...response.data.OPEN.outstanding_audits,\n          ];\n        });\n        //initialize array to store all objects of report info\n        console.log(\"reportIDArray: \" + reportIdArray);\n        let reportInfoArray = [];\n\n        for (let i = 0; i < reportIdArray.length; i++) {\n          let reportInfo = await getReport(reportIdArray[i]).then(\n            (response) => {\n              console.log(response);\n              return response.data;\n            }\n          );\n          reportInfoArray.push(reportInfo);\n        }\n        console.log(\"reportInfoArray: \" + reportInfoArray);\n\n        //set state of audits to be an array of report info objects\n        if (reportInfoArray.length === reportIdArray.length) {\n          setAuditsState(reportInfoArray);\n        }\n      } catch (err) {\n        console.log(err);\n      }\n    }\n    getResponse();\n  }, []);\n\n  return (\n    <div>\n      {auditsState ? (\n        <>\n          <CssBaseline />\n          <Navbar />\n          <HomeAuditorTabs />\n          <HomeAuditorCards />\n        </>\n      ) : (\n        <Loading />\n      )}\n    </div>\n  );\n}\n\nexport default HomeAuditor;\n","/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/pages/FbChecklist.js",["255","256"],"import React, { useState, useContext, useEffect, useCallback } from \"react\";\nimport { useParams, Link } from \"react-router-dom\";\nimport Question from \"../components/Question\";\nimport { Context } from \"../Context\";\nimport Loading from \"./Loading\";\nimport Navbar from \"../Navbar\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport Box from \"@material-ui/core/Box\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\n\nimport Typography from \"@material-ui/core/Typography\";\n\n//styling for the fbchecklist page\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    padding: theme.spacing(4, 0, 10, 0),\n  },\n  list: {\n    width: \"100%\",\n    maxWidth: 800,\n    backgroundColor: theme.palette.background.paper,\n    display: \"flex\",\n    flexDirection: \"column\",\n\n    // alignItems: \"center\",\n  },\n  button: {\n    // color: \"#F15A22\",\n    fontWeight: \"medium\",\n    // width: \"100%\",\n    // maxWidth: 800,\n    backgroundColor: \"#F15A22\",\n    // height: 50,\n  },\n  header: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(2, 2, 2, 2),\n  },\n  link: {\n    padding: theme.spacing(2, 0, 2, 0),\n  },\n}));\n\nfunction FbChecklist() {\n  //use styles from function declared above\n  const classes = useStyles();\n  //get tenant id from url\n  const { tenantId } = useParams();\n\n  //Context\n  const {\n    getFbChecklistQuestions,\n    createFbReportState,\n    getUserInfo,\n    fbReportState,\n    submitFbReport,\n    tenantType,\n    setTenantType,\n  } = useContext(Context);\n\n  //state to update fb checklist questions\n  const [fbChecklistState, setFbChecklistState] = useState();\n  const [tenantName, setTenantName] = useState();\n\n  useEffect(() => {\n    //function to retrieve questions\n    async function getTenantName() {\n      try {\n        const tenant_name = await getUserInfo(tenantId).then((response) => {\n          console.log(response);\n          setTenantType(response.data.type_id);\n          return response.data.store_name;\n        });\n        // console.log(tenant_name);\n        setTenantName(tenant_name);\n      } catch (err) {\n        console.log(err);\n      }\n    }\n    getTenantName();\n    getFbChecklistQuestions()\n      .then((response) => {\n        setFbChecklistState(response.data);\n        createFbReportState(response.data);\n      })\n      .catch(() => {\n        console.log(\"fb checklist retrieval failed\");\n      });\n  }, []);\n\n  const handleSubmit = (tenantid, report) => {\n    console.log(report);\n    submitFbReport(tenantid, report);\n  };\n\n  return (\n    <>\n      {fbChecklistState && tenantName && tenantType ? (\n        <>\n          <Navbar />\n          <Box className={classes.header} textAlign=\"center\" boxShadow={1}>\n            <Typography variant=\"h5\">{tenantName} F&B Checklist</Typography>\n          </Box>\n\n          <Grid container className={classes.root}>\n            <List dense className={classes.list}>\n              {fbChecklistState.map((question, index) => {\n                const { fb_qn_id, requirement } = question;\n                const labelId = `checkbox-list-secondary-label-${fb_qn_id}`;\n                return (\n                  <>\n                    <Question\n                      key={fb_qn_id}\n                      fb_qn_id={fb_qn_id}\n                      requirement={requirement}\n                      labelId={labelId}\n                      type={tenantType}\n                    />\n                  </>\n                );\n              })}\n            </List>\n            <Link to={`/tenant/${tenantId}`} className={classes.link}>\n              <Button\n                className={classes.button}\n                size=\"large\"\n                color=\"primary\"\n                variant=\"contained\"\n                onClick={() => {\n                  handleSubmit(tenantId, fbReportState);\n                }}\n                // color=\"secondary\"\n              >\n                Submit\n              </Button>\n            </Link>\n          </Grid>\n        </>\n      ) : (\n        <Loading />\n      )}\n    </>\n  );\n}\n\nexport default FbChecklist;\n","/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/pages/EditAccount.js",["257"],"import React, { useState, useEffect, useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport {\n  Typography,\n  Button,\n  TextField,\n  FormGroup,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n} from \"@material-ui/core\";\nimport axios from \"axios\";\n\nimport { Context } from \"../Context\";\nimport Navbar from \"../Navbar\";\nimport useStyles from \"../styles\";\n\nfunction EditAccount() {\n  const { accountState, getAccountInfo } = useContext(Context);\n\n  // All possible account info categories for 3 types of users\n  const {\n    acc_id,\n    branch_id,\n    employee_id,\n    email,\n    username,\n    first_name,\n    last_name,\n    hp,\n    mgr_id,\n    role_id,\n    store_id,\n    type_id,\n  } = accountState;\n\n  const [usernameState, setUsernameState] = useState(username);\n  const [firstnameState, setFirstnameState] = useState(first_name);\n  const [lastnameState, setLastnameState] = useState(last_name);\n  const [emailState, setEmailState] = useState(email);\n  const [hpState, setHpState] = useState(hp);\n  const [alertState, setAlertState] = useState(false);\n  const history = useHistory();\n\n  // Prevent over re-render by using function to modify states, instead of changing states directly\n  function openAlert() {\n    setAlertState(true);\n  }\n\n  function closeAlert() {\n    setAlertState(false);\n  }\n\n  function submitAccountUpdate(newPassword, confirmedNewPassword) {\n    postAccountChange(\n      usernameState,\n      firstnameState,\n      lastnameState,\n      emailState,\n      hpState\n    );\n    openAlert();\n  }\n\n  function continueRedirect() {\n    console.log(\"Redirecting...\");\n    closeAlert();\n    history.push(\"/\");\n  }\n\n  useEffect(() => {\n    getAccountInfo();\n  }, []);\n\n  const API_URL = \"http://localhost:8080\";\n  const styles = useStyles();\n  const disabledInfo = [\n    \"Role\",\n    \"Account ID\",\n    \"Employee ID\",\n    \"Branch ID\",\n    \"Mgr ID\",\n    \"Store ID\",\n    \"Store Type\",\n  ];\n\n  const EditAccountInfo = (props) => {\n    if (props.info == null) {\n      return null;\n    } else if (disabledInfo.includes(props.category)) {\n      return (\n        <TextField\n          className={styles.big_textfield}\n          label={props.category}\n          defaultValue={props.info}\n          disabled={true}\n        />\n      );\n    } else {\n      console.log(\"You shouldn't use this function.\");\n    }\n  };\n\n  function postAccountChange(\n    newUsername,\n    newFirstName,\n    newLastName,\n    newEmail,\n    newHp\n  ) {\n    console.log(\"This is posting account changes\");\n    let payload = {\n      username: newUsername,\n      first_name: newFirstName,\n      last_name: newLastName,\n      email: newEmail,\n      hp: newHp,\n    };\n    console.log(payload);\n    let FormData = require(\"form-data\");\n    let formdata = new FormData();\n    formdata.append(\"changes\", JSON.stringify(payload));\n\n    return axios\n      .post(`${API_URL}/account/postProfileUpdate`, formdata, {\n        headers: {\n          \"Content-Type\": `multipart/form-data; boundary=${formdata._boundary}`,\n        },\n      })\n      .then((response) => {\n        console.log(response);\n      })\n      .catch(() => {\n        console.log(\"Failed account change submission\");\n      });\n  }\n\n  return (\n    <main className={styles.main}>\n      <Navbar />\n      <br />\n      <Typography variant=\"h3\" align=\"center\">\n        Edit Account\n      </Typography>\n      <FormGroup column=\"true\">\n        <TextField\n          className={styles.big_textfield}\n          label=\"Username\"\n          onChange={(e) => setUsernameState(e.target.value)}\n        />\n        <TextField\n          className={styles.big_textfield}\n          label=\"First Name\"\n          onChange={(e) => setFirstnameState(e.target.value)}\n        />\n        <TextField\n          className={styles.big_textfield}\n          label=\"Last Name\"\n          onChange={(e) => setLastnameState(e.target.value)}\n        />\n        <TextField\n          className={styles.big_textfield}\n          label=\"Email\"\n          onChange={(e) => setEmailState(e.target.value)}\n        />\n        <TextField\n          className={styles.big_textfield}\n          label=\"Contact Number\"\n          onChange={(e) => setHpState(e.target.value)}\n        />\n        <br />\n        <EditAccountInfo category=\"Role\" info={role_id} />\n        <EditAccountInfo category=\"Account ID\" info={acc_id} />\n        <EditAccountInfo category=\"Branch ID\" info={branch_id} />\n        <EditAccountInfo category=\"Employee ID\" info={employee_id} />\n        <EditAccountInfo category=\"Mgr ID\" info={mgr_id} />\n        <EditAccountInfo category=\"Store ID\" info={store_id} />\n        <EditAccountInfo category=\"Store Type\" info={type_id} />\n        <br />\n      </FormGroup>\n      <Button\n        className={styles.big_buttons}\n        align=\"center\"\n        variant=\"outlined\"\n        color=\"primary\"\n        fullWidth\n        onClick={submitAccountUpdate}\n      >\n        Submit\n      </Button>\n      <Dialog\n        open={alertState}\n        onClose={closeAlert}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{\"Message:\"}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            Account Information successfully updated.\n          </DialogContentText>\n          <DialogContentText id=\"alert-dialog-description\">\n            Redirecting to login page...\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={continueRedirect} color=\"primary\">\n            Continue\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </main>\n  );\n}\n\nexport default EditAccount;\n","/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/pages/Error.js",[],"/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/pages/Loading.js",[],"/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/pages/Institution.js",["258","259","260"],"import React, { useContext, useEffect, useState } from \"react\";\nimport { tenants, institutions } from \"../data\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { FaAngleRight } from \"react-icons/fa\";\nimport Navbar from \"../Navbar\";\nimport { Context } from \"../Context\";\nimport Loading from \"./Loading\";\n\nconst Institution = () => {\n  //obtain id which is indicated in the url\n  const { institutionName } = useParams();\n  const { getInstitutionTenants } = useContext(Context);\n  const [institutionState, setInstitutionState] = useState();\n  console.log(institutionName);\n  useEffect(() => {\n    getInstitutionTenants(institutionName)\n      .then((response) => {\n        //update state of institution tenants\n        setInstitutionState(response.data);\n      })\n      .catch(() => {\n        console.log(\"Failed to get tenants in the institution\");\n      });\n  }, []);\n\n  // array of one object which is the selected institution\n  const selectedInstitution = institutions.filter((institution) => {\n    const { name } = institution;\n    return institutionName === name;\n  });\n\n  return (\n    <div>\n      {institutionState ? (\n        <div>\n          <Navbar />\n          {selectedInstitution.map((institution, index) => {\n            const { id, name, imageUrl } = institution;\n            return (\n              <section key={index} className=\"institution-header\">\n                <img\n                  src={imageUrl}\n                  className=\"institution-logo\"\n                  alt=\"logo\"\n                ></img>\n              </section>\n            );\n          })}\n          {institutionState.map((tenant, index) => {\n            const { store_name, acc_id } = tenant;\n            return (\n              <>\n                <Link key={acc_id} to={`/tenant/${acc_id}`}>\n                  <section className=\"institution-tenant-resolved\">\n                    <div>{store_name}</div>\n                    <div className=\"institution-tenantbtn\">\n                      <FaAngleRight />\n                    </div>\n                  </section>\n                </Link>\n              </>\n            );\n          })}{\" \"}\n        </div>\n      ) : (\n        <Loading />\n      )}\n    </div>\n  );\n};\n\nexport default Institution;\n","/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/pages/ManagerHome.js",["261","262","263","264","265"],"import React, { useState, useContext, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Button,\n  IconButton,\n  TextField,\n  FormControl,\n  InputLabel,\n  Select,\n  Typography,\n  Grid,\n} from \"@material-ui/core\";\nimport {\n  InputAdornment,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Dialog,\n  DialogContentText,\n} from \"@material-ui/core\";\nimport SearchIcon from \"@material-ui/icons/Search\";\n\nimport Navbar from \"../Navbar\";\nimport useStyles from \"../styles\";\nimport { Context } from \"../Context\";\nimport NotificationRow from \"../components/NotificationRow\";\n\nfunction ManagerHome() {\n  const styles = useStyles();\n  const {\n    accountState,\n    getAllAvailableNotifications,\n    getNotificationByNotificationId,\n    chatSubmitState,\n    postNewNotification,\n    postModifyNotification,\n    deleteNotification,\n    getNotificationsByCreatorId,\n  } = useContext(Context);\n\n  const [\n    displayedNotificationsState,\n    setDisplayedNotificationsState,\n  ] = useState([]);\n  const [rangeState, setRangeState] = useState(\"all\");\n  const [searchBarInputState, setSearchBarInputState] = useState(\"\");\n\n  // States for inputs\n  const [titleState, setTitleState] = useState(\"\");\n  const [messageState, setMessageState] = useState(\"\");\n  const [receiptDateDisplayed, setReceiptDateDisplayed] = useState(new Date());\n  const [receiptDateState, setReceiptDateState] = useState(\"\"); // Default today\n  const [endDateDisplayed, setEndDateDisplayed] = useState(new Date());\n  const [endDateState, setEndDateState] = useState(\"\"); // Default one month later\n  const [receiversState, setReceiversState] = useState(7); // Default all users\n\n  // States for dialogs\n  const [postNewDialogState, setPostNewDialogState] = useState(false);\n  const [tipDialogState, setTipDialogState] = useState(false);\n  const [successDialogState, setSuccessDialogState] = useState(false);\n\n  const { role_id } = accountState;\n\n  function handleTitleChange(input_title) {\n    setTitleState(input_title);\n  }\n  function handleMessageChange(input_message) {\n    setMessageState(input_message);\n  }\n  function handleReceiptDateChange(input_date) {\n    setReceiptDateState(input_date); // String passed to backend\n    setReceiptDateDisplayed(input_date); // Date object to display\n  }\n  function handleEndDateChange(input_date) {\n    setEndDateState(input_date); // String passed to backend\n    setEndDateDisplayed(input_date); // Date object to display\n  }\n  function handleReceiverChange(input_receiver) {\n    setReceiversState(parseInt(input_receiver));\n  }\n\n  function openPostNewDialog() {\n    setPostNewDialogState(true);\n  }\n  function closePostNewDialog() {\n    setPostNewDialogState(false);\n  }\n  function openTipDialog() {\n    setTipDialogState(true);\n  }\n  function closeTipDialog() {\n    setTipDialogState(false);\n  }\n  function openSuccessDialog() {\n    setSuccessDialogState(true);\n  }\n  function closeSuccessDialog() {\n    setSuccessDialogState(false);\n  }\n\n  function resetStates() {\n    setTitleState(\"\");\n    setMessageState(\"\");\n    setReceiptDateState(\"\");\n    setEndDateState(\"\");\n    setReceiversState(7);\n  }\n\n  function submitNewAccouncement() {\n    console.log(\"Submitting new announcement...\");\n    postNewNotification(\n      titleState,\n      messageState,\n      receiptDateState,\n      endDateState,\n      receiversState\n    );\n    openSuccessDialog();\n    resetStates();\n  }\n\n  function handleSearchBarChange(search_input) {\n    setSearchBarInputState(parseInt(search_input)); // String => Integer\n  }\n\n  function handleSearchButtonClick() {\n    console.log(\"Submitting search bar input: \" + searchBarInputState);\n    console.log(typeof searchBarInputState);\n    if (searchBarInputState < 1000 && searchBarInputState > 0) {\n      setRangeState(\"by_notification_id\");\n      console.log(\"Setting range to By Institution ID\");\n    } else if (searchBarInputState >= 1000) {\n      setRangeState(\"by_manager_id\");\n      console.log(\"Setting range to By Manager ID\");\n    } else {\n      setRangeState(\"all\");\n      console.log(\"Setting range to All\");\n    }\n\n    console.log(\"Searchbar input: \" + searchBarInputState);\n    console.log(\"Current range: \" + rangeState);\n  }\n\n  function handleNewAnnouncementClick() {\n    console.log(\"Posting new announcement...\");\n    openPostNewDialog();\n  }\n  function handleTipClick() {\n    console.log(\"Openning accouncement tips...\");\n    openTipDialog();\n  }\n  function handleSuccessClick() {\n    console.log(\"Success dialog click...\");\n    closeSuccessDialog();\n    closePostNewDialog();\n  }\n\n  useEffect(() => {\n    async function getResponse() {\n      try {\n        await getNotificationsByCreatorId().then((response) => {\n          console.log(\"All available notifications: \" + response.data);\n          setDisplayedNotificationsState(response.data);\n        });\n      } catch {\n        console.log(\"Failed to retrive allAvailableNotifications\");\n      }\n    }\n    getResponse();\n  }, [chatSubmitState]);\n\n  return (\n    <main className={styles.main}>\n      <Navbar />\n      <div className={styles.body}>\n        <TextField\n          className={styles.search_bar}\n          label=\"Search Notification ID/Creator ID\"\n          variant=\"outlined\"\n          InputProps={{\n            endAdornment: (\n              <InputAdornment>\n                <IconButton onClick={handleSearchButtonClick}>\n                  <SearchIcon />\n                </IconButton>\n              </InputAdornment>\n            ),\n          }}\n          onChange={(e) => handleSearchBarChange(e.target.value)}\n        />\n        <div className={styles.annoucement_title_div}>\n          <Typography variant=\"h6\" className={styles.annoucement_title}>\n            Announcements\n          </Typography>\n        </div>\n        <div className={styles.announcement_list}>\n          {displayedNotificationsState.map((notification, index) => {\n            // return (\n            //   <NotificationRow notification={notification} key={index}/>\n            // )\n            if (rangeState === \"all\") {\n              return (\n                <NotificationRow notification={notification} key={index} />\n              );\n            } else if (\n              rangeState === \"by_notification_id\" &&\n              notification.notification_id === searchBarInputState\n            ) {\n              return (\n                <NotificationRow notification={notification} key={index} />\n              );\n            } else if (\n              rangeState === \"by_manager_id\" &&\n              notification.creator_id === searchBarInputState\n            ) {\n              return (\n                <NotificationRow notification={notification} key={index} />\n              );\n            } else {\n              return null;\n            }\n          })}\n        </div>\n        <div className={styles.post_new_accouncement_div}>\n          <Button\n            className={styles.big_bottom_buttons}\n            align=\"center\"\n            variant=\"outlined\"\n            color=\"primary\"\n            onClick={handleNewAnnouncementClick}\n          >\n            Post New Announcement\n          </Button>\n        </div>\n\n        {/* Dialog used for posting new announcement */}\n        <Dialog\n          className={styles.post_new_announcement_dialog}\n          open={postNewDialogState}\n          onClose={closePostNewDialog}\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n        >\n          <DialogTitle id=\"alert-dialog-title\">\n            {\"New Announcement\"}\n          </DialogTitle>\n          <DialogContent>\n            <TextField\n              className={styles.new_announcement_input}\n              value={titleState}\n              label=\"Title\"\n              variant=\"outlined\"\n              onChange={(e) => handleTitleChange(e.target.value)}\n            />\n            <TextField\n              className={styles.new_announcement_input}\n              value={messageState}\n              label=\"Message\"\n              variant=\"outlined\"\n              onChange={(e) => handleMessageChange(e.target.value)}\n            />\n            <TextField\n              className={styles.new_announcement_input}\n              value={receiptDateState}\n              label=\"Receipt Date (DD/MM/YYYY)\"\n              variant=\"outlined\"\n              onChange={(e) => handleReceiptDateChange(e.target.value)}\n            />\n            <TextField\n              className={styles.new_announcement_input}\n              value={endDateState}\n              label=\"End Date (DD/MM/YYYY)\"\n              variant=\"outlined\"\n              onChange={(e) => handleEndDateChange(e.target.value)}\n            />\n            {/* <MuiPickersUtilsProvider utils={DateFnsUtils}>\n              <Grid container justify=\"space-around\">\n                <KeyboardDatePicker\n                  className={styles.dialog_date_picker}\n                  margin=\"normal\"\n                  label=\"Receipt Date\"\n                  format=\"dd/MM/yyyy\"\n                  value={receiptDateState}\n                  onChange={(e) => handleReceiptDateChange(e.target.value)}\n                  KeyboardButtonProps={{\n                    'aria-label': 'change date',\n                  }}\n                />\n                <KeyboardDatePicker\n                  className={styles.dialog_date_picker}\n                  label=\"End Date\"\n                  format=\"dd/MM/yyyy\"\n                  value={endDateState}\n                  onChange={(e) => handleEndDateChange(e.target.value)}\n                  KeyboardButtonProps={{\n                    'aria-label': 'change date',\n                  }}\n                />\n              </Grid>\n            </MuiPickersUtilsProvider> */}\n            <FormControl variant=\"outlined\" className={styles.dialog_selector}>\n              <InputLabel>Receivers</InputLabel>\n              <Select\n                native\n                label=\"Receivers\"\n                value={receiversState}\n                onChange={(e) => handleReceiverChange(e.target.value)}\n              >\n                <option value={7}>All users</option>\n                <option value={5}>Manager and Tenant</option>\n                <option value={6}>Auditor and Tenant</option>\n                <option value={2}>Only Auditor</option>\n                <option value={4}>Only Tenant</option>\n              </Select>\n            </FormControl>\n          </DialogContent>\n          <DialogContent>\n            <Button className={styles.dialog_link} onClick={handleTipClick}>\n              Tips\n            </Button>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={closePostNewDialog} color=\"secondary\">\n              Cancel\n            </Button>\n            <Button onClick={submitNewAccouncement} color=\"primary\">\n              Continue\n            </Button>\n          </DialogActions>\n        </Dialog>\n\n        {/* Dialog used for announcement tips */}\n        <Dialog\n          className={styles.post_new_announcement_dialog}\n          open={tipDialogState}\n          onClose={closeTipDialog}\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n        >\n          <DialogTitle id=\"alert-dialog-title\">{\"Tips\"}</DialogTitle>\n          <DialogContent>\n            <DialogContentText id=\"alert-dialog-description\">\n              How to create new announcements?\n            </DialogContentText>\n            <DialogContentText id=\"alert-dialog-description\">\n              * \"Title\" and \"Message\" is where you should post your announcement\n              information\n            </DialogContentText>\n            <DialogContentText id=\"alert-dialog-description\">\n              * \"Receipt Date\" is the day when the receipients should start to\n              see the announcement\n            </DialogContentText>\n            <DialogContentText id=\"alert-dialog-description\">\n              * \"End Date\" is the day when the recipients should stop getting\n              the notification\n            </DialogContentText>\n            <DialogContentText id=\"alert-dialog-description\">\n              * \"Receivers\" indicates the range of receipients who can see the\n              announcement.\n            </DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={closeTipDialog} color=\"primary\">\n              Ok\n            </Button>\n          </DialogActions>\n        </Dialog>\n\n        {/* Dialog used for handling dialog states upon successful submission */}\n        <Dialog\n          className={styles.post_new_announcement_dialog}\n          open={successDialogState}\n          onClose={closeSuccessDialog}\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n        >\n          <DialogTitle id=\"alert-dialog-title\">\n            {\"Changes updated!\"}\n          </DialogTitle>\n          <DialogContent>\n            <DialogContentText id=\"alert-dialog-description\">\n              Your changes have been updated\n            </DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={handleSuccessClick} color=\"primary\">\n              Ok\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </div>\n    </main>\n  );\n}\n\nexport default ManagerHome;\n","/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/pages/TenantHome.js",[],"/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/pages/Store.js",["266"],"import React, { useContext, useEffect, useState } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { Context } from \"../Context\";\nimport Navbar from \"../Navbar\";\nimport Loading from \"./Loading\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport ExpandLess from \"@material-ui/icons/ExpandLess\";\nimport ExpandMore from \"@material-ui/icons/ExpandMore\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport QuestionAnswerIcon from \"@material-ui/icons/QuestionAnswer\";\nimport HistoryIcon from \"@material-ui/icons/History\";\nimport AssignmentTurnedInIcon from \"@material-ui/icons/AssignmentTurnedIn\";\nimport FastfoodIcon from \"@material-ui/icons/Fastfood\";\nimport StoreIcon from \"@material-ui/icons/Store\";\nimport LocalHospitalIcon from \"@material-ui/icons/LocalHospital\";\nimport Grid from \"@material-ui/core/Grid\";\nimport ReceiptIcon from \"@material-ui/icons/Receipt\";\nimport EmailIcon from \"@material-ui/icons/Email\";\nimport Button from \"@material-ui/core/Button\";\nimport ReportProblemIcon from \"@material-ui/icons/ReportProblem\";\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    margin: theme.spacing(4, 2, 10, 2),\n  },\n  list: {\n    width: \"100%\",\n    maxWidth: 800,\n    backgroundColor: theme.palette.background.paper,\n    // margin: theme.spacing(4, 0, 10, 0),\n  },\n\n  nested: {\n    // display: \"flex\",\n    paddingLeft: theme.spacing(4),\n  },\n  header: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(2, 0, 2, 0),\n  },\n  listItem: {\n    padding: theme.spacing(2, 2, 2, 2),\n  },\n  previousAuditsButtons: {\n    display: \"flex\",\n    padding: theme.spacing(0, 2, 3, 2),\n    justifyContent: \"center\",\n    // justifyContent: \"space-evenly\",\n  },\n  button: {\n    margin: theme.spacing(1, 2, 1, 2),\n  },\n  resolvedLabel: {\n    color: \"#F15A22\",\n  },\n}));\n\nfunction Store() {\n  const [openChecklist, setOpenChecklist] = useState(false);\n  const [openPrevAudits, setOpenPrevAudits] = useState(false);\n  const [tenantInfo, setTenantInfo] = useState();\n  //Context: getUserInfo method\n  const {\n    tenantState,\n    getUserInfoNoParams,\n    getTenantAudits,\n    getReport,\n    setTenantState,\n  } = useContext(Context);\n\n  const classes = useStyles();\n\n  useEffect(() => {\n    async function getResponse() {\n      try {\n        const tenantId = await getUserInfoNoParams().then((response) => {\n          console.log(response);\n          setTenantInfo(response.data);\n          return response.data.acc_id;\n        });\n        console.log(tenantId);\n        const reportIdArray = await getTenantAudits(tenantId).then(\n          (response) => {\n            if (response.data.LATEST === -1) {\n              return [...response.data.CLOSED.past_audits];\n            }\n            return [response.data.LATEST, ...response.data.CLOSED.past_audits];\n          }\n        );\n        console.log(reportIdArray);\n        //initialize array to store all objects of report info\n        let reportInfoArray = [];\n\n        for (let i = 0; i < reportIdArray.length; i++) {\n          let reportInfo = await getReport(reportIdArray[i]).then(\n            (response) => {\n              return response.data;\n            }\n          );\n          reportInfoArray.push(reportInfo);\n        }\n        if (reportInfoArray.length === reportIdArray.length) {\n          console.log(reportInfoArray);\n          setTenantState(reportInfoArray);\n        }\n      } catch (err) {\n        console.log(err);\n      }\n    }\n    getResponse();\n  }, []);\n\n  const handleChecklistClick = () => {\n    setOpenChecklist(!openChecklist);\n  };\n  const handlePrevAuditsClick = () => {\n    setOpenPrevAudits(!openPrevAudits);\n  };\n\n  return (\n    <div>\n      {tenantState && tenantInfo ? (\n        <>\n          <Navbar />\n          <Box className={classes.header} textAlign=\"center\" boxShadow={1}>\n            <Typography variant=\"h5\">{tenantInfo.store_name}</Typography>\n          </Box>\n          <div className={classes.root}>\n            <List\n              component=\"nav\"\n              aria-labelledby=\"nested-list-subheader\"\n              className={classes.list}\n            >\n              {/* <ListItem button divider={true} className={classes.listItem}>\n                <ListItemIcon>\n                  <QuestionAnswerIcon color=\"primary\" />\n                </ListItemIcon>\n                <ListItemText primary=\"View Chats\" />\n              </ListItem> */}\n              <ListItem\n                button\n                onClick={handlePrevAuditsClick}\n                divider={true}\n                className={classes.listItem}\n              >\n                <ListItemIcon>\n                  <AssignmentTurnedInIcon color=\"primary\" />\n                </ListItemIcon>\n                <ListItemText primary=\"View Audits\" />\n                {openPrevAudits ? <ExpandLess /> : <ExpandMore />}\n              </ListItem>\n              <Collapse in={openPrevAudits} timeout=\"auto\" unmountOnExit>\n                {tenantState.map((audit, index) => {\n                  const {\n                    open_date,\n                    overall_score,\n                    report_id,\n                    report_type,\n                    overall_status,\n                  } = audit;\n                  return (\n                    <List component=\"div\" disablePadding>\n                      <Box boxShadow={1}>\n                        <ListItem button className={classes.nested}>\n                          <ListItemIcon>\n                            <ReceiptIcon color=\"secondary\" />\n                          </ListItemIcon>\n                          {report_type === \"FB\" && (\n                            <ListItemText\n                              primary={`F&B Checklist conducted on ${new Date(\n                                open_date\n                              ).toString()}`}\n                              secondary={`Score: ${overall_score} `}\n                            />\n                          )}\n                          {report_type === \"SMA\" && (\n                            <ListItemText\n                              primary={`Safety Management Checklist conducted on ${new Date(\n                                open_date\n                              ).toString()}`}\n                              secondary={`Score: ${overall_score} `}\n                            />\n                          )}\n                          {report_type === \"NFB\" && (\n                            <ListItemText\n                              primary={`Non-F&B Checklist conducted on ${new Date(\n                                open_date\n                              ).toString()}`}\n                              secondary={`Score: ${overall_score} `}\n                            />\n                          )}\n                          {overall_status === 1 && (\n                            // <ListItemText className={classes.titleResolved}>\n                            <Typography\n                              variant=\"button\"\n                              className={classes.resolvedLabel}\n                            >\n                              Resolved\n                            </Typography>\n                            // </ListItemText>\n                          )}\n                        </ListItem>\n                        <div className={classes.previousAuditsButtons}>\n                          {overall_status !== 1 && (\n                            <Link to={`/t/report/${report_id}`}>\n                              <Button\n                                variant=\"contained\"\n                                color=\"secondary\"\n                                size=\"small\"\n                                className={classes.button}\n                                startIcon={<ReportProblemIcon />}\n                              >\n                                Rectify\n                              </Button>\n                            </Link>\n                          )}\n                          <Link to={`/fullreport/${report_id}`}>\n                            <Button\n                              variant=\"contained\"\n                              color=\"secondary\"\n                              size=\"small\"\n                              className={classes.button}\n                              startIcon={<CheckCircleIcon />}\n                            >\n                              View Report\n                            </Button>\n                          </Link>\n                        </div>\n                      </Box>\n                    </List>\n                  );\n                })}\n              </Collapse>\n            </List>\n          </div>\n        </>\n      ) : (\n        <Loading />\n      )}\n    </div>\n  );\n}\nexport default Store;\n","/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/pages/EditPassword.js",["267","268","269"],"import React, { useState, useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Typography, Button, TextField, FormGroup, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from \"@material-ui/core\";\nimport axios from \"axios\";\n\nimport { Context } from \"../Context\";\nimport useStyles from \"../styles\";\nimport Navbar from \"../Navbar\";\n\nfunction EditPassword() {\n  const { accountState, getAccountInfo } = useContext(Context);\n  const API_URL = \"http://localhost:8080\";\n  const [passwordState, setPasswordState] = useState(\"\");\n  const [confirmPasswordState, setConfirmPasswordState] = useState(\"\");\n  const [alertState, setAlertState] = useState(false);\n  const styles = useStyles();\n  const history = useHistory();\n\n  // Prevent over re-render by using function to modify states, instead of changing states directly\n  function openAlert() {\n    setAlertState(true);\n  }\n\n  function closeAlert() {\n    setAlertState(false);\n  }\n\n  function submitNewPassword(newPassword, confirmedNewPassword) {\n    if (newPassword != confirmedNewPassword) {\n      console.log(\"Two passwords are not the same.\")\n    } else {\n      postPasswordChange(newPassword);\n      console.log(\"Password change updated.\")\n    }\n    openAlert();\n  }\n\n  function continueRedirect() {\n    console.log(\"Redirecting...\");\n    closeAlert();\n    history.push(\"/\");\n  }\n\n  function postPasswordChange(newPassword) {\n    console.log(\"This is posting password change\");\n    let FormData = require(\"form-data\");\n    let formdata = new FormData();\n    formdata.append(\"new_password\", newPassword);\n    return axios\n      .post(\n        `${API_URL}/account/postPasswordUpdate`,\n        formdata,\n        {\n          headers: {\n            \"Content-Type\": `multipart/form-data; boundary=${formdata._boundary}`,\n          },\n        }\n      )\n      .then((response) => {\n        console.log(response);\n      })\n      .catch(() => {\n        console.log(\"Failed password change submission\");\n      })\n  }\n\n  return (\n    <main className={styles.main}>\n      <Navbar />\n      <br />\n      <Typography variant=\"h3\" align=\"center\">Edit Password</Typography>\n      <FormGroup column=\"true\">\n        <TextField className={styles.big_textfield} label=\"New Password\" onChange={(e) => setPasswordState(e.target.value)}/>\n        <TextField className={styles.big_textfield} label=\"Confirm New Password\" onChange={(e) => setConfirmPasswordState(e.target.value)}/>\n      </FormGroup>\n      <Button \n        align=\"center\"\n        variant=\"outlined\"\n        color=\"primary\"\n        className={styles.big_buttons}\n        fullWidth\n        onClick={() => submitNewPassword(passwordState, confirmPasswordState)}\n      >\n        Submit\n      </Button>\n      <Dialog\n        open={alertState}\n        onClose={closeAlert}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{\"Message:\"}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            Password successfully updated.\n          </DialogContentText>\n          <DialogContentText id=\"alert-dialog-description\">\n            Redirecting to login page...\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={continueRedirect} color=\"primary\">\n            Continue\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </main>\n  )\n}\n\nexport default EditPassword;","/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/pages/Chat.js",["270","271","272","273"],"import { FormGroup } from \"@material-ui/core\";\nimport { Typography, Button, Grid, TextField } from \"@material-ui/core\";\nimport React, { useState, useEffect, useContext } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nimport { Context } from \"../Context\";\nimport Navbar from \"../Navbar\";\nimport useStyles from \"../styles\";\nimport { getDateString, getTimeString } from \"../components/utils\";\n\nfunction Chat() {\n  const { chatId } = useParams(); // typeof chatId: String\n  const [chatEntriesState, setChatEntriesState] = useState([]);\n  const [subjectState, setSubjectState] = useState(\"\");\n  const [bodyState, setBodyState] = useState(\"\");\n  // Use a state to force\n  const {\n    allChatsOfUserState,\n    getChatEntriesOfUser,\n    postChatEntry,\n    accountState,\n    chatSubmitState,\n  } = useContext(Context);\n  const styles = useStyles();\n  const { acc_id, role_id } = accountState;\n\n  useEffect(() => {\n    async function getResponse() {\n      try {\n        await getChatEntriesOfUser(chatId).then((response) => {\n          console.log(\"Chat: allChatsOfUser: \" + response.data);\n          setChatEntriesState(response.data.reverse());\n          //console.log(\"state: \" + chatEntriesState);\n          allChatsOfUserState.map((chat, index) => {});\n        });\n      } catch {\n        console.log(\"Failed to retrive allChatsOfUser\");\n      }\n    }\n    getResponse();\n  }, [chatSubmitState]);\n\n  // Check if the message is sent by the user, or received by the user\n  function isMine(sender_id) {\n    return sender_id === acc_id;\n  }\n\n  // Handle the SEND MESSAGE button click\n  function handleClick() {\n    let parentChatId = chatId;\n    let subject = subjectState;\n    let messageBody = bodyState;\n    let attachments = null; // What is JSON node?\n    let date = getDateString(new Date());\n    let time = getTimeString();\n    console.log(\"This is calling postNewChatEntry\");\n    console.log(\"Date: \" + date);\n    console.log(\"Time: \" + time);\n    console.log(\"Chat ID: \" + parentChatId);\n    console.log(\"Subject: \" + subject);\n    console.log(\"Message Body: \" + messageBody);\n    postChatEntry(parentChatId, subject, messageBody, attachments);\n  }\n\n  function subjectChangeHandler(subject_input) {\n    setSubjectState(subject_input);\n  }\n\n  function bodyChangeHandler(body_input) {\n    setBodyState(body_input);\n  }\n\n  return (\n    <main className={styles.main}>\n      <Navbar />\n      <br />\n      {/* {(role_id === \"Auditor\") ? \n        <div>\n          <Typography variant=\"h5\" align=\"center\">{storeName}</Typography>\n          <Typography variant=\"body2\" align=\"center\">ID: {accId}</Typography>\n        </div>\n        :  */}\n      <div>\n        <Typography variant=\"h5\" align=\"center\">\n          Chat ID: {chatId}\n        </Typography>\n      </div>\n      {/* } */}\n\n      <br />\n      <ul className={styles.chat_entries_list}>\n        {chatEntriesState.map((entry, index) => {\n          return (\n            <React.Fragment key={index}>\n              <li\n                item\n                className={\n                  isMine(entry.sender_id)\n                    ? styles.rightBubble\n                    : styles.leftBubble\n                }\n              >\n                <Grid item xs={12} sm container>\n                  <Grid item xs container direction=\"column\" spacing={2}>\n                    <Grid item xs>\n                      <Typography variant=\"subtitle2\" color=\"textSecondary\">\n                        Subject: {entry.subject}\n                      </Typography>\n                      <Typography variant=\"body1\">\n                        {entry.messageBody}\n                      </Typography>\n                    </Grid>\n                  </Grid>\n                  <Grid item>\n                    <Typography variant=\"body2\" color=\"textSecondary\">\n                      {entry.date}, {entry.time}\n                    </Typography>\n                    <Typography variant=\"body2\" color=\"textSecondary\">\n                      {entry.attachments}\n                    </Typography>\n                  </Grid>\n                </Grid>\n              </li>\n            </React.Fragment>\n          );\n        })}\n      </ul>\n      <div className={styles.chat_entry_edit}>\n        <FormGroup column=\"true\">\n          <TextField\n            className={styles.message_input}\n            label=\"Subject\"\n            variant=\"outlined\"\n            onChange={(e) => subjectChangeHandler(e.target.value)}\n          />\n          <TextField\n            className={styles.message_input}\n            label=\"Message\"\n            variant=\"outlined\"\n            onChange={(e) => bodyChangeHandler(e.target.value)}\n          />\n        </FormGroup>\n\n        <Button\n          className={styles.big_buttons}\n          align=\"center\"\n          variant=\"outlined\"\n          fullWidth\n          color=\"primary\"\n          onClick={() => handleClick()}\n        >\n          Send Message\n        </Button>\n      </div>\n    </main>\n  );\n}\n\nexport default Chat;\n","/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/pages/AuditReport.js",["274","275"],"import React, { useEffect, useState, useContext } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport Navbar from \"../Navbar\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Context } from \"../Context\";\nimport Loading from \"./Loading\";\nimport AuditReportCard from \"../components/AuditReportCard\";\n\nconst useStyles = makeStyles((theme) => ({\n  header: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(2, 0, 2, 0),\n  },\n  root: {\n    width: \"100%\",\n    padding: theme.spacing(4, 0, 10, 0),\n  },\n}));\n\nfunction AuditReport() {\n  const { reportId } = useParams();\n  const {\n    getReportStats,\n    getUserInfoNoParams,\n    getReport,\n    getQuestionInfo,\n    resolvedState,\n  } = useContext(Context);\n  const classes = useStyles();\n\n  const [questions, setQuestions] = useState();\n  const [auditorid, setAuditorId] = useState();\n  const [tenantid, setTenantId] = useState();\n\n  useEffect(() => {\n    async function getResponse() {\n      try {\n        //attain auditor account id\n        getUserInfoNoParams().then((response) => {\n          setAuditorId(response.data.acc_id);\n        });\n\n        //attain tenant id based on the report\n        getReport(reportId).then((response) => {\n          // console.log(response);\n          setTenantId(response.data.tenant_id);\n        });\n\n        const questionsArray = await getReportStats(reportId).then(\n          (response) => {\n            console.log(response);\n            return response.data.FailedQuestions;\n          }\n        );\n\n        let questionInfoArray = [];\n\n        for (let j = 0; j < questionsArray.length; j++) {\n          let qnInfo = await getQuestionInfo(reportId, questionsArray[j]).then(\n            (response) => {\n              console.log(\"im here\");\n              console.log(response);\n              return response;\n            }\n          );\n          questionInfoArray.push(qnInfo);\n        }\n\n        if (questionInfoArray.length === questionsArray.length) {\n          console.log(questionInfoArray);\n          setQuestions(questionInfoArray);\n        }\n\n        //attain failed questions\n        // const failedQuestionsArray = await\n\n        // attain failed entries\n        // const entryArray = await getReportStats(reportId).then((response) => {\n        //   // console.log(response);\n        //   return response.data.Failed_Entries;\n        // });\n        // console.log(entryArray);\n        // let entryInfoArray = [];\n\n        // for (let i = 0; i < entryArray.length; i++) {\n        //   // console.log(entryArray[i]);\n        //   // console.log(reportId);\n        //   let entryInfo = await getReportEntry(reportId, entryArray[i]).then(\n        //     (response) => {\n        //       console.log(response);\n        //       return response;\n        //     }\n        //   );\n        //   entryInfoArray.push(entryInfo);\n        // }\n        // if (entryInfoArray.length === entryArray.length) {\n        //   console.log(entryInfoArray);\n        //   setFailedEntries(entryInfoArray);\n        // }\n      } catch (err) {\n        console.error(err);\n      }\n    }\n    getResponse();\n  }, [resolvedState]);\n\n  return (\n    <div>\n      {questions && auditorid && tenantid ? (\n        <>\n          <Navbar />\n          <Box className={classes.header} textAlign=\"center\" boxShadow={1}>\n            <Typography variant=\"h5\">Report Non-Compliance Overview</Typography>\n          </Box>\n          <Box className={classes.reportBasicInfo}></Box>\n          <div className={classes.root}>\n            {questions.map((question) => {\n              const { data } = question;\n              let severity = data.severity / 1000000;\n              severity = Math.floor(severity);\n              let timeframe = \"\";\n              switch (severity) {\n                case 1:\n                  timeframe = \"3 weeks\";\n                  break;\n                case 2:\n                  timeframe = \"2 weeks\";\n                  break;\n                case 3:\n                  timeframe = \"1 week\";\n                  break;\n                case 4:\n                  timeframe = \"4 days\";\n                  break;\n                case 5:\n                  timeframe = \"1 day\";\n                  break;\n              }\n              return (\n                <AuditReportCard\n                  // entry_id={data.entry_id}\n                  requirement={data.requirement}\n                  original_remarks={data.original_remarks}\n                  timeframe={timeframe}\n                  report_id={reportId}\n                  tenant_id={tenantid}\n                  qn_id={data.qn_id}\n                  current_qn_status={data.current_qn_status}\n                  image={data.images[0]}\n                />\n              );\n            })}\n          </div>\n        </>\n      ) : (\n        <Loading />\n      )}\n    </div>\n  );\n}\n\nexport default AuditReport;\n","/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/components/testJwt/Login.js",["276","277","278","279"],"/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/components/testJwt/AuthenticatedRoute.js",[],"/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/data.js",["280","281"],"import React from \"react\";\n\nconst users = [\n  {\n    username: \"hannz\",\n    password: \"test123\",\n    type: \"auditor\",\n  },\n  {\n    username: \"ZHZHZH\",\n    pasword: \"test123\",\n    type: \"tenant\",\n  },\n];\n\nexport const auditorAccountDatas = [\n  \"acc_id\", // 1003\n  \"appealed_audits\", // null\n  \"branch_id\", // \"*\"\n  \"completed_audits\", // null\n  \"email\", // \"jeanmah828@gmail.com\"\n  \"employee_id\", // 1004332\n  \"first_name\", // \"Hannah\"\n  \"hp\", // \"90270062\"\n  \"last_name\", // \"Mah\"\n  \"mgr_id\", // 1001\n  \"outstanding_audit_ids\", // null\n  \"role_id\", // \"Auditor\"\n  \"username\", // \"hannz\"\n];\n\nexport const tenantAccountDatas = [\n  \"acc_id\", //1004\n  \"audit_score\", //2\n  \"branch_id\", //\"CGH\"\n  \"email\", //\"yzh98640860@gmail.com\"\n  \"employee_id\", //1004516\n  \"first_name\", //\"Zhonghao\"\n  \"hp\", //\"98640860\"\n  \"last_name\", //\"Yang\"\n  \"last_audit\", //-1\n  \"past_audits\", //null\n  \"role_id\", //\"Tenant\"\n  \"store_addr\", //\"#01-20\"\n  \"type_id\", //\"FB\"\n  \"username\", //\"ZHZHZH\"\n];\n\nexport const managerAccountDatas = [\n  \"acc_id\", //1001\n  \"branch_id\", //\"HQ\"\n  \"email\", //\"marcushojww@gmail.com\"\n  \"employee_id\", //1002222\n  \"first_name\", //\"Marcus\"\n  \"hp\", //\"+65 432432\"\n  \"last_name\", //\"Ho\"\n  \"role_id\", //\"Manager\"\n  \"username\", //\"mcMarcus\"\n];\n\nexport const auditorNavLinks = [\n  {\n    id: 1,\n    url: \"/home/a\",\n    text: \"Home\",\n  },\n  {\n    id: 2,\n    url: \"/allChats\",\n    text: \"Chat\",\n  },\n  {\n    id: 3,\n    url: \"/institutions\",\n    text: \"Institutions\",\n  },\n  {\n    id: 4,\n    url: \"/account\",\n    text: \"Account\",\n  },\n  // {\n  //   id: 5,\n  //   url: \"/\",\n  //   text: \"Log Out\",\n  // },\n];\n\nexport const tenantNavLinks = [\n  {\n    id: 1,\n    url: \"/home/t\",\n    text: \"Home\",\n  },\n  {\n    id: 2,\n    url: \"/allChats\",\n    text: \"Chat\",\n  },\n  {\n    id: 3,\n    url: \"/store\",\n    text: \"Store\",\n  },\n  {\n    id: 4,\n    url: \"/account\",\n    text: \"Account\",\n  },\n  // {\n  //   id: 5,\n  //   url: \"/\",\n  //   text: \"Log Out\",\n  // },\n];\n\nexport const managerNavLinks = [\n  {\n    id: 1,\n    url: \"/home/m\",\n    text: \"Home\",\n  },\n  {\n    id: 2,\n    url: \"/account\",\n    text: \"My Account\",\n  },\n  // {\n  //   id: 3,\n  //   url: \"/\",\n  //   text: \"Log Out\",\n  // },\n];\n\nexport const audits = [\n  {\n    tenantid: \"1\",\n    type: \"FB\",\n    tenantName: \"Kopitiam\",\n    timeRemaining: 30,\n    status: \"unresolved\",\n    date: \"-\",\n    institution: \"CGH\",\n    score: \"\",\n  },\n  {\n    tenantid: \"2\",\n    type: \"FB\",\n    tenantName: \"1983\",\n    timeRemaining: 2,\n    status: \"unresolved\",\n    date: \"-\",\n    institution: \"KKH\",\n    score: \"\",\n  },\n  {\n    tenantid: \"3\",\n    type: \"FB\",\n    tenantName: \"7-Eleven\",\n    timeRemaining: 10,\n    status: \"unresolved\",\n    date: \"-\",\n    institution: \"SGH\",\n    score: \"\",\n  },\n  {\n    tenantid: \"4\",\n    type: \"Non-FB\",\n    tenantName: \"Kcuts\",\n    timeRemaining: 0,\n    status: \"resolved\",\n    date: \"12-02-20\",\n    institution: \"SKH\",\n    score: \"\",\n  },\n  {\n    tenantid: \"5\",\n    type: \"FB\",\n    tenantName: \"Kaki Makan\",\n    timeRemaining: 0,\n    status: \"resolved\",\n    date: \"27-02-20\",\n    institution: \"NCCS\",\n    score: \"\",\n  },\n  {\n    tenantid: \"6\",\n    type: \"FB\",\n    tenantName: \"7-Eleven\",\n    timeRemaining: 0,\n    status: \"resolved\",\n    date: \"13-01-20\",\n    institution: \"NDCS\",\n    score: \"\",\n  },\n  {\n    tenantid: \"7\",\n    type: \"FB\",\n    tenantName: \"myNonna's\",\n    timeRemaining: 2,\n    status: \"unresolved\",\n    date: \"-\",\n    institution: \"NHCS\",\n    score: \"\",\n  },\n  {\n    tenantid: \"8\",\n    type: \"Non-FB\",\n    tenantName: \"Comics Connection\",\n    timeRemaining: 10,\n    status: \"unresolved\",\n    date: \"-\",\n    institution: \"SNEC\",\n    score: \"\",\n  },\n];\n\nexport const tenants = [\n  {\n    tenantid: \"1\",\n    tenantName: \"Kopitiam\",\n    timeRemaining: 30,\n    status: \"unresolved\",\n    institution: \"1\",\n    latestScore: 0,\n    fbChecklist: [\n      {\n        id: \"1\",\n        category: \"A\",\n        text: \"FB-A-Question-1\",\n        checked: false,\n        comment: \"\",\n      },\n      {\n        id: \"2\",\n        category: \"A\",\n        text: \"FB-A-Question-2\",\n        checked: false,\n        comment: \"\",\n      },\n      {\n        id: \"3\",\n        category: \"A\",\n        text: \"FB-A-Question-3\",\n        checked: false,\n        comment: \"\",\n      },\n      {\n        id: \"4\",\n        category: \"A\",\n        text: \"FB-A-Question-4\",\n        checked: false,\n        comment: \"\",\n      },\n      {\n        id: \"5\",\n        category: \"B\",\n        text: \"FB-B-Question-1\",\n        checked: false,\n        comment: \"\",\n      },\n      {\n        id: \"6\",\n        category: \"B\",\n        text: \"FB-B-Question-2\",\n        checked: false,\n        comment: \"\",\n      },\n      {\n        id: \"7\",\n        category: \"B\",\n        text: \"FB-B-Question-3\",\n        checked: false,\n        comment: \"\",\n      },\n      {\n        id: \"8\",\n        category: \"B\",\n        text: \"FB-B-Question-4\",\n        checked: false,\n        comment: \"\",\n      },\n    ],\n  },\n  {\n    tenantid: \"2\",\n    tenantName: \"1983\",\n    timeRemaining: 2,\n    status: \"unresolved\",\n    institution: \"2\",\n    latestScore: 0,\n    score: [{ date: \"12-3-2021\", value: 0 }],\n  },\n  {\n    tenantid: \"3\",\n    tenantName: \"7-Eleven\",\n    timeRemaining: 10,\n    status: \"unresolved\",\n    institution: \"3\",\n    latestScore: 0,\n    score: [{ date: \"12-3-2021\", value: 0 }],\n    fbChecklist: [\n      {\n        id: \"1\",\n        category: \"A\",\n        text: \"FB-A-Question-1\",\n        checked: false,\n        comment: \"\",\n      },\n      {\n        id: \"2\",\n        category: \"A\",\n        text: \"FB-A-Question-2\",\n        checked: false,\n        comment: \"\",\n      },\n      {\n        id: \"3\",\n        category: \"A\",\n        text: \"FB-A-Question-3\",\n        checked: false,\n        comment: \"\",\n      },\n      {\n        id: \"4\",\n        category: \"A\",\n        text: \"FB-A-Question-4\",\n        checked: false,\n        comment: \"\",\n      },\n      {\n        id: \"5\",\n        category: \"B\",\n        text: \"FB-B-Question-1\",\n        checked: false,\n        comment: \"\",\n      },\n      {\n        id: \"6\",\n        category: \"B\",\n        text: \"FB-B-Question-2\",\n        checked: false,\n        comment: \"\",\n      },\n      {\n        id: \"7\",\n        category: \"B\",\n        text: \"FB-B-Question-3\",\n        checked: false,\n        comment: \"\",\n      },\n      {\n        id: \"8\",\n        category: \"B\",\n        text: \"FB-B-Question-4\",\n        checked: false,\n        comment: \"\",\n      },\n    ],\n  },\n  {\n    tenantid: \"4\",\n    tenantName: \"Kcuts\",\n    timeRemaining: 0,\n    status: \"resolved\",\n    institution: \"4\",\n    latestScore: 0,\n    score: [{ date: \"12-3-2021\", value: 0 }],\n    fbChecklist: [\n      {\n        id: \"1\",\n        category: \"A\",\n        text: \"FB-A-Question-1\",\n        checked: false,\n        comment: \"\",\n      },\n      {\n        id: \"2\",\n        category: \"A\",\n        text: \"FB-A-Question-2\",\n        checked: false,\n        comment: \"\",\n      },\n      {\n        id: \"3\",\n        category: \"A\",\n        text: \"FB-A-Question-3\",\n        checked: false,\n        comment: \"\",\n      },\n      {\n        id: \"4\",\n        category: \"A\",\n        text: \"FB-A-Question-4\",\n        checked: false,\n        comment: \"\",\n      },\n      {\n        id: \"5\",\n        category: \"B\",\n        text: \"FB-B-Question-1\",\n        checked: false,\n        comment: \"\",\n      },\n      {\n        id: \"6\",\n        category: \"B\",\n        text: \"FB-B-Question-2\",\n        checked: false,\n        comment: \"\",\n      },\n      {\n        id: \"7\",\n        category: \"B\",\n        text: \"FB-B-Question-3\",\n        checked: false,\n        comment: \"\",\n      },\n      {\n        id: \"8\",\n        category: \"B\",\n        text: \"FB-B-Question-4\",\n        checked: false,\n        comment: \"\",\n      },\n    ],\n  },\n  {\n    tenantid: \"5\",\n    tenantName: \"Kaki Makan\",\n    timeRemaining: 0,\n    status: \"resolved\",\n    date: \"27-02-20\",\n    institution: \"5\",\n    latestScore: 0,\n    score: [{ date: \"12-3-2021\", value: 0 }],\n    fbChecklist: [\n      {\n        id: \"1\",\n        category: \"A\",\n        text: \"FB-A-Question-1\",\n        checked: false,\n        comment: \"\",\n      },\n      {\n        id: \"2\",\n        category: \"A\",\n        text: \"FB-A-Question-2\",\n        checked: false,\n        comment: \"\",\n      },\n      {\n        id: \"3\",\n        category: \"A\",\n        text: \"FB-A-Question-3\",\n        checked: false,\n        comment: \"\",\n      },\n      {\n        id: \"4\",\n        category: \"A\",\n        text: \"FB-A-Question-4\",\n        checked: false,\n        comment: \"\",\n      },\n      {\n        id: \"5\",\n        category: \"B\",\n        text: \"FB-B-Question-1\",\n        checked: false,\n        comment: \"\",\n      },\n      {\n        id: \"6\",\n        category: \"B\",\n        text: \"FB-B-Question-2\",\n        checked: false,\n        comment: \"\",\n      },\n      {\n        id: \"7\",\n        category: \"B\",\n        text: \"FB-B-Question-3\",\n        checked: false,\n        comment: \"\",\n      },\n      {\n        id: \"8\",\n        category: \"B\",\n        text: \"FB-B-Question-4\",\n        checked: false,\n        comment: \"\",\n      },\n    ],\n  },\n  {\n    tenantid: \"6\",\n    tenantName: \"7-Eleven\",\n    timeRemaining: 0,\n    status: \"resolved\",\n    date: \"13-01-20\",\n    institution: \"6\",\n    latestScore: 0,\n    score: [{ date: \"12-3-2021\", value: 0 }],\n    fbChecklist: [\n      {\n        id: \"1\",\n        category: \"A\",\n        text: \"FB-A-Question-1\",\n        checked: false,\n        comment: \"\",\n      },\n      {\n        id: \"2\",\n        category: \"A\",\n        text: \"FB-A-Question-2\",\n        checked: false,\n        comment: \"\",\n      },\n      {\n        id: \"3\",\n        category: \"A\",\n        text: \"FB-A-Question-3\",\n        checked: false,\n        comment: \"\",\n      },\n      {\n        id: \"4\",\n        category: \"A\",\n        text: \"FB-A-Question-4\",\n        checked: false,\n        comment: \"\",\n      },\n      {\n        id: \"5\",\n        category: \"B\",\n        text: \"FB-B-Question-1\",\n        checked: false,\n        comment: \"\",\n      },\n      {\n        id: \"6\",\n        category: \"B\",\n        text: \"FB-B-Question-2\",\n        checked: false,\n        comment: \"\",\n      },\n      {\n        id: \"7\",\n        category: \"B\",\n        text: \"FB-B-Question-3\",\n        checked: false,\n        comment: \"\",\n      },\n      {\n        id: \"8\",\n        category: \"B\",\n        text: \"FB-B-Question-4\",\n        checked: false,\n        comment: \"\",\n      },\n    ],\n  },\n  {\n    tenantid: \"7\",\n    tenantName: \"myNonna's\",\n    timeRemaining: 2,\n    status: \"unresolved\",\n    date: \"-\",\n    institution: \"1\",\n    latestScore: 0,\n    score: [{ date: \"12-3-2021\", value: 0 }],\n    fbChecklist: [\n      {\n        id: \"1\",\n        category: \"A\",\n        text: \"FB-A-Question-1\",\n        checked: false,\n        comment: \"\",\n      },\n      {\n        id: \"2\",\n        category: \"A\",\n        text: \"FB-A-Question-2\",\n        checked: false,\n        comment: \"\",\n      },\n      {\n        id: \"3\",\n        category: \"A\",\n        text: \"FB-A-Question-3\",\n        checked: false,\n        comment: \"\",\n      },\n      {\n        id: \"4\",\n        category: \"A\",\n        text: \"FB-A-Question-4\",\n        checked: false,\n        comment: \"\",\n      },\n      {\n        id: \"5\",\n        category: \"B\",\n        text: \"FB-B-Question-1\",\n        checked: false,\n        comment: \"\",\n      },\n      {\n        id: \"6\",\n        category: \"B\",\n        text: \"FB-B-Question-2\",\n        checked: false,\n        comment: \"\",\n      },\n      {\n        id: \"7\",\n        category: \"B\",\n        text: \"FB-B-Question-3\",\n        checked: false,\n        comment: \"\",\n      },\n      {\n        id: \"8\",\n        category: \"B\",\n        text: \"FB-B-Question-4\",\n        checked: false,\n        comment: \"\",\n      },\n    ],\n  },\n  {\n    tenantid: \"8\",\n    tenantName: \"Comics Connection\",\n    timeRemaining: 10,\n    status: \"unresolved\",\n    date: \"-\",\n    institution: \"2\",\n    latestScore: 0,\n    score: [{ date: \"12-3-2021\", value: 0 }],\n    fbChecklist: [\n      {\n        id: \"1\",\n        category: \"A\",\n        text: \"FB-A-Question-1\",\n        checked: false,\n        comment: \"\",\n      },\n      {\n        id: \"2\",\n        category: \"A\",\n        text: \"FB-A-Question-2\",\n        checked: false,\n        comment: \"\",\n      },\n      {\n        id: \"3\",\n        category: \"A\",\n        text: \"FB-A-Question-3\",\n        checked: false,\n        comment: \"\",\n      },\n      {\n        id: \"4\",\n        category: \"A\",\n        text: \"FB-A-Question-4\",\n        checked: false,\n        comment: \"\",\n      },\n      {\n        id: \"5\",\n        category: \"B\",\n        text: \"FB-B-Question-1\",\n        checked: false,\n        comment: \"\",\n      },\n      {\n        id: \"6\",\n        category: \"B\",\n        text: \"FB-B-Question-2\",\n        checked: false,\n        comment: \"\",\n      },\n      {\n        id: \"7\",\n        category: \"B\",\n        text: \"FB-B-Question-3\",\n        checked: false,\n        comment: \"\",\n      },\n      {\n        id: \"8\",\n        category: \"B\",\n        text: \"FB-B-Question-4\",\n        checked: false,\n        comment: \"\",\n      },\n    ],\n  },\n];\n\nexport const categories = [\"all\", \"unresolved\", \"resolved\"];\n\nexport const auditors = [\n  {\n    id: \"1\",\n    name: \"Marcus Ho\",\n    dob: \"19 January 1998\",\n  },\n];\n\nexport const institutions = [\n  {\n    id: \"1\",\n    name: \"CGH\",\n    tenantNames: [],\n    tenantIDs: [],\n    imageUrl: \"../images/cgh.png\",\n    address: \"2 Simei Street 3, Singapore 529889\",\n  },\n  {\n    id: \"2\",\n    name: \"KKH\",\n    tenantNames: [],\n    tenantIDs: [],\n    imageUrl: \"../images/kkh.png\",\n    address: \"100 Bukit Timah Rd, Singapore 229899\",\n  },\n  {\n    id: \"3\",\n    name: \"SGH\",\n    tenantNames: [],\n    tenantIDs: [],\n    imageUrl: \"../images/sgh.png\",\n    address: \"Outram Rd, Singapore 169608\",\n  },\n  {\n    id: \"4\",\n    name: \"SKH\",\n    tenantNames: [],\n    tenantIDs: [],\n    imageUrl: \"../images/skh.png\",\n    address: \"110 Sengkang E Way, Singapore 544886\",\n  },\n  {\n    id: \"5\",\n    name: \"NCCS\",\n    tenantNames: [],\n    tenantIDs: [],\n    imageUrl: \"../images/nccs.png\",\n    address: \"11 Hospital Crescent, Singapore 169610\",\n  },\n  {\n    id: \"6\",\n    name: \"NDCS\",\n    tenantNames: [],\n    tenantIDs: [],\n    imageUrl: \"../images/ndcs.jpeg\",\n    address: \"5 Second Hospital Ave, Singapore 168938\",\n  },\n];\n\nexport const checklistTypes = [\n  \"FB Checklist\",\n  \"Non-FB Checklist\",\n  \"SM Checklist\",\n];\n\nexport const fbChecklist = [\n  {\n    id: \"1\",\n    category: \"A\",\n    text:\n      \"Shop is open and ready to service patients/visitors according to operating hours.\",\n    modalOpen: false,\n  },\n  {\n    id: \"2\",\n    category: \"A\",\n    text: \"Staff Attendance: adequate staff for peak and non-peak hours.\",\n    modalOpen: false,\n  },\n  {\n    id: \"3\",\n    category: \"A\",\n    text: \"At least one (1) clearly assigned person in-charge on site.\",\n    modalOpen: false,\n  },\n  {\n    id: \"4\",\n    category: \"A\",\n    text:\n      \"Staff who are unfit for work due to illness should not report to work).\",\n    modalOpen: false,\n  },\n  {\n    id: \"5\",\n    category: \"B\",\n    text:\n      \"Cleaning and maintenance records for equipment, ventilation and exhaust system.\",\n    modalOpen: false,\n  },\n  {\n    id: \"6\",\n    category: \"B\",\n    text: \"Adequate and regular pest control.\",\n    modalOpen: false,\n  },\n  {\n    id: \"7\",\n    category: \"B\",\n    text: \"Goods and equipment are within shop boundary.\",\n    modalOpen: false,\n  },\n  {\n    id: \"8\",\n    category: \"B\",\n    text: \"Store display/ Shop front is neat and tidy.\",\n    modalOpen: false,\n  },\n];\nexport const tenantImages = [\n  {\n    name: \"7-Eleven\",\n    imageUrl: \"../images/7-11.png\",\n  },\n  {\n    name: \"168 Florist\",\n    imageUrl: \"../images/168florist.jpeg\",\n  },\n  {\n    name: \"1983\",\n    imageUrl: \"../images/1983.jpeg\",\n  },\n  {\n    name: \"Coffee Bean\",\n    imageUrl: \"../images/coffee_bean.jpg\",\n  },\n  {\n    name: \"Kopitiam\",\n    imageUrl: \"../images/kopitiam.jpeg\",\n  },\n  {\n    name: \"Delifrance\",\n    imageUrl: \"../images/delifrance.jpeg\",\n  },\n  {\n    name: \"Mr Bean\",\n    imageUrl: \"../images/mr_bean.jpeg\",\n  },\n  {\n    name: \"Mothercare\",\n    imageUrl: \"../images/mothercare.jpeg\",\n  },\n];\n","/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/AuthenticationService.js",[],"/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/Navbar.js",["282"],"import React, { useState, useRef, useEffect, useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { FaBars } from \"react-icons/fa\";\nimport AuthenticationService from \"./AuthenticationService\";\nimport { auditorNavLinks, tenantNavLinks, managerNavLinks } from \"./data\";\nimport auditor from \"./auditor.png\";\nimport { Context } from \"./Context\";\nimport { Typography, Button } from \"@material-ui/core\";\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport useStyles from \"./styles\";\n\nfunction Navbar() {\n  const { accountState, getAccountInfo } = useContext(Context);\n  const { role_id, username } = accountState;\n  const [toggleClicked, settoggleClicked] = useState(false);\n  const linksContainerRef = useRef(null);\n  const linksRef = useRef(null);\n  const styles = useStyles();\n  const showLinks = () => {\n    settoggleClicked(!toggleClicked);\n  };\n\n  useEffect(() => {\n    getAccountInfo();\n    let linksHeight = linksRef.current.getBoundingClientRect().height;\n    if (toggleClicked) {\n      linksContainerRef.current.style.height = `${linksHeight}px`;\n    } else {\n      linksContainerRef.current.style.height = \"0px\";\n    }\n  }, [toggleClicked]);\n\n  function mapLinks(links) {\n    return links.map((link, index) => {\n      const { url, text } = link;\n      return (\n        <li key={index}>\n          <Link to={url}>{text}</Link>\n        </li>\n      );\n    });\n  }\n\n  function getNavLinks(role) {\n    if (role === \"Auditor\") {\n      return mapLinks(auditorNavLinks);\n    } else if (role === \"Tenant\") {\n      return mapLinks(tenantNavLinks);\n    } else if (role === \"Manager\") {\n      return mapLinks(managerNavLinks);\n    }\n  }\n\n  // console.log(role_id);\n  // console.log(navLinks);\n  // console.log(fakeNavLinks);\n  // console.log(navLinks===fakeNavLinks);\n\n  return (\n    <nav>\n      <div className=\"nav-pc\">\n        <div className=\"nav-mobile\">\n          <img src={auditor} className=\"logo\" alt=\"auditor\"></img>\n          <div className=\"auditor-name\">\n            <Typography variant=\"h6\">Welcome {username}</Typography>\n          </div>\n          <button\n            className=\"nav-toggle\"\n            onClick={() => {\n              showLinks();\n            }}\n          >\n            <FaBars />\n          </button>\n        </div>\n        <div className=\"links-container\" ref={linksContainerRef}>\n          <ul className=\"links\" ref={linksRef}>\n            {getNavLinks(role_id)}\n            <Link\n              to={\"/\"}\n              onClick={() => {\n                AuthenticationService.logout();\n              }}\n            >\n              Logout\n            </Link>\n            {(role_id === \"Manager\") ? null : \n              <Link to=\"/announcements\"><Button><NotificationsIcon className={styles.NotificationsIcon}/></Button></Link>\n            }\n          </ul>\n        </div>\n      </div>\n    </nav>\n  );\n\n  // return (\n  //   <nav>\n  //     <div className=\"nav-pc\">\n  //       <div className=\"nav-mobile\">\n  //         <img src={auditor} className=\"logo\" alt=\"auditor\"></img>\n  //         <div className=\"auditor-name\">Welcome Marcus {}</div>\n  //         <button\n  //           className=\"nav-toggle\"\n  //           onClick={() => {\n  //             showLinks();\n  //           }}\n  //         >\n  //           <FaBars />\n  //         </button>\n  //       </div>\n  //       <div className=\"links-container\" ref={linksContainerRef}>\n  //         <ul className=\"links\" ref={linksRef}>\n  //           {fakeNavLinks.map((link, index) => {\n  //             const { id, url, text } = link;\n  //             return (\n  //               <li key={index}>\n  //                 <Link to={url}>{text}</Link>\n  //               </li>\n  //             );\n  //           })}\n  //         </ul>\n  //       </div>\n  //     </div>\n  //   </nav>\n  // );\n}\n\nexport default Navbar;\n","/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/components/HomeCategories.js",[],["283","284"],"/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/components/Audits.js",["285","286","287"],"import React, { useRef } from \"react\";\nimport { FaAngleRight } from \"react-icons/fa\";\nimport { Link } from \"react-router-dom\";\n\nfunction Audits({ homeAudits }) {\n  //to display the audits on the home page\n  //change color based on whether it is resolved or not\n  const homeAuditGridRef = useRef(null);\n\n  return (\n    <div>\n      {homeAudits.map((audit, index) => {\n        const { tenantid, tenantName, timeRemaining, status, date } = audit;\n\n        return (\n          <Link key={index} to={`/tenant/${tenantid}`}>\n            <div\n              className={`${\n                audit.status === \"resolved\"\n                  ? \"homeaudit-grid-resolved\"\n                  : \"homeaudit-grid-unresolved\"\n              }`}\n              ref={homeAuditGridRef}\n            >\n              <div className=\"tenantName-gridItem\">{tenantName}</div>\n              <div className=\"btn-homeToTenant\">\n                <FaAngleRight />\n              </div>\n            </div>\n          </Link>\n        );\n      })}\n    </div>\n  );\n}\n\nexport default Audits;\n","/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/components/HomeAuditorCards.js",["288","289","290","291","292","293"],"import React, { useContext, useEffect, useState } from \"react\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport { Link } from \"react-router-dom\";\nimport Button from \"@material-ui/core/Button\";\nimport CameraIcon from \"@material-ui/icons/PhotoCamera\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\n// import Link from \"@material-ui/core/Link\";\nimport { Context } from \"../Context\";\nimport { tenantImages } from \"../data\";\nimport zIndex from \"@material-ui/core/styles/zIndex\";\nimport defaultShop from \"../images/defaultshop.jpeg\";\n\n// function Copyright() {\n//   return (\n//     <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n//       {\"Copyright © \"}\n//       <Link color=\"inherit\" href=\"https://material-ui.com/\">\n//         Your Website\n//       </Link>{\" \"}\n//       {new Date().getFullYear()}\n//       {\".\"}\n//     </Typography>\n//   );\n// }\n\nconst useStyles = makeStyles((theme) => ({\n  // icon: {\n  //   marginRight: theme.spacing(2),\n  // },\n  // heroContent: {\n  //   backgroundColor: theme.palette.background.paper,\n  //   padding: theme.spacing(8, 0, 6),\n  // },\n  // heroButtons: {\n  //   // marginTop: theme.spacing(4),\n  // },\n  cardGrid: {\n    paddingTop: theme.spacing(8),\n    paddingBottom: theme.spacing(8),\n  },\n  card: {\n    height: \"100%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  cardMedia: {\n    // padding: theme.spacing(2, 2, 2, 2),\n    height: 150,\n    width: \"100%\",\n    // paddingTop: \"56.25%\", // 16:9\n  },\n  cardContent: {\n    flexGrow: 1,\n  },\n  cardTitle: {\n    display: \"flex\",\n    // justifyContent: \"space-between\",\n  },\n  resolvedLabel: {\n    color: \"#F15A22\",\n    padding: theme.spacing(0.5, 2, 0, 2),\n  },\n  button: {\n    // color: \"#F15A22\",\n  },\n  // footer: {\n  //   backgroundColor: theme.palette.background.paper,\n  //   padding: theme.spacing(6),\n  // },\n}));\n\nexport default function HomeAuditorCards() {\n  const classes = useStyles();\n\n  const { auditsState } = useContext(Context);\n\n  return (\n    <React.Fragment>\n      <Container className={classes.cardGrid} maxWidth=\"md\">\n        {/* End hero unit */}\n        <Grid container spacing={4}>\n          {auditsState.map((audit, index) => {\n            console.log(audit);\n            const {\n              store_name,\n              open_date,\n              overall_status,\n              overall_score,\n              report_type,\n              report_id,\n            } = audit;\n\n            let imageObject = tenantImages.find(\n              (image) => image.name === store_name\n            );\n            console.log(imageObject);\n            return (\n              <Grid item key={index} xs={12} sm={6} md={4}>\n                <Card className={classes.card}>\n                  <CardMedia\n                    component=\"img\"\n                    alt=\"tenant-image\"\n                    className={classes.cardMedia}\n                    // image={`${imageObject.imageUrl}`}\n                    image={\n                      imageObject !== undefined\n                        ? `${imageObject.imageUrl}`\n                        : `${defaultShop}`\n                    }\n                    title=\"Image title\"\n                  />\n                  <CardContent className={classes.cardContent}>\n                    <div className={classes.cardTitle}>\n                      <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                        {store_name}\n                      </Typography>\n                      {overall_status === 1 && (\n                        <Typography\n                          variant=\"button\"\n                          className={classes.resolvedLabel}\n                        >\n                          Resolved\n                        </Typography>\n                      )}\n                    </div>\n\n                    <Typography variant=\"caption\">\n                      <div>Date: {new Date(open_date).toString()}</div>\n                      {report_type === \"FB\" && <div>Type: Food & Beverage</div>}\n                      {report_type === \"NFB\" && (\n                        <div>Type: Non-Food & Beverage</div>\n                      )}\n                      {report_type === \"SMA\" && (\n                        <div>Type: Safe Management</div>\n                      )}\n                      <div>Score: {overall_score}</div>\n                    </Typography>\n                  </CardContent>\n                  <CardActions>\n                    {overall_status === 0 && (\n                      <Link to={`/tenant/report/${report_id}`}>\n                        <Button\n                          size=\"medium\"\n                          color=\"primary\"\n                          className={classes.button}\n                        >\n                          resolve\n                        </Button>\n                      </Link>\n                    )}\n                    <Link to={`/tenant/email/${report_id}`}>\n                      <Button\n                        size=\"medium\"\n                        color=\"primary\"\n                        className={classes.button}\n                      >\n                        email\n                      </Button>\n                    </Link>\n                    <Link to={`/fullreport/${report_id}`}>\n                      <Button\n                        size=\"medium\"\n                        color=\"primary\"\n                        className={classes.button}\n                      >\n                        report\n                      </Button>\n                    </Link>\n                  </CardActions>\n                </Card>\n              </Grid>\n            );\n          })}\n        </Grid>\n      </Container>\n    </React.Fragment>\n  );\n}\n","/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/styles.js",["294"],"import { makeStyles, rgbToHex } from \"@material-ui/core/styles\";\nimport singhealthBackground from \"./images/singhealth_building.png\";\n\nconst useStyles = makeStyles((theme) => ({\n  main: {\n    backgroundColor: \"white\",\n    height: \"100vh\",\n  },\n  navbar: {\n    width: \"100%\",\n    height: \"13%\",\n    zIndex: 1,\n  },\n  body: {\n    width: \"100%\",\n    height: \"87%\",\n  },\n  container: {\n    backgroundColor: \"lightblue\",\n  },\n  big_textfield: {\n    width: \"96%\",\n    marginLeft: \"2%\",\n    marginRight: \"2%\",\n  },\n  buttons: {\n    marginTop: \"10px\",\n    marginRight: \"10px\",\n  },\n  big_buttons: {\n    marginTop: \"1%\",\n    marginLeft: \"2%\",\n    marginRight: \"2%\",\n    width: \"96%\",\n  },\n  big_bottom_buttons: {\n    marginTop: \"1%\",\n    marginLeft: \"2%\",\n    marginRight: \"2%\",\n    width: \"96%\",\n    position: \"absolute\",\n    bottom: 0,\n  },\n  root: {\n    height: \"100vh\",\n  },\n  image: {\n    backgroundImage: `url(${singhealthBackground})`,\n    backgroundRepeat: \"no-repeat\",\n    backgroundColor:\n      theme.palette.type === \"light\"\n        ? theme.palette.grey[50]\n        : theme.palette.grey[900],\n    backgroundSize: \"cover\",\n    backgroundPosition: \"center\",\n  },\n  paper: {\n    marginTop: \"30%\",\n    margin: theme.spacing(8, 4),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  chat_bubble: {\n    border: \"0.5px solid black\",\n    borderRadius: \"10px\",\n    margin: \"5px\",\n    padding: \"10px\",\n    display: \"inline-block\",\n    marginLeft: \"2%\",\n    width: \"96%\",\n    height: \"30%\",\n    backgroundColor: \"white\",\n  },\n  bubbleContainer: {\n    width: \"100%\",\n  },\n  leftBubble: {\n    border: \"0.5px solid black\",\n    borderRadius: \"10px\",\n    margin: \"5px\",\n    padding: \"10px\",\n    display: \"inline-block\",\n    marginLeft: \"2%\",\n    width: \"60%\",\n    backgroundColor: \"white\",\n  },\n  rightBubble: {\n    border: \"0.5px solid black\",\n    borderRadius: \"10px\",\n    margin: \"5px\",\n    padding: \"10px\",\n    display: \"inline-block\",\n    marginLeft: \"38%\",\n    width: \"60%\",\n    backgroundColor: \"lightblue\",\n  },\n  right: {\n    marginLeft: \"auto\",\n  },\n  chat_edit: {\n    marginTop: \"10px\",\n    width: \"100%\",\n  },\n  chat_entry_edit: {\n    position: \"absolute\",\n    bottom: 0,\n    width: \"100%\",\n    height: \"25%\",\n  },\n  message_input: {\n    marginTop: \"7px\",\n    width: \"96%\",\n    marginLeft: \"2%\",\n  },\n  chat_list: {\n    position: \"absolute\",\n    height: \"60%\",\n    overflow: \"scroll\",\n    width: \"100%\",\n  },\n  chat_entries_list: {\n    position: \"absolute\",\n    height: \"49%\",\n    overflow: \"scroll\",\n    width: \"100%\",\n  },\n  chat_messages: {\n    position: \"absolute\",\n    height: \"100px\",\n    overflow: \"auto\",\n  },\n  annoucement_title_div: {\n    width: \"100%\",\n  },\n  annoucement_title: {\n    marginLeft: \"4%\",\n    marginTop: \"2%\",\n  },\n  contactlist_title: {\n    marginLeft: \"3%\",\n  },\n  announcement_list: {\n    backgroundColor: \"white\",\n    height: \"68%\",\n    overflow: \"scroll\",\n    width: \"100%\",\n  },\n  announcement_bubble: {\n    border: \"0.5px solid black\",\n    borderRadius: \"10px\",\n    margin: \"5px\",\n    padding: \"10px\",\n    display: \"inline-block\",\n    marginLeft: \"2%\",\n    width: \"96%\",\n    backgroundColor: \"white\",\n    marginBottom: \"1%\",\n    marginTop: \"1%\",\n  },\n  search_bar: {\n    width: \"96%\",\n    position: \"relative\",\n    left: \"2%\",\n    top: \"2%\",\n    marginTop: \"2%\",\n  },\n  post_new_accouncement_div: {\n    position: \"absolute\",\n    bottom: \"2%\",\n    width: \"100%\",\n    height: \"10%\",\n  },\n  post_new_announcement_dialog: {},\n  new_announcement_input: {\n    marginTop: \"10px\",\n    width: \"96%\",\n    marginLeft: \"2%\",\n  },\n  dialog_link: {\n    position: \"absolute\",\n    left: \"8%\",\n  },\n  dialog_selector: {\n    width: \"96%\",\n    marginLeft: \"2%\",\n    marginTop: \"2%\",\n  },\n  chats_dialog_selector: {\n    width: \"96%\",\n    marginLeft: \"2%\",\n    marginTop: 0,\n  },\n  dialog_date_picker: {\n    width: \"94%\",\n  },\n  NotificationsIcon: {\n    color: \"orange\",\n    // height: 20,\n  },\n}));\n\nexport default useStyles;\n","/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/components/InstitutionsCards.js",["295","296","297"],"import React from \"react\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Button from \"@material-ui/core/Button\";\nimport CameraIcon from \"@material-ui/icons/PhotoCamera\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport { institutions } from \"../data\";\nimport { Link } from \"react-router-dom\";\n\n// function Copyright() {\n//   return (\n//     <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n//       {\"Copyright © \"}\n//       <Link color=\"inherit\" href=\"https://material-ui.com/\">\n//         Your Website\n//       </Link>{\" \"}\n//       {new Date().getFullYear()}\n//       {\".\"}\n//     </Typography>\n//   );\n// }\n\nconst useStyles = makeStyles((theme) => ({\n  // icon: {\n  //   marginRight: theme.spacing(2),\n  // },\n  // heroContent: {\n  //   padding: theme.spacing(8, 0, 6),\n  // },\n  // heroButtons: {\n  //   // marginTop: theme.spacing(4),\n  // },\n  cardGrid: {\n    paddingTop: theme.spacing(8),\n    paddingBottom: theme.spacing(8),\n  },\n  card: {\n    height: \"100%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  cardMedia: {\n    // width: \"100%\",\n    padding: theme.spacing(2, 2, 2, 2),\n\n    // paddingTop: \"56.25%\",\n    // height: \"0%\",\n    // height: \"100%\",\n  },\n  cardContent: {\n    flexGrow: 1,\n  },\n  button: {\n    // color: \"#F15A22\",\n    // fontWeight: \"medium\",\n  },\n  // footer: {\n  //   backgroundColor: theme.palette.background.paper,\n  //   padding: theme.spacing(6),\n  // },\n}));\n\nexport default function HomeAuditorCards() {\n  const classes = useStyles();\n\n  return (\n    <React.Fragment>\n      {/* <AppBar position=\"relative\">\n        <Toolbar>\n          <CameraIcon className={classes.icon} />\n          <Typography variant=\"h6\" color=\"inherit\" noWrap>\n            Album layout\n          </Typography>\n        </Toolbar>\n      </AppBar> */}\n\n      <Container className={classes.cardGrid} maxWidth=\"md\">\n        {/* End hero unit */}\n        <Grid container spacing={4}>\n          {institutions.map((institution, index) => {\n            const { name, imageUrl } = institution;\n            console.log(institution);\n            return (\n              <Grid item key={index} xs={12} sm={6} md={4}>\n                <Card className={classes.card}>\n                  <CardMedia\n                    component=\"img\"\n                    alt=\"institution-image\"\n                    className={classes.cardMedia}\n                    image={`${imageUrl}`}\n                    title=\"Image title\"\n                  />\n                  <CardContent className={classes.cardContent}>\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                      {name}\n                    </Typography>\n                    <Typography variant=\"caption\">\n                      Address: {institution.address}\n                    </Typography>\n                  </CardContent>\n                  <CardActions>\n                    <Link to={`/institution/${name}`}>\n                      <Button\n                        className={classes.button}\n                        size=\"medium\"\n                        color=\"primary\"\n                        // color=\"secondary\"\n                      >\n                        View Tenants\n                      </Button>\n                    </Link>\n                  </CardActions>\n                </Card>\n              </Grid>\n            );\n          })}\n        </Grid>\n      </Container>\n\n      {/* Footer */}\n      {/* <footer className={classes.footer}>\n        <Typography variant=\"h6\" align=\"center\" gutterBottom>\n          Footer\n        </Typography>\n        <Typography\n          variant=\"subtitle1\"\n          align=\"center\"\n          color=\"textSecondary\"\n          component=\"p\"\n        >\n          Something here to give the footer a purpose!\n        </Typography>\n        <Copyright />\n      </footer> */}\n      {/* End footer */}\n    </React.Fragment>\n  );\n}\n","/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/components/Question.js",["298","299","300","301","302","303","304","305"],"import React, { useContext, useState } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Accordion from \"@material-ui/core/Accordion\";\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport { FaRegEdit } from \"react-icons/fa\";\nimport { Context } from \"../Context\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport SentimentVeryDissatisfiedIcon from \"@material-ui/icons/SentimentVeryDissatisfied\";\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\nimport PropTypes from \"prop-types\";\nimport Rating from \"@material-ui/lab/Rating\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport PhotoCamera from \"@material-ui/icons/PhotoCamera\";\n\nconst useStyles = makeStyles((theme) => ({\n  dropdownContainer: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  dropdownSection: {\n    display: \"flex\",\n    justifyContent: \"space-around\",\n    width: \"100%\",\n    // justifyContent: \"center\",\n  },\n  commentBox: {\n    // margin: theme.spacing(0, 2, 0, 2),\n    width: \"70%\",\n  },\n  button: {\n    fontWeight: \"medium\",\n    backgroundColor: \"#F15A22\",\n  },\n  input: {\n    display: \"none\",\n  },\n  camera: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    //   alignItems: \"center\",\n  },\n  uploadText: {\n    padding: theme.spacing(0, 1, 0, 2),\n  },\n  image: {\n    width: \"90%\",\n    maxWidth: 400,\n    // padding: theme.spacing(4, 0, 2, 0),\n  },\n  buttonContainer: {\n    padding: theme.spacing(2, 0, 2, 0),\n  },\n}));\nconst StyledRating = withStyles({\n  iconFilled: {\n    color: \"#ff6d75\",\n  },\n  iconHover: {\n    color: \"#ff3d47\",\n  },\n})(Rating);\n\nconst customIcons = {\n  1: {\n    icon: <SentimentVeryDissatisfiedIcon />,\n    label: \"Very Dissatisfied\",\n  },\n  2: {\n    icon: <SentimentVeryDissatisfiedIcon />,\n    label: \"Dissatisfied\",\n  },\n  3: {\n    icon: <SentimentVeryDissatisfiedIcon />,\n    label: \"Neutral\",\n  },\n  4: {\n    icon: <SentimentVeryDissatisfiedIcon />,\n    label: \"Satisfied\",\n  },\n  5: {\n    icon: <SentimentVeryDissatisfiedIcon />,\n    label: \"Very Satisfied\",\n  },\n};\n\nfunction IconContainer(props) {\n  const { value, ...other } = props;\n  return <span {...other}>{customIcons[value].icon}</span>;\n}\n\nIconContainer.propTypes = {\n  value: PropTypes.number.isRequired,\n};\n\nfunction Question({ fb_qn_id, requirement, labelId, type }) {\n  const classes = useStyles();\n\n  const {\n    fbReportState,\n    setFbReportState,\n    nfbReportState,\n    setNonFbReportState,\n    smaReportState,\n    setSMAReportState,\n  } = useContext(Context);\n\n  //state to update number of checked boxes\n  const [checked, setChecked] = useState([]);\n  //state to update comments\n  const [comment, setComment] = useState(\"\");\n  //state to update severity\n  const [severity, setSeverity] = useState(0);\n  //state to update image\n  const [imageState, setImageState] = useState([]);\n\n  //handle the checkbox changes\n  const handleToggle = (question_id) => () => {\n    // current question id\n    const currentIndex = checked.indexOf(question_id);\n\n    const newChecked = [...checked];\n\n    if (currentIndex === -1) {\n      newChecked.push(question_id);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n    // update the checked state\n    setChecked(newChecked);\n\n    //update report state depending on the type\n\n    switch (type) {\n      case \"FB\":\n        setFbReportState((prevState) => {\n          return prevState.map((question) =>\n            question.qn_id === question_id\n              ? { ...question, status: !question.status }\n              : question\n          );\n        });\n        break;\n      case \"NFB\":\n        setNonFbReportState((prevState) => {\n          return prevState.map((question) =>\n            question.qn_id === question_id\n              ? { ...question, status: !question.status }\n              : question\n          );\n        });\n        break;\n      case \"SMA\":\n        setSMAReportState((prevState) => {\n          return prevState.map((question) =>\n            question.qn_id === question_id\n              ? { ...question, status: !question.status }\n              : question\n          );\n        });\n        break;\n      default:\n        console.log(\"Invalid type of checklist\");\n        break;\n    }\n  };\n  //function to update comment state\n  const handleComment = (e) => {\n    setComment(e.target.value);\n  };\n  //function to update severity state\n  const handleSeverity = (e) => {\n    setSeverity(e.target.value);\n    // console.log(e.target.value);\n  };\n\n  //function to handle input file change\n  const handleChange = (e) => {\n    const getBase64 = (file) => {\n      return new Promise((resolve, reject) => {\n        const reader = new FileReader();\n\n        if (file) {\n          reader.readAsDataURL(file);\n        }\n\n        reader.onload = () => resolve(reader.result);\n        reader.onerror = (error) => reject(error);\n      });\n    };\n\n    getBase64(e.target.files[0]).then((image) => {\n      console.log(image);\n      setImageState(image);\n    });\n  };\n\n  //function to update fb report state upon clicking save\n  const handleSave = () => {\n    alert(`Input saved for question ${parseInt(fb_qn_id)}`);\n    let today = new Date();\n    switch (severity) {\n      case \"1\":\n        today.setDate(today.getDate() + 21);\n        break;\n      case \"2\":\n        today.setDate(today.getDate() + 14);\n        break;\n      case \"3\":\n        today.setDate(today.getDate() + 7);\n        break;\n      case \"4\":\n        today.setDate(today.getDate() + 4);\n        break;\n      case \"5\":\n        today.setDate(today.getDate() + 1);\n        break;\n      default:\n        today.setDate(today.getDate());\n        break;\n    }\n\n    let severityDate =\n      (today.getDate() < 10\n        ? \"0\" + today.getDate().toString()\n        : today.getDate().toString()) +\n      (today.getMonth() + 1 < 10\n        ? \"0\" + (today.getMonth() + 1).toString()\n        : (today.getMonth() + 1).toString()) +\n      today.getFullYear().toString().slice(2, 4);\n\n    console.log(parseInt(severity + severityDate));\n\n    switch (type) {\n      case \"FB\":\n        setFbReportState((prevState) => {\n          return prevState.map((question) =>\n            question.qn_id === fb_qn_id && severity !== \"0\"\n              ? {\n                  ...question,\n                  severity: parseInt(severity + severityDate),\n                  remarks: comment,\n                  images: [imageState],\n                }\n              : question\n          );\n        });\n        break;\n      case \"NFB\":\n        setNonFbReportState((prevState) => {\n          return prevState.map((question) =>\n            question.qn_id === fb_qn_id && severity !== \"0\"\n              ? {\n                  ...question,\n                  severity: parseInt(severity + severityDate),\n                  remarks: comment,\n                  images: [imageState],\n                }\n              : question\n          );\n        });\n        break;\n      case \"SMA\":\n        setSMAReportState((prevState) => {\n          return prevState.map((question) =>\n            question.qn_id === fb_qn_id && severity !== \"0\"\n              ? {\n                  ...question,\n                  severity: parseInt(severity + severityDate),\n                  remarks: comment,\n                  images: [imageState],\n                }\n              : question\n          );\n        });\n        break;\n      default:\n        console.log(\"Invalid type of checklist\");\n        break;\n    }\n  };\n\n  return (\n    <div>\n      <Accordion>\n        <AccordionSummary\n          key={fb_qn_id}\n          expandIcon={<ExpandMoreIcon />}\n          aria-label=\"Expand\"\n          aria-controls=\"additional-actions1-content\"\n          id=\"additional-actions1-header\"\n        >\n          <ListItem>\n            <ListItemText id={fb_qn_id} primary={`${requirement}`} />\n            <Checkbox\n              // edge=\"end\"\n              onChange={handleToggle(fb_qn_id)}\n              checked={checked.indexOf(fb_qn_id) === -1}\n              inputProps={{ \"aria-labelledby\": labelId }}\n              className={classes.checkbox}\n            />\n          </ListItem>\n        </AccordionSummary>\n        <AccordionDetails className={classes.dropdownContainer}>\n          <div className={classes.dropdownSection}>\n            <TextField\n              id=\"standard-multiline-static\"\n              label=\"Comment on non-compliance\"\n              multiline\n              value={comment}\n              onChange={(e) => {\n                handleComment(e);\n              }}\n              className={classes.commentBox}\n            />\n            <Box component=\"fieldset\" mb={3} borderColor=\"transparent\">\n              <Typography component=\"legend\">Set Severity</Typography>\n              <Rating\n                name={`${fb_qn_id}`}\n                defaultValue={0}\n                // getLabelText={(value) => customIcons[value].label}\n                IconContainerComponent={IconContainer}\n                onChange={(e) => {\n                  handleSeverity(e);\n                }}\n              />\n            </Box>\n            <input\n              // accept=\"image/*\"\n              className={classes.input}\n              id={`icon-button-file${fb_qn_id}`}\n              // id=\"icon-button-file\"\n              name={`file${fb_qn_id}`}\n              type=\"file\"\n              // value={null}\n              // name=\"picture\"\n              onClick={(e) => {\n                e.target.value = \"\";\n              }}\n              onChange={(e) => {\n                handleChange(e);\n              }}\n            />\n            <label\n              htmlFor={`icon-button-file${fb_qn_id}`}\n              // htmlFor=\"icon-button-file\"\n              className={classes.camera}\n            >\n              <IconButton\n                color=\"primary\"\n                aria-label=\"upload picture\"\n                component=\"span\"\n              >\n                {/* <Typography variant=\"button\" className={classes.uploadText}>\n                  Upload photo\n                </Typography> */}\n                <PhotoCamera />\n              </IconButton>\n            </label>\n          </div>\n\n          <div className={classes.buttonContainer}>\n            <Button\n              className={classes.button}\n              size=\"large\"\n              color=\"primary\"\n              variant=\"contained\"\n              onClick={() => {\n                handleSave();\n              }}\n              // color=\"secondary\"\n            >\n              save\n            </Button>\n          </div>\n        </AccordionDetails>\n      </Accordion>\n    </div>\n  );\n}\n\nexport default Question;\n","/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/components/HomeAuditorTabs.js",[],"/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/pages/SMAChecklist.js",["306","307"],"import React, { useState, useContext, useEffect, useCallback } from \"react\";\nimport { useParams, Link } from \"react-router-dom\";\nimport Question from \"../components/Question\";\nimport { Context } from \"../Context\";\nimport Loading from \"./Loading\";\nimport Navbar from \"../Navbar\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport Box from \"@material-ui/core/Box\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\n\nimport Typography from \"@material-ui/core/Typography\";\n\n//styling for the fbchecklist page\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    padding: theme.spacing(4, 0, 10, 0),\n  },\n  list: {\n    width: \"100%\",\n    maxWidth: 800,\n    backgroundColor: theme.palette.background.paper,\n    display: \"flex\",\n    flexDirection: \"column\",\n\n    // alignItems: \"center\",\n  },\n  button: {\n    color: \"#F15A22\",\n    fontWeight: \"medium\",\n    width: \"100%\",\n    // maxWidth: 800,\n    backgroundColor: theme.palette.background.paper,\n    height: 50,\n  },\n  header: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(2, 2, 2, 2),\n  },\n  link: {\n    width: \"100%\",\n    maxWidth: 800,\n    backgroundColor: theme.palette.background.paper,\n  },\n}));\n\nfunction SMAChecklist() {\n  //use styles from function declared above\n  const classes = useStyles();\n  //get tenant id from url\n  const { tenantId } = useParams();\n\n  //Context\n  const {\n    getSMAChecklistQuestions,\n    createSMAReportState,\n    getUserInfo,\n    smaReportState,\n    submitSMAReport,\n    tenantType,\n    setTenantType,\n  } = useContext(Context);\n\n  //state to update nfb checklist questions\n  const [smaChecklistState, setSMAChecklistState] = useState();\n  const [tenantName, setTenantName] = useState();\n\n  useEffect(() => {\n    //function to retrieve questions\n    async function getTenantName() {\n      try {\n        const tenant_name = await getUserInfo(tenantId).then((response) => {\n          setTenantType(\"SMA\");\n          return response.data.store_name;\n        });\n        console.log(tenant_name);\n        setTenantName(tenant_name);\n      } catch (err) {\n        console.log(err);\n      }\n    }\n    getTenantName();\n    getSMAChecklistQuestions()\n      .then((response) => {\n        console.log(response);\n        setSMAChecklistState(response.data);\n        createSMAReportState(response.data);\n      })\n      .catch(() => {\n        console.log(\"sma checklist retrieval failed\");\n      });\n  }, []);\n\n  const handleSubmit = (tenantid, report) => {\n    submitSMAReport(tenantid, report);\n  };\n\n  return (\n    <>\n      {smaChecklistState && tenantName && tenantType ? (\n        <>\n          <Navbar />\n          <Box className={classes.header} textAlign=\"center\" boxShadow={1}>\n            <Typography variant=\"h5\">{tenantName} SMA Checklist</Typography>\n          </Box>\n\n          <Grid container className={classes.root}>\n            <List dense className={classes.list}>\n              {smaChecklistState.map((question, index) => {\n                const { sma_qn_id, requirement } = question;\n                console.log(requirement);\n                const labelId = `checkbox-list-secondary-label-${sma_qn_id}`;\n                return (\n                  <>\n                    <Question\n                      key={sma_qn_id}\n                      fb_qn_id={sma_qn_id}\n                      requirement={requirement}\n                      labelId={labelId}\n                      type={tenantType}\n                    />\n                  </>\n                );\n              })}\n            </List>\n            <Link to={`/tenant/${tenantId}`} className={classes.link}>\n              <Button\n                className={classes.button}\n                size=\"small\"\n                onClick={() => {\n                  handleSubmit(tenantId, smaReportState);\n                }}\n              >\n                Submit\n              </Button>\n            </Link>\n          </Grid>\n        </>\n      ) : (\n        <Loading />\n      )}\n    </>\n  );\n}\n\nexport default SMAChecklist;\n","/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/pages/NonFbChecklist.js",["308","309"],"import React, { useState, useContext, useEffect, useCallback } from \"react\";\nimport { useParams, Link } from \"react-router-dom\";\nimport Question from \"../components/Question\";\nimport { Context } from \"../Context\";\nimport Loading from \"./Loading\";\nimport Navbar from \"../Navbar\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport Box from \"@material-ui/core/Box\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\n\nimport Typography from \"@material-ui/core/Typography\";\n\n//styling for the fbchecklist page\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    padding: theme.spacing(4, 0, 10, 0),\n  },\n  list: {\n    width: \"100%\",\n    maxWidth: 800,\n    backgroundColor: theme.palette.background.paper,\n    display: \"flex\",\n    flexDirection: \"column\",\n\n    // alignItems: \"center\",\n  },\n  button: {\n    color: \"#F15A22\",\n    fontWeight: \"medium\",\n    width: \"100%\",\n    // maxWidth: 800,\n    backgroundColor: theme.palette.background.paper,\n    height: 50,\n  },\n  header: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(2, 2, 2, 2),\n  },\n  link: {\n    width: \"100%\",\n    maxWidth: 800,\n    backgroundColor: theme.palette.background.paper,\n  },\n}));\n\nfunction NonFbChecklist() {\n  //use styles from function declared above\n  const classes = useStyles();\n  //get tenant id from url\n  const { tenantId } = useParams();\n\n  //Context\n  const {\n    getNonFbChecklistQuestions,\n    createNonFbReportState,\n    getUserInfo,\n    nfbReportState,\n    submitNonFbReport,\n    tenantType,\n    setTenantType,\n  } = useContext(Context);\n\n  //state to update nfb checklist questions\n  const [nfbChecklistState, setNonFbChecklistState] = useState();\n  const [tenantName, setTenantName] = useState();\n\n  useEffect(() => {\n    //function to retrieve questions\n    async function getTenantName() {\n      try {\n        const tenant_name = await getUserInfo(tenantId).then((response) => {\n          setTenantType(response.data.type_id);\n          return response.data.store_name;\n        });\n        console.log(tenant_name);\n        setTenantName(tenant_name);\n      } catch (err) {\n        console.log(err);\n      }\n    }\n    getTenantName();\n    getNonFbChecklistQuestions()\n      .then((response) => {\n        setNonFbChecklistState(response.data);\n        createNonFbReportState(response.data);\n      })\n      .catch(() => {\n        console.log(\"fb checklist retrieval failed\");\n      });\n  }, []);\n\n  const handleSubmit = (tenantid, report) => {\n    submitNonFbReport(tenantid, report);\n  };\n\n  return (\n    <>\n      {nfbChecklistState && tenantName && tenantType ? (\n        <>\n          <Navbar />\n          <Box className={classes.header} textAlign=\"center\" boxShadow={1}>\n            <Typography variant=\"h5\">{tenantName} Non-F&B Checklist</Typography>\n          </Box>\n\n          <Grid container className={classes.root}>\n            <List dense className={classes.list}>\n              {nfbChecklistState.map((question, index) => {\n                const { nfb_qn_id, requirement } = question;\n                const labelId = `checkbox-list-secondary-label-${nfb_qn_id}`;\n                return (\n                  <>\n                    <Question\n                      key={nfb_qn_id}\n                      fb_qn_id={nfb_qn_id}\n                      requirement={requirement}\n                      labelId={labelId}\n                      type={tenantType}\n                    />\n                  </>\n                );\n              })}\n            </List>\n            <Link to={`/tenant/${tenantId}`} className={classes.link}>\n              <Button\n                className={classes.button}\n                size=\"small\"\n                onClick={() => {\n                  handleSubmit(tenantId, nfbReportState);\n                }}\n              >\n                Submit\n              </Button>\n            </Link>\n          </Grid>\n        </>\n      ) : (\n        <Loading />\n      )}\n    </>\n  );\n}\n\nexport default NonFbChecklist;\n","/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/pages/TenantReport.js",["310","311","312","313","314","315","316","317","318","319","320","321","322"],"import React, { useEffect, useState, useContext } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport Navbar from \"../Navbar\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Context } from \"../Context\";\nimport Loading from \"./Loading\";\nimport Accordion from \"@material-ui/core/Accordion\";\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport TenantReportCard from \"../components/TenantReportCard\";\nimport Button from \"@material-ui/core/Button\";\n\nconst useStyles = makeStyles((theme) => ({\n  header: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(2, 0, 2, 0),\n  },\n  root: {\n    width: \"100%\",\n    padding: theme.spacing(4, 0, 10, 0),\n  },\n}));\n\nfunction TenantReport() {\n  const { reportId } = useParams();\n  const { getReportStats, getUserInfoNoParams, getQuestionInfo } = useContext(\n    Context\n  );\n  const classes = useStyles();\n  const [questions, setQuestions] = useState();\n  // const [failedEntries, setFailedEntries] = useState();\n  const [tenantid, setTenantId] = useState();\n\n  useEffect(() => {\n    async function getResponse() {\n      try {\n        //attain account id of tenant\n        getUserInfoNoParams().then((response) => {\n          setTenantId(response.data.acc_id);\n        });\n\n        const questionsArray = await getReportStats(reportId).then(\n          (response) => {\n            console.log(response);\n            return response.data.FailedQuestions;\n          }\n        );\n\n        let questionInfoArray = [];\n\n        for (let j = 0; j < questionsArray.length; j++) {\n          let qnInfo = await getQuestionInfo(reportId, questionsArray[j]).then(\n            (response) => {\n              console.log(\"im here\");\n              console.log(response);\n              return response;\n            }\n          );\n          questionInfoArray.push(qnInfo);\n        }\n\n        if (questionInfoArray.length === questionsArray.length) {\n          console.log(questionInfoArray);\n          setQuestions(questionInfoArray);\n        }\n\n        // //attain failed entries\n        // const entryArray = await getReportStats(reportId).then((response) => {\n        //   console.log(response);\n        //   return response.data.Failed_Entries;\n        // });\n        // // console.log(entryArray);\n\n        // let entryInfoArray = [];\n\n        // for (let i = 0; i < entryArray.length; i++) {\n        //   // console.log(entryArray[i]);\n        //   // console.log(reportId);\n        //   let info = await getReportEntry(reportId, entryArray[i]).then(\n        //     (response) => {\n        //       // console.log(response);\n        //       return response;\n        //     }\n        //   );\n        //   entryInfoArray.push(info);\n        // }\n        // if (entryInfoArray.length === entryArray.length) {\n        //   console.log(entryInfoArray);\n        //   setFailedEntries(entryInfoArray);\n        // }\n      } catch (err) {\n        console.error(err);\n      }\n    }\n    getResponse();\n  }, []);\n\n  return (\n    <div>\n      {questions && tenantid ? (\n        <>\n          <Navbar />\n          <Box className={classes.header} textAlign=\"center\" boxShadow={1}>\n            <Typography variant=\"h5\">Report Non-Compliance Overview</Typography>\n          </Box>\n          <Box className={classes.reportBasicInfo}></Box>\n          <div className={classes.root}>\n            {questions.map((question) => {\n              const { data } = question;\n              let severity = data.severity / 1000000;\n              severity = Math.floor(severity);\n              let timeframe = \"\";\n              switch (severity) {\n                case 1:\n                  timeframe = \"3 weeks\";\n                  break;\n                case 2:\n                  timeframe = \"2 weeks\";\n                  break;\n                case 3:\n                  timeframe = \"1 week\";\n                  break;\n                case 4:\n                  timeframe = \"4 days\";\n                  break;\n                case 5:\n                  timeframe = \"1 day\";\n                  break;\n              }\n              return (\n                <TenantReportCard\n                  original_remarks={data.original_remarks}\n                  qn_id={data.qn_id}\n                  requirement={data.requirement}\n                  timeframe={timeframe}\n                  report_id={reportId}\n                  tenant_id={tenantid}\n                  current_qn_status={data.current_qn_status}\n                  severity={data.severity}\n                  image={data.images[0]}\n                />\n              );\n            })}\n          </div>\n        </>\n      ) : (\n        <Loading />\n      )}\n    </div>\n  );\n}\n\nexport default TenantReport;\n","/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/pages/AllChats.js",["323","324","325","326","327","328","329","330","331"],"import React, { useEffect, useContext, useState } from \"react\";\nimport {\n  Typography,\n  TextField,\n  Button,\n  FormGroup,\n  FormControl,\n  InputLabel,\n  Select,\n} from \"@material-ui/core\";\nimport {\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Dialog,\n  DialogContentText,\n} from \"@material-ui/core\";\n\nimport { Context } from \"../Context\";\nimport Navbar from \"../Navbar\";\nimport useStyles from \"../styles\";\nimport ChatCards from \"../components/ChatCards\";\n\nfunction Chat() {\n  const {\n    setAllChatsOfUserState,\n    allChatsOfUserState,\n    getAllChatsOfUser,\n    postCreateNewChat,\n    accountState,\n    chatSubmitState,\n    getAllAuditors,\n    getAllTenants,\n  } = useContext(Context);\n\n  const [allChatsState, setAllChatsState] = useState([]);\n  const [auditorIdState, setAuditorIdState] = useState(\"\");\n  const [tenantIdState, setTenantIdState] = useState(\"\");\n  const [dialogState, setDialogState] = useState(false);\n  const [allTenantsState, setAllTenantsState] = useState([]);\n\n  const [newTargetState, setNewTargetState] = useState(\"Select a tenant\");\n\n  const { role_id, acc_id } = accountState;\n  const styles = useStyles();\n  const chatsArray = [];\n\n  function openDialog() {\n    setDialogState(true);\n  }\n  function closeDialog() {\n    setDialogState(false);\n  }\n\n  function isAuditor() {\n    return role_id === \"Auditor\";\n  }\n\n  function handleNewTargetChange(target_user_string) {\n    setNewTargetState(target_user_string);\n    var target_id = target_user_string.split(\"-\")[1];\n    console.log(target_user_string);\n    console.log(target_id);\n    console.log(typeof acc_id); // Number\n    console.log(typeof target_id); // String\n    if (target_id === null) {\n      return; // If no target_id is entered: show alert\n    }\n    if (role_id === \"Auditor\") {\n      setAuditorIdState(acc_id);\n      setTenantIdState(target_id);\n    } else if (role_id == \"Tenant\") {\n      setTenantIdState(acc_id.toString()); // Number => String\n      setAuditorIdState(target_id); // String\n    } else {\n      console.log(\"Invalid auditor/tenant ID\");\n    }\n  }\n\n  useEffect(() => {\n    getAllTenants()\n      .then((response) => {\n        setAllTenantsState(response.data);\n        console.log(\"all tenants: \" + allTenantsState);\n      })\n      .catch(() => {\n        console.log(\"Failed to retrieve all tenants\");\n      });\n\n    async function getResponse() {\n      try {\n        await getAllChatsOfUser().then((response) => {\n          console.log(\"allChatsOfUser: \" + response.data);\n          setAllChatsOfUserState(response.data);\n        });\n      } catch {\n        console.log(\"Failed to retrive allChatsOfUser\");\n      }\n    }\n    getResponse();\n  }, [chatSubmitState]);\n\n  function handleCreateNewChatClick() {\n    console.log(\"Chat calling postNewChat\");\n    console.log(\"auditor id: \" + auditorIdState);\n    console.log(\"tenant id: \" + tenantIdState);\n    // If no tenant is selected\n    if (auditorIdState.length === 0 || tenantIdState.length === 0) {\n      openDialog();\n    } else {\n      postCreateNewChat(auditorIdState, tenantIdState);\n    }\n  }\n\n  return (\n    <main className={styles.main}>\n      <Navbar />\n\n      {isAuditor() ? (\n        <div className={styles.chat_edit}>\n          <Typography variant=\"subtitle1\" className={styles.contactlist_title}>\n            Select a tenant\n          </Typography>\n          <FormControl\n            variant=\"outlined\"\n            className={styles.chats_dialog_selector}\n          >\n            <Select\n              native\n              value={newTargetState}\n              onChange={(e) => handleNewTargetChange(e.target.value)}\n            >\n              {allTenantsState.map((tenant, index) => (\n                <option\n                  key={index}\n                  value={`${tenant.store_name}-${tenant.acc_id}`}\n                  id={tenant.acc_id}\n                >\n                  {tenant.branch_id} {tenant.store_name} {tenant.acc_id}\n                </option>\n              ))}\n            </Select>\n          </FormControl>\n\n          <Button\n            align=\"center\"\n            variant=\"outlined\"\n            color=\"secondary\"\n            className={styles.big_buttons}\n            onClick={() => handleCreateNewChatClick()}\n          >\n            Create Chat\n          </Button>\n        </div>\n      ) : null}\n\n      <br />\n      <div className={styles.chat_list}>\n        {allChatsOfUserState.map((chat, index) => {\n          return (\n            <React.Fragment key={index}>\n              <ChatCards chat={chat} />\n            </React.Fragment>\n          );\n        })}\n      </div>\n\n      <Dialog\n        className={styles.post_new_announcement_dialog}\n        open={dialogState}\n        onClose={closeDialog}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">\n          {\"Failed to create new chat\"}\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            Please enter a valid user ID\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={closeDialog} color=\"primary\">\n            Ok\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </main>\n  );\n}\n\nexport default Chat;\n","/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/pages/StoreReport.js",["332","333","334","335"],"import React, { useState, useEffect, useContext } from \"react\";\nimport Navbar from \"../Navbar\";\nimport { Context } from \"../Context\";\nimport { useParams } from \"react-router-dom\";\nimport List from \"@material-ui/core/List\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport ReportQuestion from \"../components/ReportQuestion\";\nimport Box from \"@material-ui/core/Box\";\nimport { Typography } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  header: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(2, 0, 2, 0),\n  },\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    padding: theme.spacing(4, 0, 10, 0),\n  },\n  list: {\n    width: \"100%\",\n    maxWidth: 800,\n    backgroundColor: theme.palette.background.paper,\n    display: \"flex\",\n    flexDirection: \"column\",\n\n    // alignItems: \"center\",\n  },\n}));\n\nfunction StoreReport() {\n  const classes = useStyles();\n  const { reportId } = useParams();\n  const { getReport, getQuestionInfo, getOriginalReport } = useContext(Context);\n  const [questions, setQuestions] = useState();\n\n  useEffect(() => {\n    async function storeReportAsync() {\n      try {\n        const reportQuestions = await getOriginalReport(reportId).then(\n          (response) => {\n            console.log(response);\n            return response.data;\n          }\n        );\n        setQuestions(reportQuestions);\n\n        const reportInfo = await getReport(reportId).then((response) => {\n          console.log(response.data);\n          return response.data;\n        });\n      } catch (err) {\n        console.log(err);\n      }\n    }\n    storeReportAsync();\n  }, []);\n  return (\n    <>\n      {questions && (\n        <div>\n          <Navbar />\n          <Box className={classes.header} textAlign=\"center\" boxShadow={1}>\n            <Typography variant=\"h5\">Full Report Overview</Typography>\n          </Box>\n          <div className={classes.root}>\n            <List dense className={classes.list}>\n              {questions.map((question, index) => {\n                const {\n                  qn_id,\n                  Requirement,\n                  images,\n                  remarks,\n                  status,\n                  severity,\n                } = question;\n                let severityVar = severity / 1000000;\n                severityVar = Math.floor(severityVar);\n                let timeframe = \"\";\n                switch (severityVar) {\n                  case 1:\n                    timeframe = \"3 weeks\";\n                    break;\n                  case 2:\n                    timeframe = \"2 weeks\";\n                    break;\n                  case 3:\n                    timeframe = \"1 week\";\n                    break;\n                  case 4:\n                    timeframe = \"4 days\";\n                    break;\n                  case 5:\n                    timeframe = \"1 day\";\n                    break;\n                }\n\n                return (\n                  <ReportQuestion\n                    key={qn_id}\n                    qn_id={qn_id}\n                    requirement={Requirement}\n                    images={images[0]}\n                    remarks={remarks}\n                    status={status}\n                    severity={timeframe}\n                  />\n                );\n              })}\n            </List>\n          </div>\n        </div>\n      )}\n    </>\n  );\n}\n\nexport default StoreReport;\n","/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/pages/Announcements.js",["336","337","338","339","340","341","342","343","344","345","346","347","348","349","350","351","352"],"import React, { useState, useContext, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Button,\n  IconButton,\n  TextField,\n  FormControl,\n  InputLabel,\n  Select,\n  Typography,\n  Grid,\n} from \"@material-ui/core\";\nimport {\n  InputAdornment,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Dialog,\n  DialogContentText,\n} from \"@material-ui/core\";\nimport SearchIcon from \"@material-ui/icons/Search\";\n\nimport Navbar from \"../Navbar\";\nimport useStyles from \"../styles\";\nimport { Context } from \"../Context\";\nimport NotificationRow from \"../components/NotificationRow\";\nimport LimitedNotificationRow from \"../components/LimitedNotificationRow\";\n\nconst Announcement = () => {\n  const styles = useStyles();\n  const {\n    accountState,\n    allAvailableNotificationsState,\n    getAllAvailableNotifications,\n    currentNotificationsState,\n    getNotificationByNotificationId,\n    chatSubmitState,\n  } = useContext(Context);\n\n  const [\n    displayedNotificationsState,\n    setDisplayedNotificationsState,\n  ] = useState([]);\n  const [rangeState, setRangeState] = useState(\"all\");\n  const [searchBarInputState, setSearchBarInputState] = useState(\"\");\n\n  const { role_id } = accountState;\n\n  function handleSearchBarChange(search_input) {\n    setSearchBarInputState(parseInt(search_input)); // String => Integer\n  }\n\n  function handleSearchButtonClick() {\n    console.log(\"Submitting search bar input: \" + searchBarInputState);\n    console.log(typeof searchBarInputState);\n    if (searchBarInputState < 1000 && searchBarInputState > 0) {\n      setRangeState(\"by_notification_id\");\n      console.log(\"Setting range to By Institution ID\");\n    } else if (searchBarInputState >= 1000) {\n      setRangeState(\"by_manager_id\");\n      console.log(\"Setting range to By Manager ID\");\n    } else {\n      setRangeState(\"all\");\n      console.log(\"Setting range to All\");\n    }\n    console.log(\"Searchbar input: \" + searchBarInputState);\n    console.log(\"Current range: \" + rangeState);\n  }\n\n  useEffect(() => {\n    async function getResponse() {\n      try {\n        await getAllAvailableNotifications().then((response) => {\n          console.log(\"All available notifications: \" + response.data);\n          setDisplayedNotificationsState(response.data);\n        });\n      } catch {\n        console.log(\"Failed to retrive allAvailableNotifications\");\n      }\n    }\n    getResponse();\n  }, [chatSubmitState]);\n\n  return (\n    <main className={styles.main}>\n      <Navbar />\n      <div className={styles.body}>\n        <TextField\n          className={styles.search_bar}\n          label=\"Search Notification ID/Creator ID\"\n          variant=\"outlined\"\n          InputProps={{\n            endAdornment: (\n              <InputAdornment>\n                <IconButton onClick={handleSearchButtonClick}>\n                  <SearchIcon />\n                </IconButton>\n              </InputAdornment>\n            ),\n          }}\n          onChange={(e) => handleSearchBarChange(e.target.value)}\n        />\n        <div className={styles.annoucement_title_div}>\n          <Typography variant=\"h6\" className={styles.annoucement_title}>\n            Announcements\n          </Typography>\n        </div>\n        <div className={styles.announcement_list}>\n          {displayedNotificationsState.map((notification, index) => {\n            if (rangeState === \"all\") {\n              return (\n                <LimitedNotificationRow\n                  notification={notification}\n                  key={index}\n                />\n              );\n            } else if (\n              rangeState === \"by_notification_id\" &&\n              notification.notification_id === searchBarInputState\n            ) {\n              return (\n                <LimitedNotificationRow\n                  notification={notification}\n                  key={index}\n                />\n              );\n            } else if (\n              rangeState === \"by_manager_id\" &&\n              notification.creator_id === searchBarInputState\n            ) {\n              return (\n                <LimitedNotificationRow\n                  notification={notification}\n                  key={index}\n                />\n              );\n            } else {\n              return null;\n            }\n          })}\n        </div>\n      </div>\n    </main>\n  );\n};\n\nexport default Announcement;\n","/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/pages/AuditEmail.js",["353","354","355","356","357"],"import React, { useState, useEffect, useContext } from \"react\";\nimport Navbar from \"../Navbar\";\nimport emailjs from \"emailjs-com\";\nimport Box from \"@material-ui/core/Box\";\nimport { useParams } from \"react-router-dom\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport { Context } from \"../Context\";\nimport Loading from \"./Loading\";\nimport ReactHtmlParser from \"react-html-parser\";\n\nconst useStyles = makeStyles((theme) => ({\n  header: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(2, 0, 2, 0),\n  },\n  emailFields: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    padding: theme.spacing(2, 0, 0, 0),\n  },\n  field: {\n    maxWidth: 800,\n    width: \"80%\",\n    margin: theme.spacing(2, 0, 0, 0),\n  },\n  buttonSubmit: {\n    margin: theme.spacing(8, 0, 0, 0),\n    width: 240,\n    // color: \"#F15A22\",\n    fontWeight: \"medium\",\n    backgroundColor: \"#F15A22\",\n  },\n}));\n\nfunction AuditEmail() {\n  const classes = useStyles();\n  const { reportId } = useParams();\n  const [toEmail, setToEmail] = useState(\"\");\n  const [checklistReport, setChecklistReport] = useState(\"\");\n  const [toName, setToName] = useState(\"\");\n  const [storeName, setStoreName] = useState(\"\");\n  const [checklistType, setChecklistType] = useState();\n  const [dateOfAudit, setDateOfAudit] = useState(\"\");\n  const [score, setScore] = useState(\"\");\n  const [images, setImages] = useState();\n\n  const { getReport, getQuestionInfo, getOriginalReport } = useContext(Context);\n\n  //entry fields needed:\n  //1. qn_id\n  //2. images\n  //  3. remarks\n  //  4. severity / timeframe\n  //  5. status\n  // 6. requirement\n\n  useEffect(() => {\n    async function emailAsync() {\n      try {\n        const reportQuestions = await getOriginalReport(reportId).then(\n          (response) => {\n            console.log(response);\n            return response.data;\n          }\n        );\n\n        const reportInfo = await getReport(reportId).then((response) => {\n          console.log(response.data);\n          return response.data;\n        });\n\n        let checklistString = \"\";\n        let imagesString = \"\";\n        let completedChecklist;\n        let completedImages;\n        let count = 0;\n        for (let i = 0; i < reportQuestions.length; i++) {\n          // for (let i = 0; i < 50; i++) {\n          let severity = reportQuestions[i].severity;\n          severity /= 1000000;\n          severity = Math.floor(severity);\n          let timeframe = \"\";\n          switch (severity) {\n            case 1:\n              timeframe = \"3 weeks\";\n              break;\n            case 2:\n              timeframe = \"2 weeks\";\n              break;\n            case 3:\n              timeframe = \"1 week\";\n              break;\n            case 4:\n              timeframe = \"4 days\";\n              break;\n            case 5:\n              timeframe = \"1 day\";\n              break;\n          }\n          checklistString +=\n            reportQuestions[i].status === \"PASS\"\n              ? `<br/>\n          <span>\n          ${reportQuestions[i].qn_id}. ${reportQuestions[i].Requirement}\n          \n          <br/>\n\n          \n          \n          Status: Passed\n          \n          <br/>`\n              : `<br/>\n          <span style=\"color: #F15A22; font-weight: bold\">\n          ${reportQuestions[i].qn_id}. ${reportQuestions[i].Requirement}\n          \n          <br/>\n          \n          Remarks: ${reportQuestions[i].remarks}\n          \n          <br/>\n          \n          Retification Period: ${timeframe}\n          \n          <br />\n          \n          Status: Failed\n          </span>\n          \n          \n          \n          <br /> `;\n\n          imagesString +=\n            reportQuestions[i].status === \"PASS\"\n              ? ``\n              : `<br /><img style=\"width: 400px; height:auto\" src=\"${reportQuestions[i].images[0]}\" alt=\"Photo of non-compliance\" /> <br />`;\n          count++;\n        }\n        console.log(checklistString);\n        if (count === reportQuestions.length) {\n          completedChecklist = `<div>${checklistString}</div>`;\n          completedImages = `<div>${imagesString}</div>`;\n        }\n\n        if (count === reportQuestions.length && completedChecklist) {\n          setChecklistReport(completedChecklist);\n          setImages(completedImages);\n        }\n        // setChecklistReport(``);\n        setStoreName(reportInfo.store_name);\n        setChecklistType(reportInfo.report_type);\n        setDateOfAudit(new Date(reportInfo.open_date).toString());\n        setScore(reportInfo.overall_score);\n      } catch (err) {\n        console.log(err);\n      }\n    }\n\n    emailAsync();\n  }, []);\n\n  //emailjs function\n  function sendEmail() {\n    emailjs\n      .send(\n        \"service_1xo642c\",\n        \"checklist_template\",\n        {\n          to_email: toEmail,\n          to_name: toName,\n          store_name: storeName,\n          checklist_type: checklistType,\n          date: dateOfAudit,\n          score: score,\n          checklist: checklistReport,\n        },\n        \"user_Y6aBIfzMOeWunufHbkvwx\"\n      )\n      .then(\n        (result) => {\n          console.log(result.text);\n        },\n        (error) => {\n          console.log(error.text);\n        }\n      );\n\n    emailjs\n      .send(\n        \"service_1xo642c\",\n        \"image_template\",\n        {\n          to_email: toEmail,\n          to_name: toName,\n          store_name: storeName,\n          checklist_type: checklistType,\n          date: dateOfAudit,\n          score: score,\n          images: images,\n        },\n        \"user_Y6aBIfzMOeWunufHbkvwx\"\n      )\n      .then(\n        (result) => {\n          console.log(result.text);\n        },\n        (error) => {\n          console.log(error.text);\n        }\n      );\n  }\n  const handleToEmail = (e) => {\n    setToEmail(e.target.value);\n  };\n\n  const handleToName = (e) => {\n    setToName(e.target.value);\n  };\n\n  return (\n    <div>\n      {checklistReport && images ? (\n        <>\n          <Navbar />\n          <Box className={classes.header} textAlign=\"center\" boxShadow={1}>\n            <Typography variant=\"h5\">Set Email Fields</Typography>\n          </Box>\n          {/* <form className={classes.emailFields} onSubmit={sendEmail}> */}\n          <form className={classes.emailFields}>\n            <TextField\n              className={classes.field}\n              id=\"standard-basic\"\n              label=\"Key in recipient email address\"\n              name=\"to_email\"\n              autoFocus={true}\n              required={true}\n              onChange={(e) => {\n                handleToEmail(e);\n              }}\n              value={toEmail}\n            />\n            <TextField\n              className={classes.field}\n              id=\"standard-basic\"\n              label=\"Key in name of recipient\"\n              name=\"to_name\"\n              required={true}\n              onChange={(e) => {\n                handleToName(e);\n              }}\n              value={toName}\n              readOnly\n            />\n            <TextField\n              className={classes.field}\n              id=\"standard-basic\"\n              label=\"Store Name\"\n              name=\"store_name\"\n              value={storeName}\n              readOnly\n            />\n            <TextField\n              className={classes.field}\n              id=\"standard-basic\"\n              label=\"Checklist Type\"\n              name=\"checklist_type\"\n              value={checklistType}\n              readOnly\n            />\n            <TextField\n              className={classes.field}\n              id=\"standard-basic\"\n              label=\"Date of Conducted Audit\"\n              name=\"date\"\n              value={dateOfAudit}\n              readOnly\n            />\n            <TextField\n              className={classes.field}\n              id=\"standard-basic\"\n              label=\"Audit Score\"\n              name=\"score\"\n              value={score}\n              readOnly\n            />\n            {/* <TextField\n              className={classes.field}\n              id=\"standard-basic\"\n              label=\"Checklist\"\n              name=\"checklist\"\n              value={ReactHtmlParser(checklistReport)}\n              readOnly\n            >\n              <>{ReactHtmlParser(checklistReport)}</>\n            </TextField> */}\n            {/* <div>{ReactHtmlParser(checklistReport)}</div> */}\n\n            {/* <input type=\"submit\" value=\"Send\"> */}\n            <Button\n              // type=\"submit\"\n              className={classes.buttonSubmit}\n              variant=\"contained\"\n              color=\"primary\"\n              size=\"large\"\n              onClick={() => {\n                sendEmail();\n              }}\n              color=\"secondary\"\n            >\n              send email\n            </Button>\n            {/* </input> */}\n          </form>{\" \"}\n        </>\n      ) : (\n        <Loading />\n      )}\n    </div>\n  );\n}\n\nexport default AuditEmail;\n","/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/components/LimitedNotificationRow.js",["358","359","360","361","362","363","364","365","366","367","368","369","370","371"],"import React, { useState, useContext } from \"react\";\nimport { Button, TextField, FormControl, InputLabel, Select, Typography, Grid } from \"@material-ui/core\";\nimport { DialogActions, DialogContent, DialogTitle, Dialog, DialogContentText } from \"@material-ui/core\";\n\nimport useStyles from \"../styles\";\nimport { Context } from \"../Context\"\nimport { toValidFormat } from \"../components/utils\";\n\nconst LimitedNotificationRow = (props) => {\n\n  const styles = useStyles();\n\n  return (\n    <React.Fragment>\n      <div className={styles.announcement_bubble}>\n        <Grid item xs={12} sm container>\n          <Grid item xs container direction=\"column\" spacing={2}>\n            <Grid item xs>\n              <Typography variant=\"subtitle2\" color=\"textSecondary\">{props.notification.title}</Typography>\n              <Typography variant=\"body1\">{props.notification.message}</Typography>\n            </Grid>\n          </Grid>\n          <Grid item>\n            <Typography variant=\"body2\" color=\"textSecondary\">Announcement ID: {props.notification.notification_id}</Typography>\n            <Typography variant=\"body2\" color=\"textSecondary\">Posted by {props.notification.creator_id} on {props.notification.receipt_date}</Typography>\n            <Typography variant=\"body2\" color=\"textSecondary\">Valid period: {props.notification.receipt_date} to {props.notification.end_date}</Typography>\n          </Grid>\n        </Grid>\n      </div>\n    </React.Fragment>\n  )\n}\n\nexport default LimitedNotificationRow;","/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/components/ReportQuestion.js",["372"],"import React from \"react\";\nimport Accordion from \"@material-ui/core/Accordion\";\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport { Typography } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  dropdownContainer: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    // alignItems: \"center\",\n    padding: theme.spacing(0, 0, 3, 8),\n    // color: \"#F15A22\",\n  },\n  imageFromAuditor: {\n    width: \"70%\",\n    maxWidth: 400,\n    padding: theme.spacing(2, 0, 0, 0),\n  },\n  passedLabel: {\n    color: \"#03A762\",\n  },\n  failedLabel: {\n    color: \"#F15A22\",\n  },\n}));\n\nfunction ReportQuestion({\n  qn_id,\n  requirement,\n  images,\n  remarks,\n  status,\n  severity,\n}) {\n  const classes = useStyles();\n\n  return (\n    <div>\n      <Accordion>\n        <AccordionSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-label=\"Expand\"\n          aria-controls=\"additional-actions1-content\"\n          id=\"additional-actions1-header\"\n        >\n          <ListItem>\n            <ListItemText id={qn_id} primary={requirement}></ListItemText>\n          </ListItem>\n          {status === \"PASS\" && (\n            // <ListItemText className={classes.titleResolved}>\n            <Typography variant=\"button\" className={classes.passedLabel}>\n              PASSED\n            </Typography>\n            // </ListItemText>\n          )}\n          {status === \"FAIL\" && (\n            // <ListItemText className={classes.titleResolved}>\n            <Typography variant=\"button\" className={classes.failedLabel}>\n              FAILED\n            </Typography>\n            // </ListItemText>\n          )}\n        </AccordionSummary>\n        <AccordionDetails className={classes.dropdownContainer}>\n          <Typography variant=\"button\">Remarks : {remarks}</Typography>\n          <Typography variant=\"button\">Severity : {severity}</Typography>\n          {images && <img src={images} className={classes.imageFromAuditor} />}\n        </AccordionDetails>\n      </Accordion>\n    </div>\n  );\n}\n\nexport default ReportQuestion;\n","/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/components/ChatCards.js",["373","374","375","376","377","378"],"import React, { useContext, useEffect, useState } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport { Button, Grid, FormGroup, Typography } from \"@material-ui/core\";\n\nimport useStyles from \"../styles\";\nimport { Context } from \"../Context\";\n\nconst ChatCards = (props) => {\n  const styles = useStyles();\n  const test = 147;\n  const [targetUserState, setTargetUserState] = useState({});\n  const { getUserInfo, accountState, chatSubmitState } = useContext(Context);\n\n  // Handle chat target role type (Auditor/Tenant) and target user_id\n  var target_role = \"Tenant\";\n  var target_id;\n  if (accountState.role_id === \"Auditor\") {\n    target_role = \"Tenant\";\n    target_id = props.chat.tenant_id.toString();\n  } else if (accountState.role_id === \"Tenant\") {\n    target_role = \"Auditor\";\n    target_id = props.chat.auditor_id.toString();\n  }\n\n  useEffect(() => {\n    getUserInfo(target_id)\n      .then((response) => {\n        setTargetUserState(response.data);\n      })\n      .catch(() => {\n        console.log(\"Failed to retrieve tenant info\");\n      });\n  }, []);\n\n  return (\n    // <NavLink to={{pathname: `/chat/${props.chat.chat_id}/${targetUserState.store_name}/${targetUserState.acc_id}`, test: test}}>\n    <NavLink to={{ pathname: `/chat/${props.chat.chat_id}`, test: test }}>\n      <Button className={styles.chat_bubble}>\n        <Typography variant=\"subtitle1\">{targetUserState.branch_id}</Typography>\n        <Typography variant=\"subtitle1\">\n          {targetUserState.store_name}\n        </Typography>\n        <Typography variant=\"body2\" color=\"textSecondary\">\n          {target_role} ID: {target_id}\n        </Typography>\n        <Typography variant=\"body2\" color=\"textSecondary\">\n          {targetUserState.username}\n        </Typography>\n        <Typography variant=\"body2\" color=\"textSecondary\">\n          Chat ID: {props.chat.chat_id}\n        </Typography>\n      </Button>\n    </NavLink>\n  );\n};\n\nexport default ChatCards;\n","/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/components/NotificationRow.js",["379"],"import React, { useState, useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Button, TextField, FormControl, InputLabel, Select, Typography, Grid } from \"@material-ui/core\";\nimport { DialogActions, DialogContent, DialogTitle, Dialog, DialogContentText } from \"@material-ui/core\";\n\nimport useStyles from \"../styles\";\nimport { Context } from \"../Context\"\nimport { toValidFormat } from \"../components/utils\";\n\n// props.notification\nconst NotificationRow = (props) => {\n\n  const notification = props.notification;\n  const styles = useStyles();\n  const { \n    postModifyNotification,\n    deleteNotification,\n  } = useContext(Context);\n\n  // States for modifying announcement\n  const [titleState, setTitleState] = useState(notification.title);\n  const [messageState, setMessageState] = useState(notification.message);\n  const [receiptDateState, setReceiptDateState] = useState(toValidFormat(notification.receipt_date)); // Default today\n  const [endDateState, setEndDateState] = useState(toValidFormat(notification.end_date)); // Default one month later\n  const [receiversState, setReceiversState] = useState(notification.to_role_ids); // Default all users\n\n  // States for dialogs\n  const [modifyDialogState, setModifyDialogState] = useState(false);\n  const [deleteDialogState, setDeleteDialogState] = useState(false);\n  const [tipDialogState, setTipDialogState] = useState(false);\n  const [successDialogState, setSuccessDialogState] = useState(false);\n\n  // Functions for dialogs\n  function openModifyDialog() {setModifyDialogState(true);}\n  function closeModifyDialog() {setModifyDialogState(false);}\n  function openDeleteDialog() {setDeleteDialogState(true);}\n  function closeDeleteDialog() {setDeleteDialogState(false);}\n  function openTipDialog() {setTipDialogState(true);}\n  function closeTipDialog() {setTipDialogState(false);}\n  function openSuccessDialog() {setSuccessDialogState(true);}\n  function closeSuccessDialog() {setSuccessDialogState(false);}\n\n  function handleTitleChange(input_title) {setTitleState(input_title);}\n  function handleMessageChange(input_message) {setMessageState(input_message);}\n  function handleReceiptDateChange(input_date) {setReceiptDateState(input_date);}\n  function handleEndDateChange(input_date) {setEndDateState(input_date);}\n  function handleReceiverChange(input_receiver) {setReceiversState(parseInt(input_receiver));}\n\n  function modifyPastAnnouncement(notification_id) {\n    console.log(\"Modifying announcement...\");\n    console.log(notification_id);\n    console.log(titleState);\n    console.log(messageState);\n    console.log(receiptDateState);\n    console.log(endDateState);\n    console.log(receiversState);\n    postModifyNotification(notification_id, titleState, messageState, receiptDateState, endDateState, receiversState);\n    openSuccessDialog();\n  }\n\n  function deleteAnnouncement(notification_id) {\n    console.log(\"Deleting announcement...\");\n    deleteNotification(notification_id);\n  }\n\n  // Handle button clicks\n  function handleModifyAnnouncementClick() {\n    console.log(\"Modifying existing announcement...\");\n    openModifyDialog();\n  }\n  function handleDeleteAnnouncementClick() {\n    console.log(\"Deleting existing announcement...\");\n    openDeleteDialog();\n  }\n  function handleTipClick() {\n    console.log(\"Openning accouncement tips...\");\n    openTipDialog();\n  }\n  function handleSuccessClick() {\n    console.log(\"Success dialog click...\");\n    closeSuccessDialog();\n    closeModifyDialog();\n    closeDeleteDialog();\n  }\n\n  return (\n    <React.Fragment>\n      <div className={styles.announcement_bubble}>\n        <Grid item xs={12} sm container>\n          <Grid item xs container direction=\"column\" spacing={2}>\n            <Grid item xs>\n              <Typography variant=\"subtitle2\" color=\"textSecondary\">{notification.title}</Typography>\n              <Typography variant=\"body1\">{notification.message}</Typography>\n            </Grid>\n          </Grid>\n          <Grid item>\n            <Typography variant=\"body2\" color=\"textSecondary\">Announcement ID: {notification.notification_id}</Typography>\n            <Typography variant=\"body2\" color=\"textSecondary\">Posted by {notification.creator_id} on {notification.receipt_date}</Typography>\n            <Typography variant=\"body2\" color=\"textSecondary\">Valid period: {notification.receipt_date} to {notification.end_date}</Typography>\n            <Button className={styles.buttons} variant=\"outlined\" color=\"primary\" onClick={handleModifyAnnouncementClick}>Modify</Button>\n            <Button className={styles.buttons} variant=\"outlined\" color=\"secondary\" onClick={handleDeleteAnnouncementClick}>Delete</Button>\n          </Grid>\n        </Grid>\n\n        {/* Dialog used to modify announcement */}\n        <Dialog\n          className={styles.post_new_announcement_dialog}\n          open={modifyDialogState}\n          onClose={closeModifyDialog}\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n        >\n          <DialogTitle id=\"alert-dialog-title\">{\"Modify Announcement\"}</DialogTitle>\n          <DialogContent>\n            <TextField className={styles.new_announcement_input} value={titleState} label=\"Title\" variant=\"outlined\" onChange={(e) => handleTitleChange(e.target.value)}/>\n            <TextField className={styles.new_announcement_input} value={messageState} label=\"Message\" variant=\"outlined\" onChange={(e) => handleMessageChange(e.target.value)}/>\n            <TextField className={styles.new_announcement_input} value={receiptDateState} label=\"Receipt Date\" variant=\"outlined\" onChange={(e) => handleReceiptDateChange(e.target.value)}/>\n            <TextField className={styles.new_announcement_input} value={endDateState} label=\"End Date\" variant=\"outlined\" onChange={(e) => handleEndDateChange(e.target.value)}/>\n            <FormControl variant=\"outlined\" className={styles.dialog_selector}>\n              <InputLabel>Receivers</InputLabel>\n              <Select native label=\"Receivers\" value={receiversState} onChange={(e) => handleReceiverChange(e.target.value)}>\n                <option value={7}>All users</option>\n                <option value={5}>Manager and Tenant</option>\n                <option value={6}>Auditor and Tenant</option>\n                <option value={2}>Only Auditor</option>\n                <option value={4}>Only Tenant</option>\n              </Select>\n            </FormControl>\n          </DialogContent>\n          <DialogContent>\n            <Button className={styles.dialog_link} onClick={handleTipClick}>Tips</Button>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={closeModifyDialog} color=\"secondary\">Cancel</Button>\n            <Button onClick={() => modifyPastAnnouncement(notification.notification_id)} color=\"primary\">Continue</Button>\n          </DialogActions>\n        </Dialog>\n\n        {/* Dialog used to delete announcement */}\n        <Dialog\n          className={styles.post_new_announcement_dialog}\n          open={deleteDialogState}\n          onClose={closeDeleteDialog}\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n        >\n          <DialogTitle id=\"alert-dialog-title\">{\"Alert\"}</DialogTitle>\n          <DialogContent>\n            <DialogContentText id=\"alert-dialog-description\">Confirm to delete this announcement?</DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={closeDeleteDialog} color=\"primary\">Cancel</Button>\n            <Button onClick={() => deleteAnnouncement(notification.notification_id)} color=\"secondary\">Confirm</Button>\n          </DialogActions>\n        </Dialog>\n\n        {/* Dialog used to show tips */}\n        <Dialog\n          className={styles.post_new_announcement_dialog}\n          open={tipDialogState}\n          onClose={closeTipDialog}\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n        >\n          <DialogTitle id=\"alert-dialog-title\">{\"Tips\"}</DialogTitle>\n          <DialogContent>\n            <DialogContentText id=\"alert-dialog-description\">How to create new announcements?</DialogContentText>\n            <DialogContentText id=\"alert-dialog-description\">* \"Title\" and \"Message\" is where you should post your announcement information</DialogContentText>\n            <DialogContentText id=\"alert-dialog-description\">* \"Receipt Date\" is the day when the receipients should start to see the announcement</DialogContentText>\n            <DialogContentText id=\"alert-dialog-description\">* \"End Date\" is the day when the recipients should stop getting the notification</DialogContentText>\n            <DialogContentText id=\"alert-dialog-description\">* \"Receivers\" indicates the range of receipients who can see the announcement.</DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={closeTipDialog} color=\"primary\">Ok</Button>\n          </DialogActions>\n        </Dialog>\n\n        {/* Dialog used to proceed post/delete upon success */}\n        <Dialog\n          className={styles.post_new_announcement_dialog}\n          open={successDialogState}\n          onClose={closeSuccessDialog}\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n        >\n          <DialogTitle id=\"alert-dialog-title\">{\"Changes updated!\"}</DialogTitle>\n          <DialogContent>\n            <DialogContentText id=\"alert-dialog-description\">Your changes have been updated</DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={handleSuccessClick} color=\"primary\">Ok</Button>\n          </DialogActions>\n        </Dialog>\n\n      </div>\n    </React.Fragment>\n  );\n}\n\nexport default NotificationRow;","/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/components/TenantReportCard.js",["380","381","382","383"],"import React, { useState, useContext, useEffect } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Context } from \"../Context\";\nimport Accordion from \"@material-ui/core/Accordion\";\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\nimport Loading from \"../pages/Loading\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport Box from \"@material-ui/core/Box\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport PhotoCamera from \"@material-ui/icons/PhotoCamera\";\nimport { Typography } from \"@material-ui/core\";\nimport MessageIcon from \"@material-ui/icons/Message\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\n\nconst useStyles = makeStyles((theme) => ({\n  mainContainer: {\n    display: \"flex\",\n    justifyContent: \"center\",\n  },\n  accordion: {\n    width: \"90%\",\n    maxWidth: 900,\n  },\n  titleResolved: {\n    padding: theme.spacing(0, 2, 0, 2),\n    color: \"#F15A22\",\n  },\n  commentBox: {\n    maxWidth: 800,\n    width: \"100%\",\n    // padding: theme.spacing(0, 0, 2, 2),\n  },\n  comment: {\n    width: \"100%\",\n  },\n  dropdownMain: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    padding: theme.spacing(0, 6, 0, 6),\n  },\n  dropdownContainer: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    // margin: theme.spacing(0, 0, 0, 2),\n  },\n  imageFromAuditor: {\n    width: \"70%\",\n    maxWidth: 400,\n    padding: theme.spacing(0, 0, 3, 0),\n  },\n  textInfo: {\n    padding: theme.spacing(2, 0, 2, 0),\n    color: \"#F15A22\",\n  },\n  topText: {\n    color: \"#F15A22\",\n  },\n  textTenant: {\n    padding: theme.spacing(1, 0, 2, 2),\n    fontWeight: \"medium\",\n  },\n  tenantInstructions: {\n    display: \"flex\",\n    padding: theme.spacing(2, 2, 2, 0),\n  },\n\n  tenantResponse: {\n    display: \"flex\",\n    width: \"100%\",\n    // backgroundColor: theme.palette.background.default,\n  },\n  avatar: {},\n  // button: {\n  //   width: \"50%\",\n  //   color: \"#F15A22\",\n  //   fontWeight: \"medium\",\n  //   backgroundColor: theme.palette.background.default,\n  // },\n  // buttonContainer: {\n  //   padding: theme.spacing(4, 0, 4, 0),\n  //   display: \"flex\",\n  //   justifyContent: \"center\",\n  // },\n  input: {\n    display: \"none\",\n  },\n  camera: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    //   alignItems: \"center\",\n  },\n  uploadText: {\n    padding: theme.spacing(0, 1, 0, 2),\n  },\n  image: {\n    width: \"90%\",\n    maxWidth: 400,\n    // padding: theme.spacing(4, 0, 2, 0),\n  },\n  buttonSubmit: {\n    width: 240,\n    // color: \"#F15A22\",\n    fontWeight: \"medium\",\n    backgroundColor: \"#F15A22\",\n  },\n  buttonSubmitContainer: {\n    padding: theme.spacing(4, 0, 4, 0),\n    display: \"flex\",\n\n    // justifyContent: \"center\",\n  },\n  prevResponses: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  prevResponseContainer: {\n    margin: theme.spacing(4, 0, 6, 0),\n    padding: theme.spacing(5, 5, 5, 5),\n    backgroundColor: theme.palette.background.default,\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    width: \"90%\",\n    maxWidth: 500,\n  },\n  prevResponseTitle: {\n    display: \"flex\",\n\n    // padding: theme.spacing(2, 0, 2, 2),\n    backgroundColor: theme.palette.background.default,\n  },\n  prevResponseTitleText: {\n    padding: theme.spacing(1, 0, 2, 0),\n  },\n  prevResponseContent: {\n    // padding: theme.spacing(2, 0, 2, 2),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  prevResponseText: {\n    padding: theme.spacing(2, 0, 4, 0),\n  },\n}));\n\nfunction TenantReportCard({\n  original_remarks,\n  qn_id,\n  requirement,\n  timeframe,\n  report_id,\n  tenant_id,\n  current_qn_status,\n  severity,\n  image,\n}) {\n  const classes = useStyles();\n  const [comment, setComment] = useState(\"\");\n  //selected file state\n  // const [selectedFile, setSelectedFile] = useState();\n  const [imageState, setImageState] = useState([]);\n  const [tenantResponse, setTenantResponse] = useState();\n\n  //state to check if file is selected\n  // const [isFilePicked, setIsFilePicked] = useState(false);\n\n  const {\n    getReportEntry,\n    submitReportUpdate,\n    getTenantRectification,\n  } = useContext(Context);\n\n  //call when component mounts\n  useEffect(() => {\n    async function getResponse() {\n      try {\n        //GET REPORT TYPE\n\n        //GET TENANT RECTIFICATION RESPONSES\n        getTenantRectification(report_id, tenant_id, qn_id)\n          .then((response) => {\n            console.log(response.data.entries);\n\n            setTenantResponse(response.data.entries);\n          })\n          .catch((error) => {\n            console.log(error);\n          });\n        // console.log(tenantEntry);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    getResponse();\n  }, []);\n\n  //function to update comment state\n  const handleComment = (e) => {\n    setComment(e.target.value);\n  };\n\n  //function to handle input file change\n  const handleChange = (e) => {\n    const getBase64 = (file) => {\n      return new Promise((resolve, reject) => {\n        const reader = new FileReader();\n\n        if (file) {\n          reader.readAsDataURL(file);\n        }\n\n        reader.onload = () => resolve(reader.result);\n        reader.onerror = (error) => reject(error);\n      });\n    };\n\n    getBase64(e.target.files[0]).then((image) => {\n      setImageState(image);\n    });\n  };\n\n  const createEntry = (\n    questionId,\n    currentStatus,\n    image,\n    remark,\n    severityLevel\n  ) => {\n    let array = [];\n    array.push({\n      qn_id: questionId,\n      status: currentStatus === \"PASS\" ? true : false,\n      severity: severityLevel,\n      remarks: remark,\n      images: image,\n    });\n    return array;\n  };\n\n  //handle submit\n  const handleSubmit = () => {\n    // console.log(testState);\n    // console.log(imageState);\n\n    async function submitAsync() {\n      const entry = await createEntry(\n        qn_id,\n        current_qn_status,\n        [imageState],\n        comment,\n        severity\n      );\n      console.log(entry);\n      // console.log(imageState);\n\n      submitReportUpdate(report_id, false, \"\", entry[0]);\n\n      alert(\"Rectification submitted. Pending Approval\");\n    }\n    submitAsync();\n\n    // async function getEntry() {\n    //   const entry = await getReportEntry(report_id, entry_id).then(\n    //     (response) => {\n    //       console.log(response.data);\n    //       return response.data;\n    //     }\n    //   );\n\n    // submitReportUpdate(report_id, false, \"\", {\n    //   ...entry,\n    //   images: [imageState],\n    //   remarks: comment,\n    // });\n\n    // alert(\"Rectification submitted. Pending Approval\");\n    // }\n    // getEntry();\n  };\n\n  return (\n    <div className={classes.mainContainer}>\n      {tenantResponse ? (\n        <Accordion className={classes.accordion}>\n          <AccordionSummary\n            expandIcon={<ExpandMoreIcon />}\n            aria-label=\"Expand\"\n            aria-controls=\"additional-actions1-content\"\n            id=\"additional-actions1-header\"\n            // id={`additional-actions1-header${entry_id}`}\n          >\n            <ListItem>\n              <ListItemText id={qn_id} primary={requirement} />\n              {current_qn_status === \"PASS\" && (\n                <ListItemText className={classes.titleResolved}>\n                  <Typography variant=\"button\">Resolved</Typography>\n                </ListItemText>\n              )}\n            </ListItem>\n          </AccordionSummary>\n          <AccordionDetails className={classes.dropdownMain}>\n            <div className={classes.dropdownContainer}>\n              <Typography\n                color=\"textSecondary\"\n                variant=\"button\"\n                className={classes.topText}\n              >\n                REMARKS: {original_remarks}\n              </Typography>\n\n              <Typography\n                color=\"textSecondary\"\n                variant=\"button\"\n                className={classes.textInfo}\n              >\n                RECTIFICATION PERIOD: {timeframe}\n              </Typography>\n              {image && (\n                <img src={image} className={classes.imageFromAuditor} />\n              )}\n            </div>\n\n            {current_qn_status === \"FAIL\" && (\n              <>\n                <div className={classes.tenantInstructions}>\n                  <Avatar src=\"/broken-image.jpg\" className={classes.avatar} />\n                  <Typography\n                    color=\"textPrimary\"\n                    className={classes.textTenant}\n                  >\n                    Please respond to non-compliance below:\n                  </Typography>\n                </div>\n                <div className={classes.tenantResponse}>\n                  <TextField\n                    id=\"standard-multiline-static\"\n                    placeholder=\"Comment on rectification to non-compliance\"\n                    multiline\n                    value={comment}\n                    className={classes.comment}\n                    onChange={(e) => {\n                      handleComment(e);\n                    }}\n                  />\n                  <input\n                    // accept=\"image/*\"\n                    className={classes.input}\n                    id={`icon-button-file${qn_id}`}\n                    // id=\"icon-button-file\"\n                    name={`file${qn_id}`}\n                    type=\"file\"\n                    // value={null}\n                    // name=\"picture\"\n                    onClick={(e) => {\n                      e.target.value = \"\";\n                    }}\n                    onChange={(e) => {\n                      handleChange(e);\n                    }}\n                  />\n                  <label\n                    htmlFor={`icon-button-file${qn_id}`}\n                    // htmlFor=\"icon-button-file\"\n                    className={classes.camera}\n                  >\n                    <IconButton\n                      color=\"primary\"\n                      aria-label=\"upload picture\"\n                      component=\"span\"\n                    >\n                      <Typography\n                        variant=\"button\"\n                        className={classes.uploadText}\n                      >\n                        Upload photo\n                      </Typography>\n                      <PhotoCamera />\n                    </IconButton>\n                  </label>\n                </div>\n                <div className={classes.buttonSubmitContainer}>\n                  <Button\n                    className={classes.buttonSubmit}\n                    variant=\"contained\"\n                    color=\"primary\"\n                    size=\"large\"\n                    onClick={() => {\n                      handleSubmit();\n                    }}\n                    // color=\"secondary\"\n                  >\n                    submit\n                  </Button>\n                </div>{\" \"}\n              </>\n            )}\n            {tenantResponse.map((response) => {\n              const { remarks, images } = response;\n\n              return (\n                <div className={classes.prevResponses}>\n                  <Box className={classes.prevResponseContainer} boxShadow={3}>\n                    <div className={classes.prevResponseTitle}>\n                      <Avatar\n                        src=\"/broken-image.jpg\"\n                        className={classes.avatar}\n                      />\n                      <ListItemIcon>\n                        <MessageIcon color=\"primary\" />\n                      </ListItemIcon>\n                      <Typography\n                        color=\"textPrimary\"\n                        className={classes.prevResponseTitleText}\n                      >\n                        Your Previous Response:\n                      </Typography>\n                    </div>\n                    <div className={classes.prevResponseContent}>\n                      <Typography\n                        color=\"textPrimary\"\n                        // variant=\"h8\"\n                        className={classes.prevResponseText}\n                        variant=\"caption\"\n                      >\n                        {remarks}\n                      </Typography>\n                      {images.length !== 0 && (\n                        <img src={images[0]} className={classes.image}></img>\n                      )}\n                    </div>\n                  </Box>\n                </div>\n              );\n            })}\n          </AccordionDetails>\n        </Accordion>\n      ) : (\n        <Loading />\n      )}\n    </div>\n  );\n}\n\nexport default TenantReportCard;\n","/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/components/AuditReportCard.js",["384","385","386","387","388","389","390"],"import React, { useState, useEffect, useContext } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Context } from \"../Context\";\nimport Accordion from \"@material-ui/core/Accordion\";\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Box from \"@material-ui/core/Box\";\nimport Loading from \"../pages/Loading\";\n\nconst useStyles = makeStyles((theme) => ({\n  mainContainer: {\n    display: \"flex\",\n    justifyContent: \"center\",\n  },\n  accordion: {\n    width: \"90%\",\n    maxWidth: 900,\n  },\n  title: {\n    display: \"flex\",\n    flexDirection: \"row\",\n  },\n  titleResolved: {\n    padding: theme.spacing(0, 2, 0, 2),\n    color: \"#F15A22\",\n  },\n\n  dropdownMain: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    padding: theme.spacing(0, 6, 0, 6),\n  },\n  dropdownContainer: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    // margin: theme.spacing(0, 0, 0, 2),\n  },\n  imageFromAuditor: {\n    width: \"70%\",\n    maxWidth: 400,\n    padding: theme.spacing(0, 0, 3, 0),\n  },\n  textInfo: {\n    padding: theme.spacing(2, 0, 2, 0),\n    color: \"#F15A22\",\n  },\n  topText: {\n    color: \"#F15A22\",\n  },\n  textTenant: {\n    padding: theme.spacing(1, 0, 2, 2),\n    fontWeight: \"medium\",\n  },\n  tenantResponses: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  tenantResponseContainer: {\n    margin: theme.spacing(4, 0, 6, 0),\n    padding: theme.spacing(5, 5, 5, 5),\n    backgroundColor: theme.palette.background.default,\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    width: \"90%\",\n    maxWidth: 500,\n  },\n  // tenantResponse: {\n  //   display: \"flex\",\n  //   padding: theme.spacing(2, 0, 2, 2),\n  //   backgroundColor: theme.palette.background.default,\n  // },\n  tenantResponseTitle: {\n    display: \"flex\",\n  },\n  tenantResponseContent: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  tenantTextResponse: {\n    padding: theme.spacing(2, 0, 4, 0),\n  },\n\n  avatar: {},\n  image: {\n    width: \"90%\",\n    maxWidth: 400,\n    // padding: theme.spacing(3, 2, 2, 2),\n  },\n  button: {\n    width: 240,\n    // color: \"#F15A22\",\n    fontWeight: \"medium\",\n    backgroundColor: \"#F15A22\",\n  },\n  buttonContainer: {\n    padding: theme.spacing(2, 0, 8, 0),\n    display: \"flex\",\n    justifyContent: \"center\",\n    // justifyContent: \"center\",\n  },\n  // media: {\n  //   width: 100,\n  //   height: 100,\n  //   backgroundColor: theme.palette.background.default,\n  // },\n}));\n\nfunction AuditReportCard({\n  current_qn_status,\n  requirement,\n  original_remarks,\n  timeframe,\n  report_id,\n  tenant_id,\n  qn_id,\n  image,\n}) {\n  const classes = useStyles();\n\n  //state of tenant rectification\n  // const [tenantRemarks, setTenantRemarks] = useState();\n  // const [tenantRectificationImage, setTenantRectificationImage] = useState();\n  // const [failedEntries, setFailedEntries] = useState();\n  const [tenantResponse, setTenantResponse] = useState();\n\n  const {\n    getTenantRectification,\n    submitReportUpdate,\n    resolvedState,\n    setResolvedState,\n  } = useContext(Context);\n\n  useEffect(() => {\n    async function getResponse() {\n      try {\n        //GET TENANT RECTIFICATION RESPONSES\n        getTenantRectification(report_id, tenant_id, qn_id)\n          .then((response) => {\n            console.log(response.data.entries);\n\n            setTenantResponse(response.data.entries);\n          })\n          .catch((error) => {\n            console.log(error);\n          });\n        // console.log(tenantEntry);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    getResponse();\n  }, [resolvedState]);\n\n  const resolveNonCompliance = () => {\n    alert(\"Non-compliance successfully resolved\");\n    async function resolveAsync() {\n      // const entry = await getReportEntry(report_id, qn_id).then((response) => {\n      //   console.log(response.data);\n      //   return response.data;\n      // });\n      submitReportUpdate(report_id, false, \"\", {\n        qn_id: qn_id,\n        status: true,\n      });\n    }\n    resolveAsync();\n  };\n\n  return (\n    <div className={classes.mainContainer}>\n      {tenantResponse ? (\n        <Accordion className={classes.accordion}>\n          <AccordionSummary\n            expandIcon={<ExpandMoreIcon />}\n            aria-label=\"Expand\"\n            aria-controls=\"additional-actions1-content\"\n            id=\"additional-actions1-header\"\n          >\n            <ListItem className={classes.title}>\n              <ListItemText id={qn_id} primary={requirement} />\n              {current_qn_status === \"PASS\" && (\n                <ListItemText className={classes.titleResolved}>\n                  <Typography variant=\"button\">Resolved</Typography>\n                </ListItemText>\n              )}\n            </ListItem>\n          </AccordionSummary>\n          <AccordionDetails className={classes.dropdownMain}>\n            <div className={classes.dropdownContainer}>\n              <Typography\n                color=\"textSecondary\"\n                variant=\"button\"\n                className={classes.topText}\n              >\n                YOUR REMARKS: {original_remarks}\n              </Typography>\n\n              <Typography\n                color=\"textSecondary\"\n                variant=\"button\"\n                className={classes.textInfo}\n              >\n                RECTIFICATION PERIOD: {timeframe}\n              </Typography>\n              {image && (\n                <img src={image} className={classes.imageFromAuditor}></img>\n              )}\n            </div>\n            <div className={classes.tenantResponses}>\n              {tenantResponse.map((response) => {\n                const { remarks, images } = response;\n\n                return (\n                  <>\n                    <Box\n                      className={classes.tenantResponseContainer}\n                      boxShadow={2}\n                    >\n                      <div className={classes.tenantResponseTitle}>\n                        <Avatar\n                          src=\"/broken-image.jpg\"\n                          className={classes.avatar}\n                        />\n                        <Typography\n                          color=\"textPrimary\"\n                          className={classes.textTenant}\n                        >\n                          Tenant Response:\n                        </Typography>\n                      </div>\n                      <div className={classes.tenantResponseContent}>\n                        <Typography\n                          color=\"textPrimary\"\n                          // variant=\"h8\"\n                          className={classes.tenantTextResponse}\n                          variant=\"caption\"\n                        >\n                          {remarks}\n                        </Typography>\n\n                        {images.length !== 0 && (\n                          <img src={images[0]} className={classes.image}></img>\n                        )}\n                      </div>\n                    </Box>\n                  </>\n                );\n              })}\n            </div>\n            {current_qn_status === \"FAIL\" && (\n              <div className={classes.buttonContainer}>\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  className={classes.button}\n                  size=\"large\"\n                  onClick={() => {\n                    resolveNonCompliance();\n                  }}\n                  // color=\"secondary\"\n                >\n                  resolve\n                </Button>\n              </div>\n            )}\n          </AccordionDetails>\n        </Accordion>\n      ) : (\n        <Loading />\n      )}\n    </div>\n  );\n}\n\nexport default AuditReportCard;\n","/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/components/utils.js",["391","392","393","394","395"],"import React from \"react\";\n\nexport function getDateString(date) {\n  var year = date.getFullYear();\n  var month = addZero(date.getMonth()+1);\n  var day = addZero(date.getDate());\n  return day + \"/\" + month + \"/\" + year;\n};\n\nexport function getDateStringAfterOneMonth() {\n  var today = new Date();\n  var year = today.getFullYear();\n  var month = parseInt(addZero(today.getMonth()+2));\n  var day = addZero(today.getDate());\n  if (month>12) {\n    month -= 12;\n    year += 1;\n  }\n  return day + \"/\" + month + \"/\" + year;\n};\n\nexport function addZero(number) {\n  if (number < 10) return \"0\" + number;\n  else return number;\n};\n\nexport function getTimeString() {\n  var today = new Date();\n  var hours = addZero(today.getHours());\n  var minutes = addZero(today.getMinutes());\n  var seconds = addZero(today.getSeconds());\n  return hours + \":\" + minutes + \":\" + seconds;\n};\n\n// Raw String => Valid String\nexport function toValidFormat(raw_time_string) {\n  // YYYY-MM-DD\n  if (raw_time_string[4] === \"-\") {\n    var string_array = raw_time_string.split(\"-\");\n    var year = string_array[0];\n    var month = string_array[1];\n    var day = string_array[2];\n  } \n  // DD/MM/YYYY\n  else if (raw_time_string[2] === \"/\") {\n    var string_array = raw_time_string.split(\"/\");\n    var year = string_array[2];\n    var month = string_array[1];\n    var day = string_array[0];\n  }\n  return day + \"/\" + month + \"/\" + year;\n}\n\n// Date object => Valid String\nexport function dateToValidString(dateObject) {\n  \n}","/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/components/TenantHomeTabs.js",["396"],"import React, { useContext } from \"react\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport { Context } from \"../Context\";\n\nconst useStyles = makeStyles((theme) => ({\n  //   root: { },\n}));\n\nconst StyledTabs = withStyles({\n  indicator: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    backgroundColor: \"transparent\",\n    \"& > span\": {\n      maxWidth: 40,\n      width: \"100%\",\n      backgroundColor: \"#F15A22\",\n    },\n  },\n})((props) => <Tabs {...props} TabIndicatorProps={{ children: <span /> }} />);\n\nconst StyledTab = withStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    textTransform: \"none\",\n    color: \"#000000\",\n    fontWeight: theme.typography.fontWeightBold,\n    fontSize: theme.typography.pxToRem(16),\n    margin: theme.spacing(2, 0, 2, 0),\n    \"&:focus\": {\n      opacity: 1,\n    },\n  },\n}))((props) => <Tab disableRipple {...props} />);\n\nexport default function CenteredTabs() {\n  const {\n    getTenantAudits,\n    getUserInfoNoParams,\n    getReport,\n    tenantState,\n    setTenantState,\n  } = useContext(Context);\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  const filterAudits = (category) => {\n    async function getResponse() {\n      try {\n        const tenantId = await getUserInfoNoParams().then((response) => {\n          //   console.log(response);\n          return response.data.acc_id;\n        });\n        // console.log(tenantId);\n        if (category === \"OVERDUE\") {\n          const reportIdArray = await getTenantAudits(tenantId).then(\n            (response) => {\n              // console.log(response);\n              if (response.data.OVERDUE === -1) {\n                return [];\n              }\n              return [response.data.OVERDUE];\n            }\n          );\n          //initialize array to store all objects of report info\n          let reportInfoArray = [];\n\n          for (let i = 0; i < reportIdArray.length; i++) {\n            let reportInfo = await getReport(reportIdArray[i]).then(\n              (response) => {\n                return response.data;\n              }\n            );\n            reportInfoArray.push(reportInfo);\n          }\n          if (reportInfoArray.length === reportIdArray.length) {\n            setTenantState(reportInfoArray);\n          }\n        }\n        if (category === \"UNRESOLVED\") {\n          const reportIdArray = await getTenantAudits(tenantId).then(\n            (response) => {\n              // console.log(response);\n              if (response.data.LATEST === -1) {\n                return [];\n              }\n              return [response.data.LATEST];\n            }\n          );\n          //initialize array to store all objects of report info\n          let reportInfoArray = [];\n\n          for (let i = 0; i < reportIdArray.length; i++) {\n            let reportInfo = await getReport(reportIdArray[i]).then(\n              (response) => {\n                return response.data;\n              }\n            );\n            reportInfoArray.push(reportInfo);\n          }\n          if (reportInfoArray.length === reportIdArray.length) {\n            setTenantState(reportInfoArray);\n          }\n        }\n        if (category === \"COMPLETED\") {\n          const reportIdArray = await getTenantAudits(tenantId).then(\n            (response) => {\n              if (response.data.LATEST === -1) {\n                return [...response.data.CLOSED.past_audits];\n              }\n              return [\n                response.data.LATEST,\n                ...response.data.CLOSED.past_audits,\n              ];\n            }\n          );\n          //initialize array to store all objects of report info\n          let reportInfoArray = [];\n\n          for (let i = 0; i < reportIdArray.length; i++) {\n            let reportInfo = await getReport(reportIdArray[i]).then(\n              (response) => {\n                return response.data;\n              }\n            );\n            reportInfoArray.push(reportInfo);\n          }\n          if (reportInfoArray.length === reportIdArray.length) {\n            setTenantState(reportInfoArray);\n          }\n        }\n      } catch (err) {\n        console.log(err);\n      }\n    }\n    getResponse();\n  };\n\n  return (\n    <Paper className={classes.root}>\n      <StyledTabs value={value} onChange={handleChange} centered>\n        <StyledTab\n          onClick={() => {\n            filterAudits(\"COMPLETED\");\n          }}\n          label=\"COMPLETED\"\n        />\n        <StyledTab\n          onClick={() => {\n            filterAudits(\"UNRESOLVED\");\n          }}\n          label=\"UNRESOLVED\"\n        />\n        <StyledTab\n          onClick={() => {\n            filterAudits(\"OVERDUE\");\n          }}\n          label=\"OVERDUE\"\n        />\n      </StyledTabs>\n    </Paper>\n  );\n}\n","/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/components/TenantHomeCards.js",["397","398","399","400","401","402"],"import React, { useContext, useEffect, useState } from \"react\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Button from \"@material-ui/core/Button\";\nimport CameraIcon from \"@material-ui/icons/PhotoCamera\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport { Link } from \"react-router-dom\";\nimport { Context } from \"../Context\";\nimport { tenantImages } from \"../data\";\nimport zIndex from \"@material-ui/core/styles/zIndex\";\n\nconst useStyles = makeStyles((theme) => ({\n  cardGrid: {\n    paddingTop: theme.spacing(8),\n    paddingBottom: theme.spacing(8),\n  },\n  card: {\n    height: \"100%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  cardMedia: {\n    // padding: theme.spacing(2, 2, 2, 2),\n    height: 150,\n    width: \"100%\",\n    // paddingTop: \"56.25%\", // 16:9\n  },\n  cardContent: {\n    flexGrow: 1,\n  },\n  cardTitle: {\n    display: \"flex\",\n    // justifyContent: \"space-between\",\n  },\n  resolvedLabel: {\n    color: \"#F15A22\",\n    padding: theme.spacing(0.5, 2, 0, 2),\n  },\n}));\nexport default function TenantHomeCards() {\n  const classes = useStyles();\n\n  const { tenantState } = useContext(Context);\n\n  return (\n    <React.Fragment>\n      <Container className={classes.cardGrid} maxWidth=\"md\">\n        {/* End hero unit */}\n        <Grid container spacing={4}>\n          {tenantState.map((audit, index) => {\n            console.log(audit);\n            const {\n              store_name,\n              open_date,\n              overall_status,\n              overall_score,\n              report_type,\n              report_id,\n            } = audit;\n            let imageObject = tenantImages.find(\n              (image) => image.name === store_name\n            );\n\n            return (\n              <Grid item key={index} xs={12} sm={6} md={4}>\n                <Card className={classes.card}>\n                  <CardMedia\n                    component=\"img\"\n                    alt=\"tenant-image\"\n                    className={classes.cardMedia}\n                    // image={`${imageObject.imageUrl}`}\n                    image={\n                      imageObject.imageUrl\n                        ? `${imageObject.imageUrl}`\n                        : `url(https://source.unsplash.com/random)`\n                    }\n                    title=\"Image title\"\n                  />\n                  <CardContent className={classes.cardContent}>\n                    <div className={classes.cardTitle}>\n                      <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                        {store_name}\n                      </Typography>\n                      {overall_status === 1 && (\n                        <Typography\n                          variant=\"button\"\n                          className={classes.resolvedLabel}\n                        >\n                          Resolved\n                        </Typography>\n                      )}\n                    </div>\n\n                    <Typography variant=\"caption\">\n                      <div>Date: {new Date(open_date).toString()}</div>\n                      {report_type === \"FB\" && <div>Type: Food & Beverage</div>}\n                      {report_type === \"NFB\" && (\n                        <div>Type: Non-Food & Beverage</div>\n                      )}\n                      {report_type === \"SMA\" && (\n                        <div>Type: Safe Management</div>\n                      )}\n                      <div>Score: {overall_score}</div>\n                    </Typography>\n                  </CardContent>\n                  <CardActions>\n                    {overall_status === 0 && (\n                      <Link to={`/t/report/${report_id}`}>\n                        <Button\n                          size=\"medium\"\n                          color=\"primary\"\n                          className={classes.button}\n                        >\n                          Rectify\n                        </Button>\n                      </Link>\n                    )}\n                    <Link to={`/fullreport/${report_id}`}>\n                      <Button\n                        size=\"medium\"\n                        color=\"primary\"\n                        className={classes.button}\n                      >\n                        View Report\n                      </Button>\n                    </Link>\n                  </CardActions>\n                </Card>\n              </Grid>\n            );\n          })}\n        </Grid>\n      </Container>\n    </React.Fragment>\n  );\n}\n",{"ruleId":"403","replacedBy":"404"},{"ruleId":"405","replacedBy":"406"},{"ruleId":"407","severity":1,"message":"408","line":21,"column":8,"nodeType":"409","messageId":"410","endLine":21,"endColumn":15},{"ruleId":"407","severity":1,"message":"411","line":2,"column":10,"nodeType":"409","messageId":"410","endLine":2,"endColumn":16},{"ruleId":"407","severity":1,"message":"412","line":2,"column":18,"nodeType":"409","messageId":"410","endLine":2,"endColumn":29},{"ruleId":"407","severity":1,"message":"413","line":2,"column":31,"nodeType":"409","messageId":"410","endLine":2,"endColumn":38},{"ruleId":"407","severity":1,"message":"414","line":2,"column":40,"nodeType":"409","messageId":"410","endLine":2,"endColumn":52},{"ruleId":"415","severity":1,"message":"416","line":75,"column":29,"nodeType":"409","endLine":75,"endColumn":40},{"ruleId":"415","severity":1,"message":"416","line":112,"column":25,"nodeType":"409","endLine":112,"endColumn":36},{"ruleId":"415","severity":1,"message":"416","line":189,"column":31,"nodeType":"409","endLine":189,"endColumn":42},{"ruleId":"415","severity":1,"message":"416","line":224,"column":34,"nodeType":"409","endLine":224,"endColumn":45},{"ruleId":"415","severity":1,"message":"416","line":311,"column":26,"nodeType":"409","endLine":311,"endColumn":37},{"ruleId":"415","severity":1,"message":"416","line":340,"column":29,"nodeType":"409","endLine":340,"endColumn":40},{"ruleId":"415","severity":1,"message":"416","line":369,"column":27,"nodeType":"409","endLine":369,"endColumn":38},{"ruleId":"407","severity":1,"message":"417","line":481,"column":9,"nodeType":"409","messageId":"410","endLine":481,"endColumn":24},{"ruleId":"407","severity":1,"message":"418","line":548,"column":10,"nodeType":"409","messageId":"410","endLine":548,"endColumn":24},{"ruleId":"407","severity":1,"message":"419","line":548,"column":26,"nodeType":"409","messageId":"410","endLine":548,"endColumn":43},{"ruleId":"407","severity":1,"message":"420","line":578,"column":5,"nodeType":"409","messageId":"410","endLine":578,"endColumn":38},{"ruleId":"407","severity":1,"message":"421","line":581,"column":37,"nodeType":"409","messageId":"410","endLine":581,"endColumn":65},{"ruleId":"407","severity":1,"message":"422","line":587,"column":5,"nodeType":"409","messageId":"410","endLine":587,"endColumn":42},{"ruleId":"407","severity":1,"message":"423","line":16,"column":8,"nodeType":"409","messageId":"410","endLine":16,"endColumn":26},{"ruleId":"407","severity":1,"message":"424","line":78,"column":52,"nodeType":"409","messageId":"410","endLine":78,"endColumn":61},{"ruleId":"407","severity":1,"message":"425","line":95,"column":11,"nodeType":"409","messageId":"410","endLine":95,"endColumn":19},{"ruleId":"415","severity":1,"message":"426","line":143,"column":6,"nodeType":"427","endLine":143,"endColumn":8,"suggestions":"428"},{"ruleId":"415","severity":1,"message":"429","line":34,"column":6,"nodeType":"427","endLine":34,"endColumn":8,"suggestions":"430"},{"ruleId":"407","severity":1,"message":"431","line":37,"column":9,"nodeType":"409","messageId":"410","endLine":37,"endColumn":16},{"ruleId":"407","severity":1,"message":"414","line":2,"column":10,"nodeType":"409","messageId":"410","endLine":2,"endColumn":22},{"ruleId":"407","severity":1,"message":"432","line":3,"column":10,"nodeType":"409","messageId":"410","endLine":3,"endColumn":14},{"ruleId":"407","severity":1,"message":"433","line":4,"column":10,"nodeType":"409","messageId":"410","endLine":4,"endColumn":22},{"ruleId":"415","severity":1,"message":"434","line":47,"column":6,"nodeType":"427","endLine":47,"endColumn":8,"suggestions":"435"},{"ruleId":"407","severity":1,"message":"436","line":1,"column":50,"nodeType":"409","messageId":"410","endLine":1,"endColumn":61},{"ruleId":"415","severity":1,"message":"437","line":94,"column":6,"nodeType":"427","endLine":94,"endColumn":8,"suggestions":"438"},{"ruleId":"415","severity":1,"message":"429","line":75,"column":6,"nodeType":"427","endLine":75,"endColumn":8,"suggestions":"439"},{"ruleId":"407","severity":1,"message":"413","line":2,"column":10,"nodeType":"409","messageId":"410","endLine":2,"endColumn":17},{"ruleId":"415","severity":1,"message":"440","line":24,"column":6,"nodeType":"427","endLine":24,"endColumn":8,"suggestions":"441"},{"ruleId":"407","severity":1,"message":"442","line":38,"column":25,"nodeType":"409","messageId":"410","endLine":38,"endColumn":29},{"ruleId":"407","severity":1,"message":"443","line":1,"column":17,"nodeType":"409","messageId":"410","endLine":1,"endColumn":25},{"ruleId":"407","severity":1,"message":"411","line":2,"column":10,"nodeType":"409","messageId":"410","endLine":2,"endColumn":16},{"ruleId":"407","severity":1,"message":"432","line":3,"column":10,"nodeType":"409","messageId":"410","endLine":3,"endColumn":14},{"ruleId":"407","severity":1,"message":"444","line":4,"column":8,"nodeType":"409","messageId":"410","endLine":4,"endColumn":22},{"ruleId":"407","severity":1,"message":"445","line":5,"column":8,"nodeType":"409","messageId":"410","endLine":5,"endColumn":14},{"ruleId":"407","severity":1,"message":"443","line":1,"column":17,"nodeType":"409","messageId":"410","endLine":1,"endColumn":25},{"ruleId":"407","severity":1,"message":"446","line":11,"column":5,"nodeType":"409","messageId":"410","endLine":11,"endColumn":17},{"ruleId":"407","severity":1,"message":"447","line":12,"column":5,"nodeType":"409","messageId":"410","endLine":12,"endColumn":19},{"ruleId":"448","severity":1,"message":"449","line":21,"column":21,"nodeType":"450","messageId":"451","endLine":21,"endColumn":23},{"ruleId":"407","severity":1,"message":"432","line":2,"column":10,"nodeType":"409","messageId":"410","endLine":2,"endColumn":14},{"ruleId":"407","severity":1,"message":"452","line":4,"column":8,"nodeType":"409","messageId":"410","endLine":4,"endColumn":13},{"ruleId":"407","severity":1,"message":"453","line":9,"column":10,"nodeType":"409","messageId":"410","endLine":9,"endColumn":19},{"ruleId":"415","severity":1,"message":"454","line":20,"column":6,"nodeType":"427","endLine":20,"endColumn":8,"suggestions":"455"},{"ruleId":"415","severity":1,"message":"456","line":107,"column":6,"nodeType":"427","endLine":107,"endColumn":21,"suggestions":"457"},{"ruleId":"458","severity":1,"message":"459","line":124,"column":15,"nodeType":"460","messageId":"461","endLine":140,"endColumn":16},{"ruleId":"407","severity":1,"message":"462","line":1,"column":17,"nodeType":"409","messageId":"410","endLine":1,"endColumn":26},{"ruleId":"407","severity":1,"message":"432","line":4,"column":3,"nodeType":"409","messageId":"410","endLine":4,"endColumn":7},{"ruleId":"407","severity":1,"message":"463","line":7,"column":3,"nodeType":"409","messageId":"410","endLine":7,"endColumn":6},{"ruleId":"407","severity":1,"message":"464","line":16,"column":8,"nodeType":"409","messageId":"410","endLine":16,"endColumn":28},{"ruleId":"407","severity":1,"message":"465","line":1,"column":8,"nodeType":"409","messageId":"410","endLine":1,"endColumn":13},{"ruleId":"407","severity":1,"message":"466","line":3,"column":7,"nodeType":"409","messageId":"410","endLine":3,"endColumn":12},{"ruleId":"415","severity":1,"message":"429","line":27,"column":6,"nodeType":"427","endLine":27,"endColumn":21,"suggestions":"467"},{"ruleId":"403","replacedBy":"468"},{"ruleId":"405","replacedBy":"469"},{"ruleId":"407","severity":1,"message":"470","line":13,"column":39,"nodeType":"409","messageId":"410","endLine":13,"endColumn":52},{"ruleId":"407","severity":1,"message":"471","line":13,"column":54,"nodeType":"409","messageId":"410","endLine":13,"endColumn":60},{"ruleId":"407","severity":1,"message":"472","line":13,"column":62,"nodeType":"409","messageId":"410","endLine":13,"endColumn":66},{"ruleId":"407","severity":1,"message":"473","line":1,"column":29,"nodeType":"409","messageId":"410","endLine":1,"endColumn":38},{"ruleId":"407","severity":1,"message":"443","line":1,"column":40,"nodeType":"409","messageId":"410","endLine":1,"endColumn":48},{"ruleId":"407","severity":1,"message":"474","line":2,"column":8,"nodeType":"409","messageId":"410","endLine":2,"endColumn":14},{"ruleId":"407","severity":1,"message":"475","line":5,"column":8,"nodeType":"409","messageId":"410","endLine":5,"endColumn":18},{"ruleId":"407","severity":1,"message":"476","line":11,"column":8,"nodeType":"409","messageId":"410","endLine":11,"endColumn":15},{"ruleId":"407","severity":1,"message":"477","line":18,"column":8,"nodeType":"409","messageId":"410","endLine":18,"endColumn":14},{"ruleId":"407","severity":1,"message":"478","line":1,"column":22,"nodeType":"409","messageId":"410","endLine":1,"endColumn":30},{"ruleId":"407","severity":1,"message":"474","line":2,"column":8,"nodeType":"409","messageId":"410","endLine":2,"endColumn":14},{"ruleId":"407","severity":1,"message":"475","line":4,"column":8,"nodeType":"409","messageId":"410","endLine":4,"endColumn":18},{"ruleId":"407","severity":1,"message":"476","line":10,"column":8,"nodeType":"409","messageId":"410","endLine":10,"endColumn":15},{"ruleId":"407","severity":1,"message":"479","line":6,"column":8,"nodeType":"409","messageId":"410","endLine":6,"endColumn":12},{"ruleId":"407","severity":1,"message":"480","line":9,"column":8,"nodeType":"409","messageId":"410","endLine":9,"endColumn":22},{"ruleId":"407","severity":1,"message":"481","line":11,"column":8,"nodeType":"409","messageId":"410","endLine":11,"endColumn":14},{"ruleId":"407","severity":1,"message":"482","line":13,"column":10,"nodeType":"409","messageId":"410","endLine":13,"endColumn":19},{"ruleId":"407","severity":1,"message":"483","line":66,"column":7,"nodeType":"409","messageId":"410","endLine":66,"endColumn":19},{"ruleId":"407","severity":1,"message":"484","line":111,"column":5,"nodeType":"409","messageId":"410","endLine":111,"endColumn":18},{"ruleId":"407","severity":1,"message":"485","line":113,"column":5,"nodeType":"409","messageId":"410","endLine":113,"endColumn":19},{"ruleId":"407","severity":1,"message":"486","line":115,"column":5,"nodeType":"409","messageId":"410","endLine":115,"endColumn":19},{"ruleId":"407","severity":1,"message":"436","line":1,"column":50,"nodeType":"409","messageId":"410","endLine":1,"endColumn":61},{"ruleId":"415","severity":1,"message":"487","line":96,"column":6,"nodeType":"427","endLine":96,"endColumn":8,"suggestions":"488"},{"ruleId":"407","severity":1,"message":"436","line":1,"column":50,"nodeType":"409","messageId":"410","endLine":1,"endColumn":61},{"ruleId":"415","severity":1,"message":"489","line":95,"column":6,"nodeType":"427","endLine":95,"endColumn":8,"suggestions":"490"},{"ruleId":"407","severity":1,"message":"491","line":9,"column":8,"nodeType":"409","messageId":"410","endLine":9,"endColumn":17},{"ruleId":"407","severity":1,"message":"492","line":10,"column":8,"nodeType":"409","messageId":"410","endLine":10,"endColumn":24},{"ruleId":"407","severity":1,"message":"493","line":11,"column":8,"nodeType":"409","messageId":"410","endLine":11,"endColumn":24},{"ruleId":"407","severity":1,"message":"494","line":12,"column":8,"nodeType":"409","messageId":"410","endLine":12,"endColumn":16},{"ruleId":"407","severity":1,"message":"495","line":13,"column":8,"nodeType":"409","messageId":"410","endLine":13,"endColumn":24},{"ruleId":"407","severity":1,"message":"496","line":14,"column":8,"nodeType":"409","messageId":"410","endLine":14,"endColumn":22},{"ruleId":"407","severity":1,"message":"479","line":15,"column":8,"nodeType":"409","messageId":"410","endLine":15,"endColumn":12},{"ruleId":"407","severity":1,"message":"497","line":16,"column":8,"nodeType":"409","messageId":"410","endLine":16,"endColumn":16},{"ruleId":"407","severity":1,"message":"498","line":17,"column":8,"nodeType":"409","messageId":"410","endLine":17,"endColumn":20},{"ruleId":"407","severity":1,"message":"481","line":18,"column":8,"nodeType":"409","messageId":"410","endLine":18,"endColumn":14},{"ruleId":"407","severity":1,"message":"499","line":20,"column":8,"nodeType":"409","messageId":"410","endLine":20,"endColumn":14},{"ruleId":"415","severity":1,"message":"500","line":105,"column":6,"nodeType":"427","endLine":105,"endColumn":8,"suggestions":"501"},{"ruleId":"458","severity":1,"message":"459","line":122,"column":15,"nodeType":"460","messageId":"461","endLine":138,"endColumn":16},{"ruleId":"407","severity":1,"message":"502","line":4,"column":3,"nodeType":"409","messageId":"410","endLine":4,"endColumn":12},{"ruleId":"407","severity":1,"message":"453","line":6,"column":3,"nodeType":"409","messageId":"410","endLine":6,"endColumn":12},{"ruleId":"407","severity":1,"message":"503","line":8,"column":3,"nodeType":"409","messageId":"410","endLine":8,"endColumn":13},{"ruleId":"407","severity":1,"message":"504","line":32,"column":5,"nodeType":"409","messageId":"410","endLine":32,"endColumn":19},{"ruleId":"407","severity":1,"message":"505","line":36,"column":10,"nodeType":"409","messageId":"410","endLine":36,"endColumn":23},{"ruleId":"407","severity":1,"message":"506","line":36,"column":25,"nodeType":"409","messageId":"410","endLine":36,"endColumn":41},{"ruleId":"407","severity":1,"message":"507","line":46,"column":9,"nodeType":"409","messageId":"410","endLine":46,"endColumn":19},{"ruleId":"448","severity":1,"message":"508","line":72,"column":24,"nodeType":"450","messageId":"451","endLine":72,"endColumn":26},{"ruleId":"415","severity":1,"message":"509","line":101,"column":6,"nodeType":"427","endLine":101,"endColumn":23,"suggestions":"510"},{"ruleId":"407","severity":1,"message":"511","line":36,"column":22,"nodeType":"409","messageId":"410","endLine":36,"endColumn":37},{"ruleId":"407","severity":1,"message":"512","line":50,"column":15,"nodeType":"409","messageId":"410","endLine":50,"endColumn":25},{"ruleId":"415","severity":1,"message":"513","line":59,"column":6,"nodeType":"427","endLine":59,"endColumn":8,"suggestions":"514"},{"ruleId":"458","severity":1,"message":"459","line":82,"column":17,"nodeType":"460","messageId":"461","endLine":98,"endColumn":18},{"ruleId":"407","severity":1,"message":"432","line":2,"column":10,"nodeType":"409","messageId":"410","endLine":2,"endColumn":14},{"ruleId":"407","severity":1,"message":"499","line":4,"column":3,"nodeType":"409","messageId":"410","endLine":4,"endColumn":9},{"ruleId":"407","severity":1,"message":"515","line":7,"column":3,"nodeType":"409","messageId":"410","endLine":7,"endColumn":14},{"ruleId":"407","severity":1,"message":"503","line":8,"column":3,"nodeType":"409","messageId":"410","endLine":8,"endColumn":13},{"ruleId":"407","severity":1,"message":"516","line":9,"column":3,"nodeType":"409","messageId":"410","endLine":9,"endColumn":9},{"ruleId":"407","severity":1,"message":"517","line":11,"column":3,"nodeType":"409","messageId":"410","endLine":11,"endColumn":7},{"ruleId":"407","severity":1,"message":"518","line":15,"column":3,"nodeType":"409","messageId":"410","endLine":15,"endColumn":16},{"ruleId":"407","severity":1,"message":"519","line":16,"column":3,"nodeType":"409","messageId":"410","endLine":16,"endColumn":16},{"ruleId":"407","severity":1,"message":"520","line":17,"column":3,"nodeType":"409","messageId":"410","endLine":17,"endColumn":14},{"ruleId":"407","severity":1,"message":"521","line":18,"column":3,"nodeType":"409","messageId":"410","endLine":18,"endColumn":9},{"ruleId":"407","severity":1,"message":"522","line":19,"column":3,"nodeType":"409","messageId":"410","endLine":19,"endColumn":20},{"ruleId":"407","severity":1,"message":"523","line":26,"column":8,"nodeType":"409","messageId":"410","endLine":26,"endColumn":23},{"ruleId":"407","severity":1,"message":"524","line":33,"column":5,"nodeType":"409","messageId":"410","endLine":33,"endColumn":35},{"ruleId":"407","severity":1,"message":"525","line":35,"column":5,"nodeType":"409","messageId":"410","endLine":35,"endColumn":30},{"ruleId":"407","severity":1,"message":"526","line":36,"column":5,"nodeType":"409","messageId":"410","endLine":36,"endColumn":36},{"ruleId":"407","severity":1,"message":"527","line":47,"column":11,"nodeType":"409","messageId":"410","endLine":47,"endColumn":18},{"ruleId":"415","severity":1,"message":"528","line":82,"column":6,"nodeType":"427","endLine":82,"endColumn":23,"suggestions":"529"},{"ruleId":"407","severity":1,"message":"530","line":12,"column":8,"nodeType":"409","messageId":"410","endLine":12,"endColumn":23},{"ruleId":"407","severity":1,"message":"511","line":51,"column":22,"nodeType":"409","messageId":"410","endLine":51,"endColumn":37},{"ruleId":"458","severity":1,"message":"459","line":87,"column":11,"nodeType":"460","messageId":"461","endLine":103,"endColumn":12},{"ruleId":"415","severity":1,"message":"513","line":165,"column":6,"nodeType":"427","endLine":165,"endColumn":8,"suggestions":"531"},{"ruleId":"532","severity":1,"message":"533","line":313,"column":15,"nodeType":"534","endLine":313,"endColumn":32},{"ruleId":"407","severity":1,"message":"443","line":1,"column":17,"nodeType":"409","messageId":"410","endLine":1,"endColumn":25},{"ruleId":"407","severity":1,"message":"535","line":1,"column":27,"nodeType":"409","messageId":"410","endLine":1,"endColumn":37},{"ruleId":"407","severity":1,"message":"499","line":2,"column":10,"nodeType":"409","messageId":"410","endLine":2,"endColumn":16},{"ruleId":"407","severity":1,"message":"502","line":2,"column":18,"nodeType":"409","messageId":"410","endLine":2,"endColumn":27},{"ruleId":"407","severity":1,"message":"515","line":2,"column":29,"nodeType":"409","messageId":"410","endLine":2,"endColumn":40},{"ruleId":"407","severity":1,"message":"503","line":2,"column":42,"nodeType":"409","messageId":"410","endLine":2,"endColumn":52},{"ruleId":"407","severity":1,"message":"516","line":2,"column":54,"nodeType":"409","messageId":"410","endLine":2,"endColumn":60},{"ruleId":"407","severity":1,"message":"518","line":3,"column":10,"nodeType":"409","messageId":"410","endLine":3,"endColumn":23},{"ruleId":"407","severity":1,"message":"519","line":3,"column":25,"nodeType":"409","messageId":"410","endLine":3,"endColumn":38},{"ruleId":"407","severity":1,"message":"520","line":3,"column":40,"nodeType":"409","messageId":"410","endLine":3,"endColumn":51},{"ruleId":"407","severity":1,"message":"521","line":3,"column":53,"nodeType":"409","messageId":"410","endLine":3,"endColumn":59},{"ruleId":"407","severity":1,"message":"522","line":3,"column":61,"nodeType":"409","messageId":"410","endLine":3,"endColumn":78},{"ruleId":"407","severity":1,"message":"536","line":6,"column":10,"nodeType":"409","messageId":"410","endLine":6,"endColumn":17},{"ruleId":"407","severity":1,"message":"537","line":7,"column":10,"nodeType":"409","messageId":"410","endLine":7,"endColumn":23},{"ruleId":"538","severity":1,"message":"539","line":72,"column":22,"nodeType":"540","endLine":72,"endColumn":79},{"ruleId":"407","severity":1,"message":"541","line":3,"column":10,"nodeType":"409","messageId":"410","endLine":3,"endColumn":20},{"ruleId":"407","severity":1,"message":"496","line":4,"column":8,"nodeType":"409","messageId":"410","endLine":4,"endColumn":22},{"ruleId":"407","severity":1,"message":"517","line":5,"column":18,"nodeType":"409","messageId":"410","endLine":5,"endColumn":22},{"ruleId":"407","severity":1,"message":"453","line":5,"column":24,"nodeType":"409","messageId":"410","endLine":5,"endColumn":33},{"ruleId":"407","severity":1,"message":"542","line":14,"column":38,"nodeType":"409","messageId":"410","endLine":14,"endColumn":53},{"ruleId":"415","severity":1,"message":"543","line":35,"column":6,"nodeType":"427","endLine":35,"endColumn":8,"suggestions":"544"},{"ruleId":"407","severity":1,"message":"432","line":2,"column":10,"nodeType":"409","messageId":"410","endLine":2,"endColumn":14},{"ruleId":"407","severity":1,"message":"545","line":175,"column":5,"nodeType":"409","messageId":"410","endLine":175,"endColumn":19},{"ruleId":"415","severity":1,"message":"546","line":202,"column":6,"nodeType":"427","endLine":202,"endColumn":8,"suggestions":"547"},{"ruleId":"538","severity":1,"message":"539","line":326,"column":17,"nodeType":"540","endLine":326,"endColumn":73},{"ruleId":"538","severity":1,"message":"539","line":435,"column":25,"nodeType":"540","endLine":435,"endColumn":72},{"ruleId":"407","severity":1,"message":"494","line":7,"column":8,"nodeType":"409","messageId":"410","endLine":7,"endColumn":16},{"ruleId":"407","severity":1,"message":"495","line":8,"column":8,"nodeType":"409","messageId":"410","endLine":8,"endColumn":24},{"ruleId":"407","severity":1,"message":"479","line":10,"column":8,"nodeType":"409","messageId":"410","endLine":10,"endColumn":12},{"ruleId":"407","severity":1,"message":"548","line":142,"column":5,"nodeType":"409","messageId":"410","endLine":142,"endColumn":21},{"ruleId":"415","severity":1,"message":"546","line":164,"column":6,"nodeType":"427","endLine":164,"endColumn":21,"suggestions":"549"},{"ruleId":"538","severity":1,"message":"539","line":218,"column":17,"nodeType":"540","endLine":218,"endColumn":71},{"ruleId":"538","severity":1,"message":"539","line":254,"column":27,"nodeType":"540","endLine":254,"endColumn":74},{"ruleId":"407","severity":1,"message":"465","line":1,"column":8,"nodeType":"409","messageId":"410","endLine":1,"endColumn":13},{"ruleId":"550","severity":1,"message":"551","line":46,"column":9,"nodeType":"409","messageId":"552","endLine":46,"endColumn":21},{"ruleId":"550","severity":1,"message":"553","line":47,"column":9,"nodeType":"409","messageId":"552","endLine":47,"endColumn":13},{"ruleId":"550","severity":1,"message":"554","line":48,"column":9,"nodeType":"409","messageId":"552","endLine":48,"endColumn":14},{"ruleId":"550","severity":1,"message":"555","line":49,"column":9,"nodeType":"409","messageId":"552","endLine":49,"endColumn":12},{"ruleId":"407","severity":1,"message":"556","line":44,"column":5,"nodeType":"409","messageId":"410","endLine":44,"endColumn":16},{"ruleId":"407","severity":1,"message":"473","line":1,"column":29,"nodeType":"409","messageId":"410","endLine":1,"endColumn":38},{"ruleId":"407","severity":1,"message":"443","line":1,"column":40,"nodeType":"409","messageId":"410","endLine":1,"endColumn":48},{"ruleId":"407","severity":1,"message":"474","line":2,"column":8,"nodeType":"409","messageId":"410","endLine":2,"endColumn":14},{"ruleId":"407","severity":1,"message":"475","line":4,"column":8,"nodeType":"409","messageId":"410","endLine":4,"endColumn":18},{"ruleId":"407","severity":1,"message":"476","line":10,"column":8,"nodeType":"409","messageId":"410","endLine":10,"endColumn":15},{"ruleId":"407","severity":1,"message":"477","line":17,"column":8,"nodeType":"409","messageId":"410","endLine":17,"endColumn":14},"no-native-reassign",["557"],"no-negated-in-lhs",["558"],"no-unused-vars","'Loading' is defined but never used.","Identifier","unusedVar","'audits' is defined but never used.","'fbChecklist' is defined but never used.","'tenants' is defined but never used.","'institutions' is defined but never used.","react-hooks/exhaustive-deps","React Hook useCallback does nothing when called with only one argument. Did you forget to pass an array of dependencies?","'getAuditsTenant' is assigned a value but never used.","'reportIdsState' is assigned a value but never used.","'setReportIdsState' is assigned a value but never used.","'setAllAvailableNotificationsState' is assigned a value but never used.","'setCurrentNotificationsState' is assigned a value but never used.","'setNotificationsByNotificationIdState' is assigned a value but never used.","'QuestionAnswerIcon' is defined but never used.","'getAudits' is assigned a value but never used.","'username' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getReport', 'getTenantAudits', 'getUserInfo', and 'tenantId'. Either include them or remove the dependency array.","ArrayExpression",["559"],"React Hook useEffect has a missing dependency: 'getAccountInfo'. Either include it or remove the dependency array.",["560"],"'API_URL' is assigned a value but never used.","'Link' is defined but never used.","'FaAngleRight' is defined but never used.","React Hook useEffect has missing dependencies: 'getAudits', 'getReport', and 'setAuditsState'. Either include them or remove the dependency array.",["561"],"'useCallback' is defined but never used.","React Hook useEffect has missing dependencies: 'createFbReportState', 'getFbChecklistQuestions', 'getUserInfo', 'setTenantType', and 'tenantId'. Either include them or remove the dependency array.",["562"],["563"],"React Hook useEffect has missing dependencies: 'getInstitutionTenants' and 'institutionName'. Either include them or remove the dependency array.",["564"],"'name' is assigned a value but never used.","'useState' is defined but never used.","'HomeCategories' is defined but never used.","'Audits' is defined but never used.","'accountState' is assigned a value but never used.","'getAccountInfo' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'axios' is defined but never used.","'FormGroup' is defined but never used.","React Hook useEffect has a missing dependency: 'getAllChatsOfUser'. Either include it or remove the dependency array.",["565"],"React Hook useEffect has missing dependencies: 'getQuestionInfo', 'getReport', 'getReportStats', 'getUserInfoNoParams', and 'reportId'. Either include them or remove the dependency array.",["566"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'Component' is defined but never used.","'Box' is defined but never used.","'singhealthBackground' is defined but never used.","'React' is defined but never used.","'users' is assigned a value but never used.",["567"],["557"],["558"],"'timeRemaining' is assigned a value but never used.","'status' is assigned a value but never used.","'date' is assigned a value but never used.","'useEffect' is defined but never used.","'AppBar' is defined but never used.","'CameraIcon' is defined but never used.","'Toolbar' is defined but never used.","'zIndex' is defined but never used.","'rgbToHex' is defined but never used.","'List' is defined but never used.","'ListItemAvatar' is defined but never used.","'Avatar' is defined but never used.","'FaRegEdit' is defined but never used.","'StyledRating' is assigned a value but never used.","'fbReportState' is assigned a value but never used.","'nfbReportState' is assigned a value but never used.","'smaReportState' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'createSMAReportState', 'getSMAChecklistQuestions', 'getUserInfo', 'setTenantType', and 'tenantId'. Either include them or remove the dependency array.",["568"],"React Hook useEffect has missing dependencies: 'createNonFbReportState', 'getNonFbChecklistQuestions', 'getUserInfo', 'setTenantType', and 'tenantId'. Either include them or remove the dependency array.",["569"],"'Accordion' is defined but never used.","'AccordionSummary' is defined but never used.","'AccordionDetails' is defined but never used.","'Checkbox' is defined but never used.","'FormControlLabel' is defined but never used.","'ExpandMoreIcon' is defined but never used.","'ListItem' is defined but never used.","'ListItemText' is defined but never used.","'Button' is defined but never used.","React Hook useEffect has missing dependencies: 'getQuestionInfo', 'getReportStats', 'getUserInfoNoParams', and 'reportId'. Either include them or remove the dependency array.",["570"],"'TextField' is defined but never used.","'InputLabel' is defined but never used.","'getAllAuditors' is assigned a value but never used.","'allChatsState' is assigned a value but never used.","'setAllChatsState' is assigned a value but never used.","'chatsArray' is assigned a value but never used.","Expected '===' and instead saw '=='.","React Hook useEffect has missing dependencies: 'allTenantsState', 'getAllChatsOfUser', 'getAllTenants', and 'setAllChatsOfUserState'. Either include them or remove the dependency array.",["571"],"'getQuestionInfo' is assigned a value but never used.","'reportInfo' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getOriginalReport', 'getReport', and 'reportId'. Either include them or remove the dependency array.",["572"],"'FormControl' is defined but never used.","'Select' is defined but never used.","'Grid' is defined but never used.","'DialogActions' is defined but never used.","'DialogContent' is defined but never used.","'DialogTitle' is defined but never used.","'Dialog' is defined but never used.","'DialogContentText' is defined but never used.","'NotificationRow' is defined but never used.","'allAvailableNotificationsState' is assigned a value but never used.","'currentNotificationsState' is assigned a value but never used.","'getNotificationByNotificationId' is assigned a value but never used.","'role_id' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getAllAvailableNotifications'. Either include it or remove the dependency array.",["573"],"'ReactHtmlParser' is defined but never used.",["574"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'useContext' is defined but never used.","'Context' is defined but never used.","'toValidFormat' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'makeStyles' is defined but never used.","'chatSubmitState' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getUserInfo' and 'target_id'. Either include them or remove the dependency array.",["575"],"'getReportEntry' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getTenantRectification', 'qn_id', 'report_id', and 'tenant_id'. Either include them or remove the dependency array.",["576"],"'setResolvedState' is assigned a value but never used.",["577"],"no-redeclare","'string_array' is already defined.","redeclared","'year' is already defined.","'month' is already defined.","'day' is already defined.","'tenantState' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"578","fix":"579"},{"desc":"580","fix":"581"},{"desc":"582","fix":"583"},{"desc":"584","fix":"585"},{"desc":"580","fix":"586"},{"desc":"587","fix":"588"},{"desc":"589","fix":"590"},{"desc":"591","fix":"592"},{"desc":"593","fix":"594"},{"desc":"595","fix":"596"},{"desc":"597","fix":"598"},{"desc":"599","fix":"600"},{"desc":"601","fix":"602"},{"desc":"603","fix":"604"},{"desc":"605","fix":"606"},{"desc":"603","fix":"607"},{"desc":"608","fix":"609"},{"desc":"610","fix":"611"},{"desc":"612","fix":"613"},"Update the dependencies array to be: [getReport, getTenantAudits, getUserInfo, tenantId]",{"range":"614","text":"615"},"Update the dependencies array to be: [getAccountInfo]",{"range":"616","text":"617"},"Update the dependencies array to be: [getAudits, getReport, setAuditsState]",{"range":"618","text":"619"},"Update the dependencies array to be: [createFbReportState, getFbChecklistQuestions, getUserInfo, setTenantType, tenantId]",{"range":"620","text":"621"},{"range":"622","text":"617"},"Update the dependencies array to be: [getInstitutionTenants, institutionName]",{"range":"623","text":"624"},"Update the dependencies array to be: [getAllChatsOfUser]",{"range":"625","text":"626"},"Update the dependencies array to be: [getQuestionInfo, getReport, getReportStats, getUserInfoNoParams, reportId, resolvedState]",{"range":"627","text":"628"},"Update the dependencies array to be: [getAccountInfo, toggleClicked]",{"range":"629","text":"630"},"Update the dependencies array to be: [createSMAReportState, getSMAChecklistQuestions, getUserInfo, setTenantType, tenantId]",{"range":"631","text":"632"},"Update the dependencies array to be: [createNonFbReportState, getNonFbChecklistQuestions, getUserInfo, setTenantType, tenantId]",{"range":"633","text":"634"},"Update the dependencies array to be: [getQuestionInfo, getReportStats, getUserInfoNoParams, reportId]",{"range":"635","text":"636"},"Update the dependencies array to be: [allTenantsState, chatSubmitState, getAllChatsOfUser, getAllTenants, setAllChatsOfUserState]",{"range":"637","text":"638"},"Update the dependencies array to be: [getOriginalReport, getReport, reportId]",{"range":"639","text":"640"},"Update the dependencies array to be: [chatSubmitState, getAllAvailableNotifications]",{"range":"641","text":"642"},{"range":"643","text":"640"},"Update the dependencies array to be: [getUserInfo, target_id]",{"range":"644","text":"645"},"Update the dependencies array to be: [getTenantRectification, qn_id, report_id, tenant_id]",{"range":"646","text":"647"},"Update the dependencies array to be: [getTenantRectification, qn_id, report_id, resolvedState, tenant_id]",{"range":"648","text":"649"},[4620,4622],"[getReport, getTenantAudits, getUserInfo, tenantId]",[702,704],"[getAccountInfo]",[1496,1498],"[getAudits, getReport, setAuditsState]",[2530,2532],"[createFbReportState, getFbChecklistQuestions, getUserInfo, setTenantType, tenantId]",[1730,1732],[873,875],"[getInstitutionTenants, institutionName]",[486,488],"[getAllChatsOfUser]",[3235,3250],"[getQuestionInfo, getReport, getReportStats, getUserInfoNoParams, reportId, resolvedState]",[926,941],"[getAccountInfo, toggleClicked]",[2584,2586],"[createSMAReportState, getSMAChecklistQuestions, getUserInfo, setTenantType, tenantId]",[2584,2586],"[createNonFbReportState, getNonFbChecklistQuestions, getUserInfo, setTenantType, tenantId]",[3542,3544],"[getQuestionInfo, getReportStats, getUserInfoNoParams, reportId]",[2659,2676],"[allTenantsState, chatSubmitState, getAllChatsOfUser, getAllTenants, setAllChatsOfUserState]",[1675,1677],"[getOriginalReport, getReport, reportId]",[2391,2408],"[chatSubmitState, getAllAvailableNotifications]",[4790,4792],[1183,1185],"[getUserInfo, target_id]",[5060,5062],"[getTenantRectification, qn_id, report_id, tenant_id]",[4168,4183],"[getTenantRectification, qn_id, report_id, resolvedState, tenant_id]"]