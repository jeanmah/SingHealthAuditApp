[{"/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/index.js":"1","/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/App.js":"2","/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/Context.js":"3","/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/pages/Tenant.js":"4","/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/pages/Account.js":"5","/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/pages/Institutions.js":"6","/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/pages/HomeAuditor.js":"7","/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/pages/FbChecklist.js":"8","/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/pages/EditAccount.js":"9","/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/pages/Error.js":"10","/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/pages/Loading.js":"11","/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/pages/Institution.js":"12","/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/pages/ManagerHome.js":"13","/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/pages/TenantHome.js":"14","/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/pages/Store.js":"15","/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/pages/EditPassword.js":"16","/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/pages/Chat.js":"17","/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/pages/AuditReport.js":"18","/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/components/testJwt/Login.js":"19","/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/components/testJwt/AuthenticatedRoute.js":"20","/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/data.js":"21","/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/AuthenticationService.js":"22","/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/Navbar.js":"23","/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/components/HomeCategories.js":"24","/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/components/Audits.js":"25","/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/components/HomeAuditorCards.js":"26","/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/styles.js":"27","/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/components/InstitutionsCards.js":"28","/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/components/Question.js":"29","/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/components/HomeAuditorTabs.js":"30","/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/pages/SMAChecklist.js":"31","/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/pages/NonFbChecklist.js":"32","/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/pages/TenantReport.js":"33","/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/pages/AllChats.js":"34","/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/pages/StoreReport.js":"35","/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/pages/Announcements.js":"36","/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/pages/AuditEmail.js":"37","/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/components/LimitedNotificationRow.js":"38","/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/components/ReportQuestion.js":"39","/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/components/ChatCards.js":"40","/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/components/NotificationRow.js":"41","/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/components/TenantReportCard.js":"42","/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/components/AuditReportCard.js":"43","/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/components/utils.js":"44","/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/components/TenantHomeTabs.js":"45","/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/components/TenantHomeCards.js":"46"},{"size":432,"mtime":1615629682191,"results":"47","hashOfConfig":"48"},{"size":4142,"mtime":1619361791251,"results":"49","hashOfConfig":"48"},{"size":22355,"mtime":1619361791250,"results":"50","hashOfConfig":"48"},{"size":16126,"mtime":1619361791237,"results":"51","hashOfConfig":"48"},{"size":2556,"mtime":1619361790950,"results":"52","hashOfConfig":"48"},{"size":1057,"mtime":1617719768858,"results":"53","hashOfConfig":"48"},{"size":1914,"mtime":1619361791238,"results":"54","hashOfConfig":"48"},{"size":4880,"mtime":1619361791239,"results":"55","hashOfConfig":"48"},{"size":6543,"mtime":1619361791240,"results":"56","hashOfConfig":"48"},{"size":103,"mtime":1615482392661,"results":"57","hashOfConfig":"48"},{"size":880,"mtime":1619361790951,"results":"58","hashOfConfig":"48"},{"size":2232,"mtime":1619361790951,"results":"59","hashOfConfig":"48"},{"size":13281,"mtime":1619361790952,"results":"60","hashOfConfig":"48"},{"size":1979,"mtime":1619361790953,"results":"61","hashOfConfig":"48"},{"size":9155,"mtime":1619361790952,"results":"62","hashOfConfig":"48"},{"size":3513,"mtime":1619361790951,"results":"63","hashOfConfig":"48"},{"size":4963,"mtime":1619361790951,"results":"64","hashOfConfig":"48"},{"size":5425,"mtime":1619361791245,"results":"65","hashOfConfig":"48"},{"size":4314,"mtime":1619361791247,"results":"66","hashOfConfig":"48"},{"size":403,"mtime":1619109059045,"results":"67","hashOfConfig":"48"},{"size":16161,"mtime":1619361791246,"results":"68","hashOfConfig":"48"},{"size":2019,"mtime":1619361790942,"results":"69","hashOfConfig":"48"},{"size":3823,"mtime":1619361790942,"results":"70","hashOfConfig":"48"},{"size":508,"mtime":1615637216653,"results":"71","hashOfConfig":"48"},{"size":1043,"mtime":1617719768843,"results":"72","hashOfConfig":"48"},{"size":6311,"mtime":1619361791249,"results":"73","hashOfConfig":"48"},{"size":4667,"mtime":1619361791236,"results":"74","hashOfConfig":"48"},{"size":4295,"mtime":1619361790946,"results":"75","hashOfConfig":"48"},{"size":11852,"mtime":1619361791248,"results":"76","hashOfConfig":"48"},{"size":4306,"mtime":1619361790945,"results":"77","hashOfConfig":"48"},{"size":4164,"mtime":1619361790952,"results":"78","hashOfConfig":"48"},{"size":4130,"mtime":1619361790952,"results":"79","hashOfConfig":"48"},{"size":5257,"mtime":1619361790953,"results":"80","hashOfConfig":"48"},{"size":5290,"mtime":1619361790950,"results":"81","hashOfConfig":"48"},{"size":3446,"mtime":1619361790952,"results":"82","hashOfConfig":"48"},{"size":4340,"mtime":1619361790950,"results":"83","hashOfConfig":"48"},{"size":9035,"mtime":1619361790951,"results":"84","hashOfConfig":"48"},{"size":1490,"mtime":1619361790946,"results":"85","hashOfConfig":"48"},{"size":2334,"mtime":1619361790946,"results":"86","hashOfConfig":"48"},{"size":2062,"mtime":1619361790943,"results":"87","hashOfConfig":"48"},{"size":9810,"mtime":1619361790946,"results":"88","hashOfConfig":"48"},{"size":12876,"mtime":1619361790947,"results":"89","hashOfConfig":"48"},{"size":8307,"mtime":1619361790942,"results":"90","hashOfConfig":"48"},{"size":1481,"mtime":1619361790947,"results":"91","hashOfConfig":"48"},{"size":4942,"mtime":1619361790947,"results":"92","hashOfConfig":"48"},{"size":4885,"mtime":1619361790947,"results":"93","hashOfConfig":"48"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},"19x7rlu",{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"96"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"110","messages":"111","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"120","messages":"121","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"126","messages":"127","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"128","messages":"129","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"130","messages":"131","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"132","messages":"133","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"96"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"153","messages":"154","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"157","messages":"158","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"96"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"96"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"96"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"96"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"96"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"96"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"96"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"96"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"96"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"96"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"96"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"96"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"96"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"96"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"96"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"96"},"/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/index.js",[],["205","206"],"/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/App.js",["207"],"/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/Context.js",["208","209","210","211","212","213","214","215"],"/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/pages/Tenant.js",["216"],"/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/pages/Account.js",["217","218"],"/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/pages/Institutions.js",["219","220","221"],"import React from \"react\";\nimport { institutions } from \"../data\";\nimport { Link } from \"react-router-dom\";\nimport { FaAngleRight } from \"react-icons/fa\";\nimport Navbar from \"../Navbar\";\nimport InstitutionsCards from \"../components/InstitutionsCards\";\n\nfunction Institutions() {\n  return (\n    <div>\n      <Navbar />\n\n      {/* <div className=\"institutions-head\"> */}\n      <InstitutionsCards />\n      {/* {institutions.map((institution, index) => {\n          const { id, name, tenantNames, imageUrl } = institution;\n          return (\n            <Link key={index} to={`/institution/${name}`}>\n              <article key={id} className=\"institutions-institution\">\n                <img src={imageUrl} className=\"hospital-logo\"></img>\n                <header className=\"institutions-btn\">\n                  <span className=\"institutions-btnicon\">\n                    <FaAngleRight />\n                  </span>\n                </header>\n              </article>\n            </Link>\n          );\n        })} */}\n    </div>\n  );\n}\n\nexport default Institutions;\n","/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/pages/HomeAuditor.js",["222"],"/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/pages/FbChecklist.js",["223","224","225"],"/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/pages/EditAccount.js",["226"],"/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/pages/Error.js",[],"/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/pages/Loading.js",[],"/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/pages/Institution.js",["227","228","229"],"/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/pages/ManagerHome.js",["230","231","232","233","234"],"/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/pages/TenantHome.js",[],"/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/pages/Store.js",["235"],"/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/pages/EditPassword.js",["236","237","238"],"/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/pages/Chat.js",["239","240","241","242"],"/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/pages/AuditReport.js",["243","244"],"/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/components/testJwt/Login.js",["245","246"],"/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/components/testJwt/AuthenticatedRoute.js",[],"/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/data.js",["247","248"],"/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/AuthenticationService.js",[],"/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/Navbar.js",["249"],"/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/components/HomeCategories.js",[],"/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/components/Audits.js",["250","251","252"],"import React, { useRef } from \"react\";\nimport { FaAngleRight } from \"react-icons/fa\";\nimport { Link } from \"react-router-dom\";\n\nfunction Audits({ homeAudits }) {\n  //to display the audits on the home page\n  //change color based on whether it is resolved or not\n  const homeAuditGridRef = useRef(null);\n\n  return (\n    <div>\n      {homeAudits.map((audit, index) => {\n        const { tenantid, tenantName, timeRemaining, status, date } = audit;\n\n        return (\n          <Link key={index} to={`/tenant/${tenantid}`}>\n            <div\n              className={`${\n                audit.status === \"resolved\"\n                  ? \"homeaudit-grid-resolved\"\n                  : \"homeaudit-grid-unresolved\"\n              }`}\n              ref={homeAuditGridRef}\n            >\n              <div className=\"tenantName-gridItem\">{tenantName}</div>\n              <div className=\"btn-homeToTenant\">\n                <FaAngleRight />\n              </div>\n            </div>\n          </Link>\n        );\n      })}\n    </div>\n  );\n}\n\nexport default Audits;\n","/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/components/HomeAuditorCards.js",["253","254","255","256","257","258","259"],"/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/styles.js",[],"/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/components/InstitutionsCards.js",["260","261","262"],"/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/components/Question.js",["263","264","265","266","267"],"/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/components/HomeAuditorTabs.js",[],"/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/pages/SMAChecklist.js",["268","269"],"import React, { useState, useContext, useEffect, useCallback } from \"react\";\nimport { useParams, Link } from \"react-router-dom\";\nimport Question from \"../components/Question\";\nimport { Context } from \"../Context\";\nimport Loading from \"./Loading\";\nimport Navbar from \"../Navbar\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport Box from \"@material-ui/core/Box\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\n\nimport Typography from \"@material-ui/core/Typography\";\n\n//styling for the fbchecklist page\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    padding: theme.spacing(4, 0, 10, 0),\n  },\n  list: {\n    width: \"100%\",\n    maxWidth: 800,\n    backgroundColor: theme.palette.background.paper,\n    display: \"flex\",\n    flexDirection: \"column\",\n\n    // alignItems: \"center\",\n  },\n  button: {\n    color: \"#F15A22\",\n    fontWeight: \"medium\",\n    width: \"100%\",\n    // maxWidth: 800,\n    backgroundColor: theme.palette.background.paper,\n    height: 50,\n  },\n  header: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(2, 2, 2, 2),\n  },\n  link: {\n    width: \"100%\",\n    maxWidth: 800,\n    backgroundColor: theme.palette.background.paper,\n  },\n}));\n\nfunction SMAChecklist() {\n  //use styles from function declared above\n  const classes = useStyles();\n  //get tenant id from url\n  const { tenantId } = useParams();\n\n  //Context\n  const {\n    getSMAChecklistQuestions,\n    createSMAReportState,\n    getUserInfo,\n    smaReportState,\n    submitSMAReport,\n    tenantType,\n    setTenantType,\n  } = useContext(Context);\n\n  //state to update nfb checklist questions\n  const [smaChecklistState, setSMAChecklistState] = useState();\n  const [tenantName, setTenantName] = useState();\n\n  useEffect(() => {\n    //function to retrieve questions\n    async function getTenantName() {\n      try {\n        const tenant_name = await getUserInfo(tenantId).then((response) => {\n          setTenantType(\"SMA\");\n          return response.data.store_name;\n        });\n        console.log(tenant_name);\n        setTenantName(tenant_name);\n      } catch (err) {\n        console.log(err);\n      }\n    }\n    getTenantName();\n    getSMAChecklistQuestions()\n      .then((response) => {\n        console.log(response);\n        setSMAChecklistState(response.data);\n        createSMAReportState(response.data);\n      })\n      .catch(() => {\n        console.log(\"sma checklist retrieval failed\");\n      });\n  }, []);\n\n  const handleSubmit = (tenantid, report) => {\n    submitSMAReport(tenantid, report);\n  };\n\n  return (\n    <>\n      {smaChecklistState && tenantName && tenantType ? (\n        <>\n          <Navbar />\n          <Box className={classes.header} textAlign=\"center\" boxShadow={1}>\n            <Typography variant=\"h5\">{tenantName} SMA Checklist</Typography>\n          </Box>\n\n          <Grid container className={classes.root}>\n            <List dense className={classes.list}>\n              {smaChecklistState.map((question, index) => {\n                const { sma_qn_id, requirement } = question;\n                console.log(requirement);\n                const labelId = `checkbox-list-secondary-label-${sma_qn_id}`;\n                return (\n                  <>\n                    <Question\n                      key={sma_qn_id}\n                      fb_qn_id={sma_qn_id}\n                      requirement={requirement}\n                      labelId={labelId}\n                      type={tenantType}\n                    />\n                  </>\n                );\n              })}\n            </List>\n            <Link to={`/tenant/${tenantId}`} className={classes.link}>\n              <Button\n                className={classes.button}\n                size=\"small\"\n                onClick={() => {\n                  handleSubmit(tenantId, smaReportState);\n                }}\n              >\n                Submit\n              </Button>\n            </Link>\n          </Grid>\n        </>\n      ) : (\n        <Loading />\n      )}\n    </>\n  );\n}\n\nexport default SMAChecklist;\n","/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/pages/NonFbChecklist.js",["270","271"],"import React, { useState, useContext, useEffect, useCallback } from \"react\";\nimport { useParams, Link } from \"react-router-dom\";\nimport Question from \"../components/Question\";\nimport { Context } from \"../Context\";\nimport Loading from \"./Loading\";\nimport Navbar from \"../Navbar\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport Box from \"@material-ui/core/Box\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\n\nimport Typography from \"@material-ui/core/Typography\";\n\n//styling for the fbchecklist page\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    padding: theme.spacing(4, 0, 10, 0),\n  },\n  list: {\n    width: \"100%\",\n    maxWidth: 800,\n    backgroundColor: theme.palette.background.paper,\n    display: \"flex\",\n    flexDirection: \"column\",\n\n    // alignItems: \"center\",\n  },\n  button: {\n    color: \"#F15A22\",\n    fontWeight: \"medium\",\n    width: \"100%\",\n    // maxWidth: 800,\n    backgroundColor: theme.palette.background.paper,\n    height: 50,\n  },\n  header: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(2, 2, 2, 2),\n  },\n  link: {\n    width: \"100%\",\n    maxWidth: 800,\n    backgroundColor: theme.palette.background.paper,\n  },\n}));\n\nfunction NonFbChecklist() {\n  //use styles from function declared above\n  const classes = useStyles();\n  //get tenant id from url\n  const { tenantId } = useParams();\n\n  //Context\n  const {\n    getNonFbChecklistQuestions,\n    createNonFbReportState,\n    getUserInfo,\n    nfbReportState,\n    submitNonFbReport,\n    tenantType,\n    setTenantType,\n  } = useContext(Context);\n\n  //state to update nfb checklist questions\n  const [nfbChecklistState, setNonFbChecklistState] = useState();\n  const [tenantName, setTenantName] = useState();\n\n  useEffect(() => {\n    //function to retrieve questions\n    async function getTenantName() {\n      try {\n        const tenant_name = await getUserInfo(tenantId).then((response) => {\n          setTenantType(response.data.type_id);\n          return response.data.store_name;\n        });\n        console.log(tenant_name);\n        setTenantName(tenant_name);\n      } catch (err) {\n        console.log(err);\n      }\n    }\n    getTenantName();\n    getNonFbChecklistQuestions()\n      .then((response) => {\n        setNonFbChecklistState(response.data);\n        createNonFbReportState(response.data);\n      })\n      .catch(() => {\n        console.log(\"fb checklist retrieval failed\");\n      });\n  }, []);\n\n  const handleSubmit = (tenantid, report) => {\n    submitNonFbReport(tenantid, report);\n  };\n\n  return (\n    <>\n      {nfbChecklistState && tenantName && tenantType ? (\n        <>\n          <Navbar />\n          <Box className={classes.header} textAlign=\"center\" boxShadow={1}>\n            <Typography variant=\"h5\">{tenantName} Non-F&B Checklist</Typography>\n          </Box>\n\n          <Grid container className={classes.root}>\n            <List dense className={classes.list}>\n              {nfbChecklistState.map((question, index) => {\n                const { nfb_qn_id, requirement } = question;\n                const labelId = `checkbox-list-secondary-label-${nfb_qn_id}`;\n                return (\n                  <>\n                    <Question\n                      key={nfb_qn_id}\n                      fb_qn_id={nfb_qn_id}\n                      requirement={requirement}\n                      labelId={labelId}\n                      type={tenantType}\n                    />\n                  </>\n                );\n              })}\n            </List>\n            <Link to={`/tenant/${tenantId}`} className={classes.link}>\n              <Button\n                className={classes.button}\n                size=\"small\"\n                onClick={() => {\n                  handleSubmit(tenantId, nfbReportState);\n                }}\n              >\n                Submit\n              </Button>\n            </Link>\n          </Grid>\n        </>\n      ) : (\n        <Loading />\n      )}\n    </>\n  );\n}\n\nexport default NonFbChecklist;\n","/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/pages/TenantReport.js",["272","273","274","275","276","277","278","279","280","281","282","283","284"],"import React, { useEffect, useState, useContext } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport Navbar from \"../Navbar\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Context } from \"../Context\";\nimport Loading from \"./Loading\";\nimport Accordion from \"@material-ui/core/Accordion\";\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport TenantReportCard from \"../components/TenantReportCard\";\nimport Button from \"@material-ui/core/Button\";\n\nconst useStyles = makeStyles((theme) => ({\n  header: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(2, 0, 2, 0),\n  },\n  root: {\n    width: \"100%\",\n    padding: theme.spacing(4, 0, 10, 0),\n  },\n}));\n\nfunction TenantReport() {\n  const { reportId } = useParams();\n  const { getReportStats, getUserInfoNoParams, getQuestionInfo } = useContext(\n    Context\n  );\n  const classes = useStyles();\n  const [questions, setQuestions] = useState();\n  // const [failedEntries, setFailedEntries] = useState();\n  const [tenantid, setTenantId] = useState();\n\n  useEffect(() => {\n    async function getResponse() {\n      try {\n        //attain account id of tenant\n        getUserInfoNoParams().then((response) => {\n          setTenantId(response.data.acc_id);\n        });\n\n        const questionsArray = await getReportStats(reportId).then(\n          (response) => {\n            console.log(response);\n            return response.data.FailedQuestions;\n          }\n        );\n\n        let questionInfoArray = [];\n\n        for (let j = 0; j < questionsArray.length; j++) {\n          let qnInfo = await getQuestionInfo(reportId, questionsArray[j]).then(\n            (response) => {\n              console.log(\"im here\");\n              console.log(response);\n              return response;\n            }\n          );\n          questionInfoArray.push(qnInfo);\n        }\n\n        if (questionInfoArray.length === questionsArray.length) {\n          console.log(questionInfoArray);\n          setQuestions(questionInfoArray);\n        }\n\n        // //attain failed entries\n        // const entryArray = await getReportStats(reportId).then((response) => {\n        //   console.log(response);\n        //   return response.data.Failed_Entries;\n        // });\n        // // console.log(entryArray);\n\n        // let entryInfoArray = [];\n\n        // for (let i = 0; i < entryArray.length; i++) {\n        //   // console.log(entryArray[i]);\n        //   // console.log(reportId);\n        //   let info = await getReportEntry(reportId, entryArray[i]).then(\n        //     (response) => {\n        //       // console.log(response);\n        //       return response;\n        //     }\n        //   );\n        //   entryInfoArray.push(info);\n        // }\n        // if (entryInfoArray.length === entryArray.length) {\n        //   console.log(entryInfoArray);\n        //   setFailedEntries(entryInfoArray);\n        // }\n      } catch (err) {\n        console.error(err);\n      }\n    }\n    getResponse();\n  }, []);\n\n  return (\n    <div>\n      {questions && tenantid ? (\n        <>\n          <Navbar />\n          <Box className={classes.header} textAlign=\"center\" boxShadow={1}>\n            <Typography variant=\"h5\">Report Non-Compliance Overview</Typography>\n          </Box>\n          <Box className={classes.reportBasicInfo}></Box>\n          <div className={classes.root}>\n            {questions.map((question) => {\n              const { data } = question;\n              let severity = data.severity / 1000000;\n              severity = Math.floor(severity);\n              let timeframe = \"\";\n              switch (severity) {\n                case 1:\n                  timeframe = \"3 weeks\";\n                  break;\n                case 2:\n                  timeframe = \"2 weeks\";\n                  break;\n                case 3:\n                  timeframe = \"1 week\";\n                  break;\n                case 4:\n                  timeframe = \"4 days\";\n                  break;\n                case 5:\n                  timeframe = \"1 day\";\n                  break;\n              }\n              return (\n                <TenantReportCard\n                  original_remarks={data.original_remarks}\n                  qn_id={data.qn_id}\n                  requirement={data.requirement}\n                  timeframe={timeframe}\n                  report_id={reportId}\n                  tenant_id={tenantid}\n                  current_qn_status={data.current_qn_status}\n                  severity={data.severity}\n                  image={data.images[0]}\n                />\n              );\n            })}\n          </div>\n        </>\n      ) : (\n        <Loading />\n      )}\n    </div>\n  );\n}\n\nexport default TenantReport;\n","/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/pages/AllChats.js",["285","286","287","288","289","290","291","292","293"],"import React, { useEffect, useContext, useState } from \"react\";\nimport {\n  Typography,\n  TextField,\n  Button,\n  FormGroup,\n  FormControl,\n  InputLabel,\n  Select,\n} from \"@material-ui/core\";\nimport {\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Dialog,\n  DialogContentText,\n} from \"@material-ui/core\";\n\nimport { Context } from \"../Context\";\nimport Navbar from \"../Navbar\";\nimport useStyles from \"../styles\";\nimport ChatCards from \"../components/ChatCards\";\n\nfunction Chat() {\n  const {\n    setAllChatsOfUserState,\n    allChatsOfUserState,\n    getAllChatsOfUser,\n    postCreateNewChat,\n    accountState,\n    chatSubmitState,\n    getAllAuditors,\n    getAllTenants,\n  } = useContext(Context);\n\n  const [allChatsState, setAllChatsState] = useState([]);\n  const [auditorIdState, setAuditorIdState] = useState(\"\");\n  const [tenantIdState, setTenantIdState] = useState(\"\");\n  const [dialogState, setDialogState] = useState(false);\n  const [allTenantsState, setAllTenantsState] = useState([]);\n\n  const [newTargetState, setNewTargetState] = useState(\"Select a tenant\");\n\n  const { role_id, acc_id } = accountState;\n  const styles = useStyles();\n  const chatsArray = [];\n\n  function openDialog() {\n    setDialogState(true);\n  }\n  function closeDialog() {\n    setDialogState(false);\n  }\n\n  function isAuditor() {\n    return role_id === \"Auditor\";\n  }\n\n  function handleNewTargetChange(target_user_string) {\n    setNewTargetState(target_user_string);\n    var target_id = target_user_string.split(\"-\")[1];\n    console.log(target_user_string);\n    console.log(target_id);\n    console.log(typeof acc_id); // Number\n    console.log(typeof target_id); // String\n    if (target_id === null) {\n      return; // If no target_id is entered: show alert\n    }\n    if (role_id === \"Auditor\") {\n      setAuditorIdState(acc_id);\n      setTenantIdState(target_id);\n    } else if (role_id == \"Tenant\") {\n      setTenantIdState(acc_id.toString()); // Number => String\n      setAuditorIdState(target_id); // String\n    } else {\n      console.log(\"Invalid auditor/tenant ID\");\n    }\n  }\n\n  useEffect(() => {\n    getAllTenants()\n      .then((response) => {\n        setAllTenantsState(response.data);\n        console.log(\"all tenants: \" + allTenantsState);\n      })\n      .catch(() => {\n        console.log(\"Failed to retrieve all tenants\");\n      });\n\n    async function getResponse() {\n      try {\n        await getAllChatsOfUser().then((response) => {\n          console.log(\"allChatsOfUser: \" + response.data);\n          setAllChatsOfUserState(response.data);\n        });\n      } catch {\n        console.log(\"Failed to retrive allChatsOfUser\");\n      }\n    }\n    getResponse();\n  }, [chatSubmitState]);\n\n  function handleCreateNewChatClick() {\n    console.log(\"Chat calling postNewChat\");\n    console.log(\"auditor id: \" + auditorIdState);\n    console.log(\"tenant id: \" + tenantIdState);\n    // If no tenant is selected\n    if (auditorIdState.length === 0 || tenantIdState.length === 0) {\n      openDialog();\n    } else {\n      postCreateNewChat(auditorIdState, tenantIdState);\n    }\n  }\n\n  return (\n    <main className={styles.main}>\n      <Navbar />\n\n      {isAuditor() ? (\n        <div className={styles.chat_edit}>\n          <Typography variant=\"subtitle1\" className={styles.contactlist_title}>\n            Select a tenant\n          </Typography>\n          <FormControl\n            variant=\"outlined\"\n            className={styles.chats_dialog_selector}\n          >\n            <Select\n              native\n              value={newTargetState}\n              onChange={(e) => handleNewTargetChange(e.target.value)}\n            >\n              {allTenantsState.map((tenant, index) => (\n                <option\n                  key={index}\n                  value={`${tenant.store_name}-${tenant.acc_id}`}\n                  id={tenant.acc_id}\n                >\n                  {tenant.branch_id} {tenant.store_name} {tenant.acc_id}\n                </option>\n              ))}\n            </Select>\n          </FormControl>\n\n          <Button\n            align=\"center\"\n            variant=\"outlined\"\n            color=\"secondary\"\n            className={styles.big_buttons}\n            onClick={() => handleCreateNewChatClick()}\n          >\n            Create Chat\n          </Button>\n        </div>\n      ) : null}\n\n      <br />\n      <div className={styles.chat_list}>\n        {allChatsOfUserState.map((chat, index) => {\n          return (\n            <React.Fragment key={index}>\n              <ChatCards chat={chat} />\n            </React.Fragment>\n          );\n        })}\n      </div>\n\n      <Dialog\n        className={styles.post_new_announcement_dialog}\n        open={dialogState}\n        onClose={closeDialog}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">\n          {\"Failed to create new chat\"}\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            Please enter a valid user ID\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={closeDialog} color=\"primary\">\n            Ok\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </main>\n  );\n}\n\nexport default Chat;\n","/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/pages/StoreReport.js",["294","295","296","297"],"import React, { useState, useEffect, useContext } from \"react\";\nimport Navbar from \"../Navbar\";\nimport { Context } from \"../Context\";\nimport { useParams } from \"react-router-dom\";\nimport List from \"@material-ui/core/List\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport ReportQuestion from \"../components/ReportQuestion\";\nimport Box from \"@material-ui/core/Box\";\nimport { Typography } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  header: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(2, 0, 2, 0),\n  },\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    padding: theme.spacing(4, 0, 10, 0),\n  },\n  list: {\n    width: \"100%\",\n    maxWidth: 800,\n    backgroundColor: theme.palette.background.paper,\n    display: \"flex\",\n    flexDirection: \"column\",\n\n    // alignItems: \"center\",\n  },\n}));\n\nfunction StoreReport() {\n  const classes = useStyles();\n  const { reportId } = useParams();\n  const { getReport, getQuestionInfo, getOriginalReport } = useContext(Context);\n  const [questions, setQuestions] = useState();\n\n  useEffect(() => {\n    async function storeReportAsync() {\n      try {\n        const reportQuestions = await getOriginalReport(reportId).then(\n          (response) => {\n            console.log(response);\n            return response.data;\n          }\n        );\n        setQuestions(reportQuestions);\n\n        const reportInfo = await getReport(reportId).then((response) => {\n          console.log(response.data);\n          return response.data;\n        });\n      } catch (err) {\n        console.log(err);\n      }\n    }\n    storeReportAsync();\n  }, []);\n  return (\n    <>\n      {questions && (\n        <div>\n          <Navbar />\n          <Box className={classes.header} textAlign=\"center\" boxShadow={1}>\n            <Typography variant=\"h5\">Full Report Overview</Typography>\n          </Box>\n          <div className={classes.root}>\n            <List dense className={classes.list}>\n              {questions.map((question, index) => {\n                const {\n                  qn_id,\n                  Requirement,\n                  images,\n                  remarks,\n                  status,\n                  severity,\n                } = question;\n                let severityVar = severity / 1000000;\n                severityVar = Math.floor(severityVar);\n                let timeframe = \"\";\n                switch (severityVar) {\n                  case 1:\n                    timeframe = \"3 weeks\";\n                    break;\n                  case 2:\n                    timeframe = \"2 weeks\";\n                    break;\n                  case 3:\n                    timeframe = \"1 week\";\n                    break;\n                  case 4:\n                    timeframe = \"4 days\";\n                    break;\n                  case 5:\n                    timeframe = \"1 day\";\n                    break;\n                }\n\n                return (\n                  <ReportQuestion\n                    key={qn_id}\n                    qn_id={qn_id}\n                    requirement={Requirement}\n                    images={images[0]}\n                    remarks={remarks}\n                    status={status}\n                    severity={timeframe}\n                  />\n                );\n              })}\n            </List>\n          </div>\n        </div>\n      )}\n    </>\n  );\n}\n\nexport default StoreReport;\n","/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/pages/Announcements.js",["298","299","300","301","302","303","304","305","306","307","308","309","310","311","312","313","314"],"import React, { useState, useContext, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Button,\n  IconButton,\n  TextField,\n  FormControl,\n  InputLabel,\n  Select,\n  Typography,\n  Grid,\n} from \"@material-ui/core\";\nimport {\n  InputAdornment,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Dialog,\n  DialogContentText,\n} from \"@material-ui/core\";\nimport SearchIcon from \"@material-ui/icons/Search\";\n\nimport Navbar from \"../Navbar\";\nimport useStyles from \"../styles\";\nimport { Context } from \"../Context\";\nimport NotificationRow from \"../components/NotificationRow\";\nimport LimitedNotificationRow from \"../components/LimitedNotificationRow\";\n\nconst Announcement = () => {\n  const styles = useStyles();\n  const {\n    accountState,\n    allAvailableNotificationsState,\n    getAllAvailableNotifications,\n    currentNotificationsState,\n    getNotificationByNotificationId,\n    chatSubmitState,\n  } = useContext(Context);\n\n  const [\n    displayedNotificationsState,\n    setDisplayedNotificationsState,\n  ] = useState([]);\n  const [rangeState, setRangeState] = useState(\"all\");\n  const [searchBarInputState, setSearchBarInputState] = useState(\"\");\n\n  const { role_id } = accountState;\n\n  function handleSearchBarChange(search_input) {\n    setSearchBarInputState(parseInt(search_input)); // String => Integer\n  }\n\n  function handleSearchButtonClick() {\n    console.log(\"Submitting search bar input: \" + searchBarInputState);\n    console.log(typeof searchBarInputState);\n    if (searchBarInputState < 1000 && searchBarInputState > 0) {\n      setRangeState(\"by_notification_id\");\n      console.log(\"Setting range to By Institution ID\");\n    } else if (searchBarInputState >= 1000) {\n      setRangeState(\"by_manager_id\");\n      console.log(\"Setting range to By Manager ID\");\n    } else {\n      setRangeState(\"all\");\n      console.log(\"Setting range to All\");\n    }\n    console.log(\"Searchbar input: \" + searchBarInputState);\n    console.log(\"Current range: \" + rangeState);\n  }\n\n  useEffect(() => {\n    async function getResponse() {\n      try {\n        await getAllAvailableNotifications().then((response) => {\n          console.log(\"All available notifications: \" + response.data);\n          setDisplayedNotificationsState(response.data);\n        });\n      } catch {\n        console.log(\"Failed to retrive allAvailableNotifications\");\n      }\n    }\n    getResponse();\n  }, [chatSubmitState]);\n\n  return (\n    <main className={styles.main}>\n      <Navbar />\n      <div className={styles.body}>\n        <TextField\n          className={styles.search_bar}\n          label=\"Search Notification ID/Creator ID\"\n          variant=\"outlined\"\n          InputProps={{\n            endAdornment: (\n              <InputAdornment>\n                <IconButton onClick={handleSearchButtonClick}>\n                  <SearchIcon />\n                </IconButton>\n              </InputAdornment>\n            ),\n          }}\n          onChange={(e) => handleSearchBarChange(e.target.value)}\n        />\n        <div className={styles.annoucement_title_div}>\n          <Typography variant=\"h6\" className={styles.annoucement_title}>\n            Announcements\n          </Typography>\n        </div>\n        <div className={styles.announcement_list}>\n          {displayedNotificationsState.map((notification, index) => {\n            if (rangeState === \"all\") {\n              return (\n                <LimitedNotificationRow\n                  notification={notification}\n                  key={index}\n                />\n              );\n            } else if (\n              rangeState === \"by_notification_id\" &&\n              notification.notification_id === searchBarInputState\n            ) {\n              return (\n                <LimitedNotificationRow\n                  notification={notification}\n                  key={index}\n                />\n              );\n            } else if (\n              rangeState === \"by_manager_id\" &&\n              notification.creator_id === searchBarInputState\n            ) {\n              return (\n                <LimitedNotificationRow\n                  notification={notification}\n                  key={index}\n                />\n              );\n            } else {\n              return null;\n            }\n          })}\n        </div>\n      </div>\n    </main>\n  );\n};\n\nexport default Announcement;\n","/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/pages/AuditEmail.js",["315","316","317","318","319"],"import React, { useState, useEffect, useContext } from \"react\";\nimport Navbar from \"../Navbar\";\nimport emailjs from \"emailjs-com\";\nimport Box from \"@material-ui/core/Box\";\nimport { useParams } from \"react-router-dom\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport { Context } from \"../Context\";\nimport Loading from \"./Loading\";\nimport ReactHtmlParser from \"react-html-parser\";\n\nconst useStyles = makeStyles((theme) => ({\n  header: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(2, 0, 2, 0),\n  },\n  emailFields: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    padding: theme.spacing(2, 0, 0, 0),\n  },\n  field: {\n    maxWidth: 800,\n    width: \"80%\",\n    margin: theme.spacing(2, 0, 0, 0),\n  },\n  buttonSubmit: {\n    margin: theme.spacing(8, 0, 0, 0),\n    width: 240,\n    // color: \"#F15A22\",\n    fontWeight: \"medium\",\n    backgroundColor: \"#F15A22\",\n  },\n}));\n\nfunction AuditEmail() {\n  const classes = useStyles();\n  const { reportId } = useParams();\n  const [toEmail, setToEmail] = useState(\"\");\n  const [checklistReport, setChecklistReport] = useState(\"\");\n  const [toName, setToName] = useState(\"\");\n  const [storeName, setStoreName] = useState(\"\");\n  const [checklistType, setChecklistType] = useState();\n  const [dateOfAudit, setDateOfAudit] = useState(\"\");\n  const [score, setScore] = useState(\"\");\n  const [images, setImages] = useState();\n\n  const { getReport, getQuestionInfo, getOriginalReport } = useContext(Context);\n\n  //entry fields needed:\n  //1. qn_id\n  //2. images\n  //  3. remarks\n  //  4. severity / timeframe\n  //  5. status\n  // 6. requirement\n\n  useEffect(() => {\n    async function emailAsync() {\n      try {\n        const reportQuestions = await getOriginalReport(reportId).then(\n          (response) => {\n            console.log(response);\n            return response.data;\n          }\n        );\n\n        const reportInfo = await getReport(reportId).then((response) => {\n          console.log(response.data);\n          return response.data;\n        });\n\n        let checklistString = \"\";\n        let imagesString = \"\";\n        let completedChecklist;\n        let completedImages;\n        let count = 0;\n        for (let i = 0; i < reportQuestions.length; i++) {\n          // for (let i = 0; i < 50; i++) {\n          let severity = reportQuestions[i].severity;\n          severity /= 1000000;\n          severity = Math.floor(severity);\n          let timeframe = \"\";\n          switch (severity) {\n            case 1:\n              timeframe = \"3 weeks\";\n              break;\n            case 2:\n              timeframe = \"2 weeks\";\n              break;\n            case 3:\n              timeframe = \"1 week\";\n              break;\n            case 4:\n              timeframe = \"4 days\";\n              break;\n            case 5:\n              timeframe = \"1 day\";\n              break;\n          }\n          checklistString +=\n            reportQuestions[i].status === \"PASS\"\n              ? `<br/>\n          <span>\n          ${reportQuestions[i].qn_id}. ${reportQuestions[i].Requirement}\n          \n          <br/>\n\n          \n          \n          Status: Passed\n          \n          <br/>`\n              : `<br/>\n          <span style=\"color: #F15A22; font-weight: bold\">\n          ${reportQuestions[i].qn_id}. ${reportQuestions[i].Requirement}\n          \n          <br/>\n          \n          Remarks: ${reportQuestions[i].remarks}\n          \n          <br/>\n          \n          Retification Period: ${timeframe}\n          \n          <br />\n          \n          Status: Failed\n          </span>\n          \n          \n          \n          <br /> `;\n\n          imagesString +=\n            reportQuestions[i].status === \"PASS\"\n              ? ``\n              : `<br /><img style=\"width: 400px; height:auto\" src=\"${reportQuestions[i].images[0]}\" alt=\"Photo of non-compliance\" /> <br />`;\n          count++;\n        }\n        console.log(checklistString);\n        if (count === reportQuestions.length) {\n          completedChecklist = `<div>${checklistString}</div>`;\n          completedImages = `<div>${imagesString}</div>`;\n        }\n\n        if (count === reportQuestions.length && completedChecklist) {\n          setChecklistReport(completedChecklist);\n          setImages(completedImages);\n        }\n        // setChecklistReport(``);\n        setStoreName(reportInfo.store_name);\n        setChecklistType(reportInfo.report_type);\n        setDateOfAudit(new Date(reportInfo.open_date).toString());\n        setScore(reportInfo.overall_score);\n      } catch (err) {\n        console.log(err);\n      }\n    }\n\n    emailAsync();\n  }, []);\n\n  //emailjs function\n  function sendEmail() {\n    emailjs\n      .send(\n        \"service_1xo642c\",\n        \"checklist_template\",\n        {\n          to_email: toEmail,\n          to_name: toName,\n          store_name: storeName,\n          checklist_type: checklistType,\n          date: dateOfAudit,\n          score: score,\n          checklist: checklistReport,\n        },\n        \"user_Y6aBIfzMOeWunufHbkvwx\"\n      )\n      .then(\n        (result) => {\n          console.log(result.text);\n        },\n        (error) => {\n          console.log(error.text);\n        }\n      );\n\n    emailjs\n      .send(\n        \"service_1xo642c\",\n        \"image_template\",\n        {\n          to_email: toEmail,\n          to_name: toName,\n          store_name: storeName,\n          checklist_type: checklistType,\n          date: dateOfAudit,\n          score: score,\n          images: images,\n        },\n        \"user_Y6aBIfzMOeWunufHbkvwx\"\n      )\n      .then(\n        (result) => {\n          console.log(result.text);\n        },\n        (error) => {\n          console.log(error.text);\n        }\n      );\n  }\n  const handleToEmail = (e) => {\n    setToEmail(e.target.value);\n  };\n\n  const handleToName = (e) => {\n    setToName(e.target.value);\n  };\n\n  return (\n    <div>\n      {checklistReport && images ? (\n        <>\n          <Navbar />\n          <Box className={classes.header} textAlign=\"center\" boxShadow={1}>\n            <Typography variant=\"h5\">Set Email Fields</Typography>\n          </Box>\n          {/* <form className={classes.emailFields} onSubmit={sendEmail}> */}\n          <form className={classes.emailFields}>\n            <TextField\n              className={classes.field}\n              id=\"standard-basic\"\n              label=\"Key in recipient email address\"\n              name=\"to_email\"\n              autoFocus={true}\n              required={true}\n              onChange={(e) => {\n                handleToEmail(e);\n              }}\n              value={toEmail}\n            />\n            <TextField\n              className={classes.field}\n              id=\"standard-basic\"\n              label=\"Key in name of recipient\"\n              name=\"to_name\"\n              required={true}\n              onChange={(e) => {\n                handleToName(e);\n              }}\n              value={toName}\n              readOnly\n            />\n            <TextField\n              className={classes.field}\n              id=\"standard-basic\"\n              label=\"Store Name\"\n              name=\"store_name\"\n              value={storeName}\n              readOnly\n            />\n            <TextField\n              className={classes.field}\n              id=\"standard-basic\"\n              label=\"Checklist Type\"\n              name=\"checklist_type\"\n              value={checklistType}\n              readOnly\n            />\n            <TextField\n              className={classes.field}\n              id=\"standard-basic\"\n              label=\"Date of Conducted Audit\"\n              name=\"date\"\n              value={dateOfAudit}\n              readOnly\n            />\n            <TextField\n              className={classes.field}\n              id=\"standard-basic\"\n              label=\"Audit Score\"\n              name=\"score\"\n              value={score}\n              readOnly\n            />\n            {/* <TextField\n              className={classes.field}\n              id=\"standard-basic\"\n              label=\"Checklist\"\n              name=\"checklist\"\n              value={ReactHtmlParser(checklistReport)}\n              readOnly\n            >\n              <>{ReactHtmlParser(checklistReport)}</>\n            </TextField> */}\n            {/* <div>{ReactHtmlParser(checklistReport)}</div> */}\n\n            {/* <input type=\"submit\" value=\"Send\"> */}\n            <Button\n              // type=\"submit\"\n              className={classes.buttonSubmit}\n              variant=\"contained\"\n              color=\"primary\"\n              size=\"large\"\n              onClick={() => {\n                sendEmail();\n              }}\n              color=\"secondary\"\n            >\n              send email\n            </Button>\n            {/* </input> */}\n          </form>{\" \"}\n        </>\n      ) : (\n        <Loading />\n      )}\n    </div>\n  );\n}\n\nexport default AuditEmail;\n","/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/components/LimitedNotificationRow.js",["320","321","322","323","324","325","326","327","328","329","330","331","332","333"],"import React, { useState, useContext } from \"react\";\nimport { Button, TextField, FormControl, InputLabel, Select, Typography, Grid } from \"@material-ui/core\";\nimport { DialogActions, DialogContent, DialogTitle, Dialog, DialogContentText } from \"@material-ui/core\";\n\nimport useStyles from \"../styles\";\nimport { Context } from \"../Context\"\nimport { toValidFormat } from \"../components/utils\";\n\nconst LimitedNotificationRow = (props) => {\n\n  const styles = useStyles();\n\n  return (\n    <React.Fragment>\n      <div className={styles.announcement_bubble}>\n        <Grid item xs={12} sm container>\n          <Grid item xs container direction=\"column\" spacing={2}>\n            <Grid item xs>\n              <Typography variant=\"subtitle2\" color=\"textSecondary\">{props.notification.title}</Typography>\n              <Typography variant=\"body1\">{props.notification.message}</Typography>\n            </Grid>\n          </Grid>\n          <Grid item>\n            <Typography variant=\"body2\" color=\"textSecondary\">Announcement ID: {props.notification.notification_id}</Typography>\n            <Typography variant=\"body2\" color=\"textSecondary\">Posted by {props.notification.creator_id} on {props.notification.receipt_date}</Typography>\n            <Typography variant=\"body2\" color=\"textSecondary\">Valid period: {props.notification.receipt_date} to {props.notification.end_date}</Typography>\n          </Grid>\n        </Grid>\n      </div>\n    </React.Fragment>\n  )\n}\n\nexport default LimitedNotificationRow;","/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/components/ReportQuestion.js",["334"],"import React from \"react\";\nimport Accordion from \"@material-ui/core/Accordion\";\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport { Typography } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  dropdownContainer: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    // alignItems: \"center\",\n    padding: theme.spacing(0, 0, 3, 8),\n    // color: \"#F15A22\",\n  },\n  imageFromAuditor: {\n    width: \"70%\",\n    maxWidth: 400,\n    padding: theme.spacing(2, 0, 0, 0),\n  },\n  passedLabel: {\n    color: \"#03A762\",\n  },\n  failedLabel: {\n    color: \"#F15A22\",\n  },\n}));\n\nfunction ReportQuestion({\n  qn_id,\n  requirement,\n  images,\n  remarks,\n  status,\n  severity,\n}) {\n  const classes = useStyles();\n\n  return (\n    <div>\n      <Accordion>\n        <AccordionSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-label=\"Expand\"\n          aria-controls=\"additional-actions1-content\"\n          id=\"additional-actions1-header\"\n        >\n          <ListItem>\n            <ListItemText id={qn_id} primary={requirement}></ListItemText>\n          </ListItem>\n          {status === \"PASS\" && (\n            // <ListItemText className={classes.titleResolved}>\n            <Typography variant=\"button\" className={classes.passedLabel}>\n              PASSED\n            </Typography>\n            // </ListItemText>\n          )}\n          {status === \"FAIL\" && (\n            // <ListItemText className={classes.titleResolved}>\n            <Typography variant=\"button\" className={classes.failedLabel}>\n              FAILED\n            </Typography>\n            // </ListItemText>\n          )}\n        </AccordionSummary>\n        <AccordionDetails className={classes.dropdownContainer}>\n          <Typography variant=\"button\">Remarks : {remarks}</Typography>\n          <Typography variant=\"button\">Severity : {severity}</Typography>\n          {images && <img src={images} className={classes.imageFromAuditor} />}\n        </AccordionDetails>\n      </Accordion>\n    </div>\n  );\n}\n\nexport default ReportQuestion;\n","/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/components/ChatCards.js",["335","336","337","338","339","340"],"import React, { useContext, useEffect, useState } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport { Button, Grid, FormGroup, Typography } from \"@material-ui/core\";\n\nimport useStyles from \"../styles\";\nimport { Context } from \"../Context\";\n\nconst ChatCards = (props) => {\n  const styles = useStyles();\n  const test = 147;\n  const [targetUserState, setTargetUserState] = useState({});\n  const { getUserInfo, accountState, chatSubmitState } = useContext(Context);\n\n  // Handle chat target role type (Auditor/Tenant) and target user_id\n  var target_role = \"Tenant\";\n  var target_id;\n  if (accountState.role_id === \"Auditor\") {\n    target_role = \"Tenant\";\n    target_id = props.chat.tenant_id.toString();\n  } else if (accountState.role_id === \"Tenant\") {\n    target_role = \"Auditor\";\n    target_id = props.chat.auditor_id.toString();\n  }\n\n  useEffect(() => {\n    getUserInfo(target_id)\n      .then((response) => {\n        setTargetUserState(response.data);\n      })\n      .catch(() => {\n        console.log(\"Failed to retrieve tenant info\");\n      });\n  }, []);\n\n  return (\n    // <NavLink to={{pathname: `/chat/${props.chat.chat_id}/${targetUserState.store_name}/${targetUserState.acc_id}`, test: test}}>\n    <NavLink to={{ pathname: `/chat/${props.chat.chat_id}`, test: test }}>\n      <Button className={styles.chat_bubble}>\n        <Typography variant=\"subtitle1\">{targetUserState.branch_id}</Typography>\n        <Typography variant=\"subtitle1\">\n          {targetUserState.store_name}\n        </Typography>\n        <Typography variant=\"body2\" color=\"textSecondary\">\n          {target_role} ID: {target_id}\n        </Typography>\n        <Typography variant=\"body2\" color=\"textSecondary\">\n          {targetUserState.username}\n        </Typography>\n        <Typography variant=\"body2\" color=\"textSecondary\">\n          Chat ID: {props.chat.chat_id}\n        </Typography>\n      </Button>\n    </NavLink>\n  );\n};\n\nexport default ChatCards;\n","/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/components/NotificationRow.js",["341"],"import React, { useState, useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Button, TextField, FormControl, InputLabel, Select, Typography, Grid } from \"@material-ui/core\";\nimport { DialogActions, DialogContent, DialogTitle, Dialog, DialogContentText } from \"@material-ui/core\";\n\nimport useStyles from \"../styles\";\nimport { Context } from \"../Context\"\nimport { toValidFormat } from \"../components/utils\";\n\n// props.notification\nconst NotificationRow = (props) => {\n\n  const notification = props.notification;\n  const styles = useStyles();\n  const { \n    postModifyNotification,\n    deleteNotification,\n  } = useContext(Context);\n\n  // States for modifying announcement\n  const [titleState, setTitleState] = useState(notification.title);\n  const [messageState, setMessageState] = useState(notification.message);\n  const [receiptDateState, setReceiptDateState] = useState(toValidFormat(notification.receipt_date)); // Default today\n  const [endDateState, setEndDateState] = useState(toValidFormat(notification.end_date)); // Default one month later\n  const [receiversState, setReceiversState] = useState(notification.to_role_ids); // Default all users\n\n  // States for dialogs\n  const [modifyDialogState, setModifyDialogState] = useState(false);\n  const [deleteDialogState, setDeleteDialogState] = useState(false);\n  const [tipDialogState, setTipDialogState] = useState(false);\n  const [successDialogState, setSuccessDialogState] = useState(false);\n\n  // Functions for dialogs\n  function openModifyDialog() {setModifyDialogState(true);}\n  function closeModifyDialog() {setModifyDialogState(false);}\n  function openDeleteDialog() {setDeleteDialogState(true);}\n  function closeDeleteDialog() {setDeleteDialogState(false);}\n  function openTipDialog() {setTipDialogState(true);}\n  function closeTipDialog() {setTipDialogState(false);}\n  function openSuccessDialog() {setSuccessDialogState(true);}\n  function closeSuccessDialog() {setSuccessDialogState(false);}\n\n  function handleTitleChange(input_title) {setTitleState(input_title);}\n  function handleMessageChange(input_message) {setMessageState(input_message);}\n  function handleReceiptDateChange(input_date) {setReceiptDateState(input_date);}\n  function handleEndDateChange(input_date) {setEndDateState(input_date);}\n  function handleReceiverChange(input_receiver) {setReceiversState(parseInt(input_receiver));}\n\n  function modifyPastAnnouncement(notification_id) {\n    console.log(\"Modifying announcement...\");\n    console.log(notification_id);\n    console.log(titleState);\n    console.log(messageState);\n    console.log(receiptDateState);\n    console.log(endDateState);\n    console.log(receiversState);\n    postModifyNotification(notification_id, titleState, messageState, receiptDateState, endDateState, receiversState);\n    openSuccessDialog();\n  }\n\n  function deleteAnnouncement(notification_id) {\n    console.log(\"Deleting announcement...\");\n    deleteNotification(notification_id);\n  }\n\n  // Handle button clicks\n  function handleModifyAnnouncementClick() {\n    console.log(\"Modifying existing announcement...\");\n    openModifyDialog();\n  }\n  function handleDeleteAnnouncementClick() {\n    console.log(\"Deleting existing announcement...\");\n    openDeleteDialog();\n  }\n  function handleTipClick() {\n    console.log(\"Openning accouncement tips...\");\n    openTipDialog();\n  }\n  function handleSuccessClick() {\n    console.log(\"Success dialog click...\");\n    closeSuccessDialog();\n    closeModifyDialog();\n    closeDeleteDialog();\n  }\n\n  return (\n    <React.Fragment>\n      <div className={styles.announcement_bubble}>\n        <Grid item xs={12} sm container>\n          <Grid item xs container direction=\"column\" spacing={2}>\n            <Grid item xs>\n              <Typography variant=\"subtitle2\" color=\"textSecondary\">{notification.title}</Typography>\n              <Typography variant=\"body1\">{notification.message}</Typography>\n            </Grid>\n          </Grid>\n          <Grid item>\n            <Typography variant=\"body2\" color=\"textSecondary\">Announcement ID: {notification.notification_id}</Typography>\n            <Typography variant=\"body2\" color=\"textSecondary\">Posted by {notification.creator_id} on {notification.receipt_date}</Typography>\n            <Typography variant=\"body2\" color=\"textSecondary\">Valid period: {notification.receipt_date} to {notification.end_date}</Typography>\n            <Button className={styles.buttons} variant=\"outlined\" color=\"primary\" onClick={handleModifyAnnouncementClick}>Modify</Button>\n            <Button className={styles.buttons} variant=\"outlined\" color=\"secondary\" onClick={handleDeleteAnnouncementClick}>Delete</Button>\n          </Grid>\n        </Grid>\n\n        {/* Dialog used to modify announcement */}\n        <Dialog\n          className={styles.post_new_announcement_dialog}\n          open={modifyDialogState}\n          onClose={closeModifyDialog}\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n        >\n          <DialogTitle id=\"alert-dialog-title\">{\"Modify Announcement\"}</DialogTitle>\n          <DialogContent>\n            <TextField className={styles.new_announcement_input} value={titleState} label=\"Title\" variant=\"outlined\" onChange={(e) => handleTitleChange(e.target.value)}/>\n            <TextField className={styles.new_announcement_input} value={messageState} label=\"Message\" variant=\"outlined\" onChange={(e) => handleMessageChange(e.target.value)}/>\n            <TextField className={styles.new_announcement_input} value={receiptDateState} label=\"Receipt Date\" variant=\"outlined\" onChange={(e) => handleReceiptDateChange(e.target.value)}/>\n            <TextField className={styles.new_announcement_input} value={endDateState} label=\"End Date\" variant=\"outlined\" onChange={(e) => handleEndDateChange(e.target.value)}/>\n            <FormControl variant=\"outlined\" className={styles.dialog_selector}>\n              <InputLabel>Receivers</InputLabel>\n              <Select native label=\"Receivers\" value={receiversState} onChange={(e) => handleReceiverChange(e.target.value)}>\n                <option value={7}>All users</option>\n                <option value={5}>Manager and Tenant</option>\n                <option value={6}>Auditor and Tenant</option>\n                <option value={2}>Only Auditor</option>\n                <option value={4}>Only Tenant</option>\n              </Select>\n            </FormControl>\n          </DialogContent>\n          <DialogContent>\n            <Button className={styles.dialog_link} onClick={handleTipClick}>Tips</Button>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={closeModifyDialog} color=\"secondary\">Cancel</Button>\n            <Button onClick={() => modifyPastAnnouncement(notification.notification_id)} color=\"primary\">Continue</Button>\n          </DialogActions>\n        </Dialog>\n\n        {/* Dialog used to delete announcement */}\n        <Dialog\n          className={styles.post_new_announcement_dialog}\n          open={deleteDialogState}\n          onClose={closeDeleteDialog}\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n        >\n          <DialogTitle id=\"alert-dialog-title\">{\"Alert\"}</DialogTitle>\n          <DialogContent>\n            <DialogContentText id=\"alert-dialog-description\">Confirm to delete this announcement?</DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={closeDeleteDialog} color=\"primary\">Cancel</Button>\n            <Button onClick={() => deleteAnnouncement(notification.notification_id)} color=\"secondary\">Confirm</Button>\n          </DialogActions>\n        </Dialog>\n\n        {/* Dialog used to show tips */}\n        <Dialog\n          className={styles.post_new_announcement_dialog}\n          open={tipDialogState}\n          onClose={closeTipDialog}\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n        >\n          <DialogTitle id=\"alert-dialog-title\">{\"Tips\"}</DialogTitle>\n          <DialogContent>\n            <DialogContentText id=\"alert-dialog-description\">How to create new announcements?</DialogContentText>\n            <DialogContentText id=\"alert-dialog-description\">* \"Title\" and \"Message\" is where you should post your announcement information</DialogContentText>\n            <DialogContentText id=\"alert-dialog-description\">* \"Receipt Date\" is the day when the receipients should start to see the announcement</DialogContentText>\n            <DialogContentText id=\"alert-dialog-description\">* \"End Date\" is the day when the recipients should stop getting the notification</DialogContentText>\n            <DialogContentText id=\"alert-dialog-description\">* \"Receivers\" indicates the range of receipients who can see the announcement.</DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={closeTipDialog} color=\"primary\">Ok</Button>\n          </DialogActions>\n        </Dialog>\n\n        {/* Dialog used to proceed post/delete upon success */}\n        <Dialog\n          className={styles.post_new_announcement_dialog}\n          open={successDialogState}\n          onClose={closeSuccessDialog}\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n        >\n          <DialogTitle id=\"alert-dialog-title\">{\"Changes updated!\"}</DialogTitle>\n          <DialogContent>\n            <DialogContentText id=\"alert-dialog-description\">Your changes have been updated</DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={handleSuccessClick} color=\"primary\">Ok</Button>\n          </DialogActions>\n        </Dialog>\n\n      </div>\n    </React.Fragment>\n  );\n}\n\nexport default NotificationRow;","/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/components/TenantReportCard.js",["342","343","344","345"],"import React, { useState, useContext, useEffect } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Context } from \"../Context\";\nimport Accordion from \"@material-ui/core/Accordion\";\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\nimport Loading from \"../pages/Loading\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport Box from \"@material-ui/core/Box\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport PhotoCamera from \"@material-ui/icons/PhotoCamera\";\nimport { Typography } from \"@material-ui/core\";\nimport MessageIcon from \"@material-ui/icons/Message\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\n\nconst useStyles = makeStyles((theme) => ({\n  mainContainer: {\n    display: \"flex\",\n    justifyContent: \"center\",\n  },\n  accordion: {\n    width: \"90%\",\n    maxWidth: 900,\n  },\n  titleResolved: {\n    padding: theme.spacing(0, 2, 0, 2),\n    color: \"#F15A22\",\n  },\n  commentBox: {\n    maxWidth: 800,\n    width: \"100%\",\n    // padding: theme.spacing(0, 0, 2, 2),\n  },\n  comment: {\n    width: \"100%\",\n  },\n  dropdownMain: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    padding: theme.spacing(0, 6, 0, 6),\n  },\n  dropdownContainer: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    // margin: theme.spacing(0, 0, 0, 2),\n  },\n  imageFromAuditor: {\n    width: \"70%\",\n    maxWidth: 400,\n    padding: theme.spacing(0, 0, 3, 0),\n  },\n  textInfo: {\n    padding: theme.spacing(2, 0, 2, 0),\n    color: \"#F15A22\",\n  },\n  topText: {\n    color: \"#F15A22\",\n  },\n  textTenant: {\n    padding: theme.spacing(1, 0, 2, 2),\n    fontWeight: \"medium\",\n  },\n  tenantInstructions: {\n    display: \"flex\",\n    padding: theme.spacing(2, 2, 2, 0),\n  },\n\n  tenantResponse: {\n    display: \"flex\",\n    width: \"100%\",\n    // backgroundColor: theme.palette.background.default,\n  },\n  avatar: {},\n  // button: {\n  //   width: \"50%\",\n  //   color: \"#F15A22\",\n  //   fontWeight: \"medium\",\n  //   backgroundColor: theme.palette.background.default,\n  // },\n  // buttonContainer: {\n  //   padding: theme.spacing(4, 0, 4, 0),\n  //   display: \"flex\",\n  //   justifyContent: \"center\",\n  // },\n  input: {\n    display: \"none\",\n  },\n  camera: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    //   alignItems: \"center\",\n  },\n  uploadText: {\n    padding: theme.spacing(0, 1, 0, 2),\n  },\n  image: {\n    width: \"90%\",\n    maxWidth: 400,\n    // padding: theme.spacing(4, 0, 2, 0),\n  },\n  buttonSubmit: {\n    width: 240,\n    // color: \"#F15A22\",\n    fontWeight: \"medium\",\n    backgroundColor: \"#F15A22\",\n  },\n  buttonSubmitContainer: {\n    padding: theme.spacing(4, 0, 4, 0),\n    display: \"flex\",\n\n    // justifyContent: \"center\",\n  },\n  prevResponses: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  prevResponseContainer: {\n    margin: theme.spacing(4, 0, 6, 0),\n    padding: theme.spacing(5, 5, 5, 5),\n    backgroundColor: theme.palette.background.default,\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    width: \"90%\",\n    maxWidth: 500,\n  },\n  prevResponseTitle: {\n    display: \"flex\",\n\n    // padding: theme.spacing(2, 0, 2, 2),\n    backgroundColor: theme.palette.background.default,\n  },\n  prevResponseTitleText: {\n    padding: theme.spacing(1, 0, 2, 0),\n  },\n  prevResponseContent: {\n    // padding: theme.spacing(2, 0, 2, 2),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  prevResponseText: {\n    padding: theme.spacing(2, 0, 4, 0),\n  },\n}));\n\nfunction TenantReportCard({\n  original_remarks,\n  qn_id,\n  requirement,\n  timeframe,\n  report_id,\n  tenant_id,\n  current_qn_status,\n  severity,\n  image,\n}) {\n  const classes = useStyles();\n  const [comment, setComment] = useState(\"\");\n  //selected file state\n  // const [selectedFile, setSelectedFile] = useState();\n  const [imageState, setImageState] = useState([]);\n  const [tenantResponse, setTenantResponse] = useState();\n\n  //state to check if file is selected\n  // const [isFilePicked, setIsFilePicked] = useState(false);\n\n  const {\n    getReportEntry,\n    submitReportUpdate,\n    getTenantRectification,\n  } = useContext(Context);\n\n  //call when component mounts\n  useEffect(() => {\n    async function getResponse() {\n      try {\n        //GET REPORT TYPE\n\n        //GET TENANT RECTIFICATION RESPONSES\n        getTenantRectification(report_id, tenant_id, qn_id)\n          .then((response) => {\n            console.log(response.data.entries);\n\n            setTenantResponse(response.data.entries);\n          })\n          .catch((error) => {\n            console.log(error);\n          });\n        // console.log(tenantEntry);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    getResponse();\n  }, []);\n\n  //function to update comment state\n  const handleComment = (e) => {\n    setComment(e.target.value);\n  };\n\n  //function to handle input file change\n  const handleChange = (e) => {\n    const getBase64 = (file) => {\n      return new Promise((resolve, reject) => {\n        const reader = new FileReader();\n\n        if (file) {\n          reader.readAsDataURL(file);\n        }\n\n        reader.onload = () => resolve(reader.result);\n        reader.onerror = (error) => reject(error);\n      });\n    };\n\n    getBase64(e.target.files[0]).then((image) => {\n      setImageState(image);\n    });\n  };\n\n  const createEntry = (\n    questionId,\n    currentStatus,\n    image,\n    remark,\n    severityLevel\n  ) => {\n    let array = [];\n    array.push({\n      qn_id: questionId,\n      status: currentStatus === \"PASS\" ? true : false,\n      severity: severityLevel,\n      remarks: remark,\n      images: image,\n    });\n    return array;\n  };\n\n  //handle submit\n  const handleSubmit = () => {\n    // console.log(testState);\n    // console.log(imageState);\n\n    async function submitAsync() {\n      const entry = await createEntry(\n        qn_id,\n        current_qn_status,\n        [imageState],\n        comment,\n        severity\n      );\n      console.log(entry);\n      // console.log(imageState);\n\n      submitReportUpdate(report_id, false, \"\", entry[0]);\n\n      alert(\"Rectification submitted. Pending Approval\");\n    }\n    submitAsync();\n\n    // async function getEntry() {\n    //   const entry = await getReportEntry(report_id, entry_id).then(\n    //     (response) => {\n    //       console.log(response.data);\n    //       return response.data;\n    //     }\n    //   );\n\n    // submitReportUpdate(report_id, false, \"\", {\n    //   ...entry,\n    //   images: [imageState],\n    //   remarks: comment,\n    // });\n\n    // alert(\"Rectification submitted. Pending Approval\");\n    // }\n    // getEntry();\n  };\n\n  return (\n    <div className={classes.mainContainer}>\n      {tenantResponse ? (\n        <Accordion className={classes.accordion}>\n          <AccordionSummary\n            expandIcon={<ExpandMoreIcon />}\n            aria-label=\"Expand\"\n            aria-controls=\"additional-actions1-content\"\n            id=\"additional-actions1-header\"\n            // id={`additional-actions1-header${entry_id}`}\n          >\n            <ListItem>\n              <ListItemText id={qn_id} primary={requirement} />\n              {current_qn_status === \"PASS\" && (\n                <ListItemText className={classes.titleResolved}>\n                  <Typography variant=\"button\">Resolved</Typography>\n                </ListItemText>\n              )}\n            </ListItem>\n          </AccordionSummary>\n          <AccordionDetails className={classes.dropdownMain}>\n            <div className={classes.dropdownContainer}>\n              <Typography\n                color=\"textSecondary\"\n                variant=\"button\"\n                className={classes.topText}\n              >\n                REMARKS: {original_remarks}\n              </Typography>\n\n              <Typography\n                color=\"textSecondary\"\n                variant=\"button\"\n                className={classes.textInfo}\n              >\n                RECTIFICATION PERIOD: {timeframe}\n              </Typography>\n              {image && (\n                <img src={image} className={classes.imageFromAuditor} />\n              )}\n            </div>\n\n            {current_qn_status === \"FAIL\" && (\n              <>\n                <div className={classes.tenantInstructions}>\n                  <Avatar src=\"/broken-image.jpg\" className={classes.avatar} />\n                  <Typography\n                    color=\"textPrimary\"\n                    className={classes.textTenant}\n                  >\n                    Please respond to non-compliance below:\n                  </Typography>\n                </div>\n                <div className={classes.tenantResponse}>\n                  <TextField\n                    id=\"standard-multiline-static\"\n                    placeholder=\"Comment on rectification to non-compliance\"\n                    multiline\n                    value={comment}\n                    className={classes.comment}\n                    onChange={(e) => {\n                      handleComment(e);\n                    }}\n                  />\n                  <input\n                    // accept=\"image/*\"\n                    className={classes.input}\n                    id={`icon-button-file${qn_id}`}\n                    // id=\"icon-button-file\"\n                    name={`file${qn_id}`}\n                    type=\"file\"\n                    // value={null}\n                    // name=\"picture\"\n                    onClick={(e) => {\n                      e.target.value = \"\";\n                    }}\n                    onChange={(e) => {\n                      handleChange(e);\n                    }}\n                  />\n                  <label\n                    htmlFor={`icon-button-file${qn_id}`}\n                    // htmlFor=\"icon-button-file\"\n                    className={classes.camera}\n                  >\n                    <IconButton\n                      color=\"primary\"\n                      aria-label=\"upload picture\"\n                      component=\"span\"\n                    >\n                      <Typography\n                        variant=\"button\"\n                        className={classes.uploadText}\n                      >\n                        Upload photo\n                      </Typography>\n                      <PhotoCamera />\n                    </IconButton>\n                  </label>\n                </div>\n                <div className={classes.buttonSubmitContainer}>\n                  <Button\n                    className={classes.buttonSubmit}\n                    variant=\"contained\"\n                    color=\"primary\"\n                    size=\"large\"\n                    onClick={() => {\n                      handleSubmit();\n                    }}\n                    // color=\"secondary\"\n                  >\n                    submit\n                  </Button>\n                </div>{\" \"}\n              </>\n            )}\n            {tenantResponse.map((response) => {\n              const { remarks, images } = response;\n\n              return (\n                <div className={classes.prevResponses}>\n                  <Box className={classes.prevResponseContainer} boxShadow={3}>\n                    <div className={classes.prevResponseTitle}>\n                      <Avatar\n                        src=\"/broken-image.jpg\"\n                        className={classes.avatar}\n                      />\n                      <ListItemIcon>\n                        <MessageIcon color=\"primary\" />\n                      </ListItemIcon>\n                      <Typography\n                        color=\"textPrimary\"\n                        className={classes.prevResponseTitleText}\n                      >\n                        Your Previous Response:\n                      </Typography>\n                    </div>\n                    <div className={classes.prevResponseContent}>\n                      <Typography\n                        color=\"textPrimary\"\n                        // variant=\"h8\"\n                        className={classes.prevResponseText}\n                        variant=\"caption\"\n                      >\n                        {remarks}\n                      </Typography>\n                      {images.length !== 0 && (\n                        <img src={images[0]} className={classes.image}></img>\n                      )}\n                    </div>\n                  </Box>\n                </div>\n              );\n            })}\n          </AccordionDetails>\n        </Accordion>\n      ) : (\n        <Loading />\n      )}\n    </div>\n  );\n}\n\nexport default TenantReportCard;\n","/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/components/AuditReportCard.js",["346","347","348","349","350","351","352"],"import React, { useState, useEffect, useContext } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Context } from \"../Context\";\nimport Accordion from \"@material-ui/core/Accordion\";\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Box from \"@material-ui/core/Box\";\nimport Loading from \"../pages/Loading\";\n\nconst useStyles = makeStyles((theme) => ({\n  mainContainer: {\n    display: \"flex\",\n    justifyContent: \"center\",\n  },\n  accordion: {\n    width: \"90%\",\n    maxWidth: 900,\n  },\n  title: {\n    display: \"flex\",\n    flexDirection: \"row\",\n  },\n  titleResolved: {\n    padding: theme.spacing(0, 2, 0, 2),\n    color: \"#F15A22\",\n  },\n\n  dropdownMain: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    padding: theme.spacing(0, 6, 0, 6),\n  },\n  dropdownContainer: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    // margin: theme.spacing(0, 0, 0, 2),\n  },\n  imageFromAuditor: {\n    width: \"70%\",\n    maxWidth: 400,\n    padding: theme.spacing(0, 0, 3, 0),\n  },\n  textInfo: {\n    padding: theme.spacing(2, 0, 2, 0),\n    color: \"#F15A22\",\n  },\n  topText: {\n    color: \"#F15A22\",\n  },\n  textTenant: {\n    padding: theme.spacing(1, 0, 2, 2),\n    fontWeight: \"medium\",\n  },\n  tenantResponses: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  tenantResponseContainer: {\n    margin: theme.spacing(4, 0, 6, 0),\n    padding: theme.spacing(5, 5, 5, 5),\n    backgroundColor: theme.palette.background.default,\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    width: \"90%\",\n    maxWidth: 500,\n  },\n  // tenantResponse: {\n  //   display: \"flex\",\n  //   padding: theme.spacing(2, 0, 2, 2),\n  //   backgroundColor: theme.palette.background.default,\n  // },\n  tenantResponseTitle: {\n    display: \"flex\",\n  },\n  tenantResponseContent: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  tenantTextResponse: {\n    padding: theme.spacing(2, 0, 4, 0),\n  },\n\n  avatar: {},\n  image: {\n    width: \"90%\",\n    maxWidth: 400,\n    // padding: theme.spacing(3, 2, 2, 2),\n  },\n  button: {\n    width: 240,\n    // color: \"#F15A22\",\n    fontWeight: \"medium\",\n    backgroundColor: \"#F15A22\",\n  },\n  buttonContainer: {\n    padding: theme.spacing(2, 0, 8, 0),\n    display: \"flex\",\n    justifyContent: \"center\",\n    // justifyContent: \"center\",\n  },\n  // media: {\n  //   width: 100,\n  //   height: 100,\n  //   backgroundColor: theme.palette.background.default,\n  // },\n}));\n\nfunction AuditReportCard({\n  current_qn_status,\n  requirement,\n  original_remarks,\n  timeframe,\n  report_id,\n  tenant_id,\n  qn_id,\n  image,\n}) {\n  const classes = useStyles();\n\n  //state of tenant rectification\n  // const [tenantRemarks, setTenantRemarks] = useState();\n  // const [tenantRectificationImage, setTenantRectificationImage] = useState();\n  // const [failedEntries, setFailedEntries] = useState();\n  const [tenantResponse, setTenantResponse] = useState();\n\n  const {\n    getTenantRectification,\n    submitReportUpdate,\n    resolvedState,\n    setResolvedState,\n  } = useContext(Context);\n\n  useEffect(() => {\n    async function getResponse() {\n      try {\n        //GET TENANT RECTIFICATION RESPONSES\n        getTenantRectification(report_id, tenant_id, qn_id)\n          .then((response) => {\n            console.log(response.data.entries);\n\n            setTenantResponse(response.data.entries);\n          })\n          .catch((error) => {\n            console.log(error);\n          });\n        // console.log(tenantEntry);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    getResponse();\n  }, [resolvedState]);\n\n  const resolveNonCompliance = () => {\n    alert(\"Non-compliance successfully resolved\");\n    async function resolveAsync() {\n      // const entry = await getReportEntry(report_id, qn_id).then((response) => {\n      //   console.log(response.data);\n      //   return response.data;\n      // });\n      submitReportUpdate(report_id, false, \"\", {\n        qn_id: qn_id,\n        status: true,\n      });\n    }\n    resolveAsync();\n  };\n\n  return (\n    <div className={classes.mainContainer}>\n      {tenantResponse ? (\n        <Accordion className={classes.accordion}>\n          <AccordionSummary\n            expandIcon={<ExpandMoreIcon />}\n            aria-label=\"Expand\"\n            aria-controls=\"additional-actions1-content\"\n            id=\"additional-actions1-header\"\n          >\n            <ListItem className={classes.title}>\n              <ListItemText id={qn_id} primary={requirement} />\n              {current_qn_status === \"PASS\" && (\n                <ListItemText className={classes.titleResolved}>\n                  <Typography variant=\"button\">Resolved</Typography>\n                </ListItemText>\n              )}\n            </ListItem>\n          </AccordionSummary>\n          <AccordionDetails className={classes.dropdownMain}>\n            <div className={classes.dropdownContainer}>\n              <Typography\n                color=\"textSecondary\"\n                variant=\"button\"\n                className={classes.topText}\n              >\n                YOUR REMARKS: {original_remarks}\n              </Typography>\n\n              <Typography\n                color=\"textSecondary\"\n                variant=\"button\"\n                className={classes.textInfo}\n              >\n                RECTIFICATION PERIOD: {timeframe}\n              </Typography>\n              {image && (\n                <img src={image} className={classes.imageFromAuditor}></img>\n              )}\n            </div>\n            <div className={classes.tenantResponses}>\n              {tenantResponse.map((response) => {\n                const { remarks, images } = response;\n\n                return (\n                  <>\n                    <Box\n                      className={classes.tenantResponseContainer}\n                      boxShadow={2}\n                    >\n                      <div className={classes.tenantResponseTitle}>\n                        <Avatar\n                          src=\"/broken-image.jpg\"\n                          className={classes.avatar}\n                        />\n                        <Typography\n                          color=\"textPrimary\"\n                          className={classes.textTenant}\n                        >\n                          Tenant Response:\n                        </Typography>\n                      </div>\n                      <div className={classes.tenantResponseContent}>\n                        <Typography\n                          color=\"textPrimary\"\n                          // variant=\"h8\"\n                          className={classes.tenantTextResponse}\n                          variant=\"caption\"\n                        >\n                          {remarks}\n                        </Typography>\n\n                        {images.length !== 0 && (\n                          <img src={images[0]} className={classes.image}></img>\n                        )}\n                      </div>\n                    </Box>\n                  </>\n                );\n              })}\n            </div>\n            {current_qn_status === \"FAIL\" && (\n              <div className={classes.buttonContainer}>\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  className={classes.button}\n                  size=\"large\"\n                  onClick={() => {\n                    resolveNonCompliance();\n                  }}\n                  // color=\"secondary\"\n                >\n                  resolve\n                </Button>\n              </div>\n            )}\n          </AccordionDetails>\n        </Accordion>\n      ) : (\n        <Loading />\n      )}\n    </div>\n  );\n}\n\nexport default AuditReportCard;\n","/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/components/utils.js",["353","354","355","356","357"],"import React from \"react\";\n\nexport function getDateString(date) {\n  var year = date.getFullYear();\n  var month = addZero(date.getMonth()+1);\n  var day = addZero(date.getDate());\n  return day + \"/\" + month + \"/\" + year;\n};\n\nexport function getDateStringAfterOneMonth() {\n  var today = new Date();\n  var year = today.getFullYear();\n  var month = parseInt(addZero(today.getMonth()+2));\n  var day = addZero(today.getDate());\n  if (month>12) {\n    month -= 12;\n    year += 1;\n  }\n  return day + \"/\" + month + \"/\" + year;\n};\n\nexport function addZero(number) {\n  if (number < 10) return \"0\" + number;\n  else return number;\n};\n\nexport function getTimeString() {\n  var today = new Date();\n  var hours = addZero(today.getHours());\n  var minutes = addZero(today.getMinutes());\n  var seconds = addZero(today.getSeconds());\n  return hours + \":\" + minutes + \":\" + seconds;\n};\n\n// Raw String => Valid String\nexport function toValidFormat(raw_time_string) {\n  // YYYY-MM-DD\n  if (raw_time_string[4] === \"-\") {\n    var string_array = raw_time_string.split(\"-\");\n    var year = string_array[0];\n    var month = string_array[1];\n    var day = string_array[2];\n  } \n  // DD/MM/YYYY\n  else if (raw_time_string[2] === \"/\") {\n    var string_array = raw_time_string.split(\"/\");\n    var year = string_array[2];\n    var month = string_array[1];\n    var day = string_array[0];\n  }\n  return day + \"/\" + month + \"/\" + year;\n}\n\n// Date object => Valid String\nexport function dateToValidString(dateObject) {\n  \n}","/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/components/TenantHomeTabs.js",["358"],"import React, { useContext } from \"react\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport { Context } from \"../Context\";\n\nconst useStyles = makeStyles((theme) => ({\n  //   root: { },\n}));\n\nconst StyledTabs = withStyles({\n  indicator: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    backgroundColor: \"transparent\",\n    \"& > span\": {\n      maxWidth: 40,\n      width: \"100%\",\n      backgroundColor: \"#F15A22\",\n    },\n  },\n})((props) => <Tabs {...props} TabIndicatorProps={{ children: <span /> }} />);\n\nconst StyledTab = withStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    textTransform: \"none\",\n    color: \"#000000\",\n    fontWeight: theme.typography.fontWeightBold,\n    fontSize: theme.typography.pxToRem(16),\n    margin: theme.spacing(2, 0, 2, 0),\n    \"&:focus\": {\n      opacity: 1,\n    },\n  },\n}))((props) => <Tab disableRipple {...props} />);\n\nexport default function CenteredTabs() {\n  const {\n    getTenantAudits,\n    getUserInfoNoParams,\n    getReport,\n    tenantState,\n    setTenantState,\n  } = useContext(Context);\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  const filterAudits = (category) => {\n    async function getResponse() {\n      try {\n        const tenantId = await getUserInfoNoParams().then((response) => {\n          //   console.log(response);\n          return response.data.acc_id;\n        });\n        // console.log(tenantId);\n        if (category === \"OVERDUE\") {\n          const reportIdArray = await getTenantAudits(tenantId).then(\n            (response) => {\n              // console.log(response);\n              if (response.data.OVERDUE === -1) {\n                return [];\n              }\n              return [response.data.OVERDUE];\n            }\n          );\n          //initialize array to store all objects of report info\n          let reportInfoArray = [];\n\n          for (let i = 0; i < reportIdArray.length; i++) {\n            let reportInfo = await getReport(reportIdArray[i]).then(\n              (response) => {\n                return response.data;\n              }\n            );\n            reportInfoArray.push(reportInfo);\n          }\n          if (reportInfoArray.length === reportIdArray.length) {\n            setTenantState(reportInfoArray);\n          }\n        }\n        if (category === \"UNRESOLVED\") {\n          const reportIdArray = await getTenantAudits(tenantId).then(\n            (response) => {\n              // console.log(response);\n              if (response.data.LATEST === -1) {\n                return [];\n              }\n              return [response.data.LATEST];\n            }\n          );\n          //initialize array to store all objects of report info\n          let reportInfoArray = [];\n\n          for (let i = 0; i < reportIdArray.length; i++) {\n            let reportInfo = await getReport(reportIdArray[i]).then(\n              (response) => {\n                return response.data;\n              }\n            );\n            reportInfoArray.push(reportInfo);\n          }\n          if (reportInfoArray.length === reportIdArray.length) {\n            setTenantState(reportInfoArray);\n          }\n        }\n        if (category === \"COMPLETED\") {\n          const reportIdArray = await getTenantAudits(tenantId).then(\n            (response) => {\n              if (response.data.LATEST === -1) {\n                return [...response.data.CLOSED.past_audits];\n              }\n              return [\n                response.data.LATEST,\n                ...response.data.CLOSED.past_audits,\n              ];\n            }\n          );\n          //initialize array to store all objects of report info\n          let reportInfoArray = [];\n\n          for (let i = 0; i < reportIdArray.length; i++) {\n            let reportInfo = await getReport(reportIdArray[i]).then(\n              (response) => {\n                return response.data;\n              }\n            );\n            reportInfoArray.push(reportInfo);\n          }\n          if (reportInfoArray.length === reportIdArray.length) {\n            setTenantState(reportInfoArray);\n          }\n        }\n      } catch (err) {\n        console.log(err);\n      }\n    }\n    getResponse();\n  };\n\n  return (\n    <Paper className={classes.root}>\n      <StyledTabs value={value} onChange={handleChange} centered>\n        <StyledTab\n          onClick={() => {\n            filterAudits(\"COMPLETED\");\n          }}\n          label=\"COMPLETED\"\n        />\n        <StyledTab\n          onClick={() => {\n            filterAudits(\"UNRESOLVED\");\n          }}\n          label=\"UNRESOLVED\"\n        />\n        <StyledTab\n          onClick={() => {\n            filterAudits(\"OVERDUE\");\n          }}\n          label=\"OVERDUE\"\n        />\n      </StyledTabs>\n    </Paper>\n  );\n}\n","/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/components/TenantHomeCards.js",["359","360","361","362","363","364"],"import React, { useContext, useEffect, useState } from \"react\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Button from \"@material-ui/core/Button\";\nimport CameraIcon from \"@material-ui/icons/PhotoCamera\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport { Link } from \"react-router-dom\";\nimport { Context } from \"../Context\";\nimport { tenantImages } from \"../data\";\nimport zIndex from \"@material-ui/core/styles/zIndex\";\n\nconst useStyles = makeStyles((theme) => ({\n  cardGrid: {\n    paddingTop: theme.spacing(8),\n    paddingBottom: theme.spacing(8),\n  },\n  card: {\n    height: \"100%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  cardMedia: {\n    // padding: theme.spacing(2, 2, 2, 2),\n    height: 150,\n    width: \"100%\",\n    // paddingTop: \"56.25%\", // 16:9\n  },\n  cardContent: {\n    flexGrow: 1,\n  },\n  cardTitle: {\n    display: \"flex\",\n    // justifyContent: \"space-between\",\n  },\n  resolvedLabel: {\n    color: \"#F15A22\",\n    padding: theme.spacing(0.5, 2, 0, 2),\n  },\n}));\nexport default function TenantHomeCards() {\n  const classes = useStyles();\n\n  const { tenantState } = useContext(Context);\n\n  return (\n    <React.Fragment>\n      <Container className={classes.cardGrid} maxWidth=\"md\">\n        {/* End hero unit */}\n        <Grid container spacing={4}>\n          {tenantState.map((audit, index) => {\n            console.log(audit);\n            const {\n              store_name,\n              open_date,\n              overall_status,\n              overall_score,\n              report_type,\n              report_id,\n            } = audit;\n            let imageObject = tenantImages.find(\n              (image) => image.name === store_name\n            );\n\n            return (\n              <Grid item key={index} xs={12} sm={6} md={4}>\n                <Card className={classes.card}>\n                  <CardMedia\n                    component=\"img\"\n                    alt=\"tenant-image\"\n                    className={classes.cardMedia}\n                    // image={`${imageObject.imageUrl}`}\n                    image={\n                      imageObject.imageUrl\n                        ? `${imageObject.imageUrl}`\n                        : `url(https://source.unsplash.com/random)`\n                    }\n                    title=\"Image title\"\n                  />\n                  <CardContent className={classes.cardContent}>\n                    <div className={classes.cardTitle}>\n                      <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                        {store_name}\n                      </Typography>\n                      {overall_status === 1 && (\n                        <Typography\n                          variant=\"button\"\n                          className={classes.resolvedLabel}\n                        >\n                          Resolved\n                        </Typography>\n                      )}\n                    </div>\n\n                    <Typography variant=\"caption\">\n                      <div>Date: {new Date(open_date).toString()}</div>\n                      {report_type === \"FB\" && <div>Type: Food & Beverage</div>}\n                      {report_type === \"NFB\" && (\n                        <div>Type: Non-Food & Beverage</div>\n                      )}\n                      {report_type === \"SMA\" && (\n                        <div>Type: Safe Management</div>\n                      )}\n                      <div>Score: {overall_score}</div>\n                    </Typography>\n                  </CardContent>\n                  <CardActions>\n                    {overall_status === 0 && (\n                      <Link to={`/t/report/${report_id}`}>\n                        <Button\n                          size=\"medium\"\n                          color=\"primary\"\n                          className={classes.button}\n                        >\n                          Rectify\n                        </Button>\n                      </Link>\n                    )}\n                    <Link to={`/fullreport/${report_id}`}>\n                      <Button\n                        size=\"medium\"\n                        color=\"primary\"\n                        className={classes.button}\n                      >\n                        View Report\n                      </Button>\n                    </Link>\n                  </CardActions>\n                </Card>\n              </Grid>\n            );\n          })}\n        </Grid>\n      </Container>\n    </React.Fragment>\n  );\n}\n",{"ruleId":"365","replacedBy":"366"},{"ruleId":"367","replacedBy":"368"},{"ruleId":"369","severity":1,"message":"370","line":21,"column":8,"nodeType":"371","messageId":"372","endLine":21,"endColumn":15},{"ruleId":"369","severity":1,"message":"373","line":2,"column":10,"nodeType":"371","messageId":"372","endLine":2,"endColumn":16},{"ruleId":"369","severity":1,"message":"374","line":2,"column":18,"nodeType":"371","messageId":"372","endLine":2,"endColumn":29},{"ruleId":"369","severity":1,"message":"375","line":2,"column":31,"nodeType":"371","messageId":"372","endLine":2,"endColumn":38},{"ruleId":"369","severity":1,"message":"376","line":2,"column":40,"nodeType":"371","messageId":"372","endLine":2,"endColumn":52},{"ruleId":"369","severity":1,"message":"377","line":4,"column":10,"nodeType":"371","messageId":"372","endLine":4,"endColumn":18},{"ruleId":"378","severity":1,"message":"379","line":98,"column":26,"nodeType":"371","endLine":98,"endColumn":37},{"ruleId":"369","severity":1,"message":"380","line":193,"column":10,"nodeType":"371","messageId":"372","endLine":193,"endColumn":24},{"ruleId":"369","severity":1,"message":"381","line":193,"column":26,"nodeType":"371","messageId":"372","endLine":193,"endColumn":43},{"ruleId":"378","severity":1,"message":"382","line":111,"column":6,"nodeType":"383","endLine":111,"endColumn":8,"suggestions":"384"},{"ruleId":"378","severity":1,"message":"385","line":34,"column":6,"nodeType":"383","endLine":34,"endColumn":8,"suggestions":"386"},{"ruleId":"369","severity":1,"message":"387","line":37,"column":9,"nodeType":"371","messageId":"372","endLine":37,"endColumn":16},{"ruleId":"369","severity":1,"message":"376","line":2,"column":10,"nodeType":"371","messageId":"372","endLine":2,"endColumn":22},{"ruleId":"369","severity":1,"message":"388","line":3,"column":10,"nodeType":"371","messageId":"372","endLine":3,"endColumn":14},{"ruleId":"369","severity":1,"message":"389","line":4,"column":10,"nodeType":"371","messageId":"372","endLine":4,"endColumn":22},{"ruleId":"378","severity":1,"message":"390","line":47,"column":6,"nodeType":"383","endLine":47,"endColumn":8,"suggestions":"391"},{"ruleId":"369","severity":1,"message":"392","line":1,"column":50,"nodeType":"371","messageId":"372","endLine":1,"endColumn":61},{"ruleId":"378","severity":1,"message":"393","line":92,"column":6,"nodeType":"383","endLine":92,"endColumn":8,"suggestions":"394"},{"ruleId":"369","severity":1,"message":"395","line":96,"column":9,"nodeType":"371","messageId":"372","endLine":96,"endColumn":14},{"ruleId":"378","severity":1,"message":"385","line":36,"column":6,"nodeType":"383","endLine":36,"endColumn":8,"suggestions":"396"},{"ruleId":"369","severity":1,"message":"375","line":2,"column":10,"nodeType":"371","messageId":"372","endLine":2,"endColumn":17},{"ruleId":"378","severity":1,"message":"397","line":24,"column":6,"nodeType":"383","endLine":24,"endColumn":8,"suggestions":"398"},{"ruleId":"369","severity":1,"message":"399","line":38,"column":25,"nodeType":"371","messageId":"372","endLine":38,"endColumn":29},{"ruleId":"369","severity":1,"message":"400","line":1,"column":17,"nodeType":"371","messageId":"372","endLine":1,"endColumn":25},{"ruleId":"369","severity":1,"message":"373","line":2,"column":10,"nodeType":"371","messageId":"372","endLine":2,"endColumn":16},{"ruleId":"369","severity":1,"message":"388","line":3,"column":10,"nodeType":"371","messageId":"372","endLine":3,"endColumn":14},{"ruleId":"369","severity":1,"message":"401","line":4,"column":8,"nodeType":"371","messageId":"372","endLine":4,"endColumn":22},{"ruleId":"369","severity":1,"message":"402","line":5,"column":8,"nodeType":"371","messageId":"372","endLine":5,"endColumn":14},{"ruleId":"369","severity":1,"message":"400","line":1,"column":17,"nodeType":"371","messageId":"372","endLine":1,"endColumn":25},{"ruleId":"369","severity":1,"message":"403","line":11,"column":5,"nodeType":"371","messageId":"372","endLine":11,"endColumn":17},{"ruleId":"369","severity":1,"message":"404","line":12,"column":5,"nodeType":"371","messageId":"372","endLine":12,"endColumn":19},{"ruleId":"405","severity":1,"message":"406","line":21,"column":21,"nodeType":"407","messageId":"408","endLine":21,"endColumn":23},{"ruleId":"369","severity":1,"message":"388","line":2,"column":10,"nodeType":"371","messageId":"372","endLine":2,"endColumn":14},{"ruleId":"369","severity":1,"message":"409","line":4,"column":8,"nodeType":"371","messageId":"372","endLine":4,"endColumn":13},{"ruleId":"369","severity":1,"message":"410","line":9,"column":10,"nodeType":"371","messageId":"372","endLine":9,"endColumn":19},{"ruleId":"378","severity":1,"message":"411","line":20,"column":6,"nodeType":"383","endLine":20,"endColumn":8,"suggestions":"412"},{"ruleId":"369","severity":1,"message":"400","line":1,"column":28,"nodeType":"371","messageId":"372","endLine":1,"endColumn":36},{"ruleId":"369","severity":1,"message":"413","line":16,"column":11,"nodeType":"371","messageId":"372","endLine":16,"endColumn":19},{"ruleId":"369","severity":1,"message":"414","line":7,"column":3,"nodeType":"371","messageId":"372","endLine":7,"endColumn":6},{"ruleId":"369","severity":1,"message":"415","line":149,"column":7,"nodeType":"371","messageId":"372","endLine":149,"endColumn":21},{"ruleId":"369","severity":1,"message":"416","line":1,"column":8,"nodeType":"371","messageId":"372","endLine":1,"endColumn":13},{"ruleId":"369","severity":1,"message":"417","line":3,"column":7,"nodeType":"371","messageId":"372","endLine":3,"endColumn":12},{"ruleId":"378","severity":1,"message":"385","line":27,"column":6,"nodeType":"383","endLine":27,"endColumn":21,"suggestions":"418"},{"ruleId":"369","severity":1,"message":"419","line":13,"column":39,"nodeType":"371","messageId":"372","endLine":13,"endColumn":52},{"ruleId":"369","severity":1,"message":"420","line":13,"column":54,"nodeType":"371","messageId":"372","endLine":13,"endColumn":60},{"ruleId":"369","severity":1,"message":"421","line":13,"column":62,"nodeType":"371","messageId":"372","endLine":13,"endColumn":66},{"ruleId":"369","severity":1,"message":"422","line":1,"column":29,"nodeType":"371","messageId":"372","endLine":1,"endColumn":38},{"ruleId":"369","severity":1,"message":"400","line":1,"column":40,"nodeType":"371","messageId":"372","endLine":1,"endColumn":48},{"ruleId":"369","severity":1,"message":"423","line":2,"column":8,"nodeType":"371","messageId":"372","endLine":2,"endColumn":14},{"ruleId":"369","severity":1,"message":"424","line":4,"column":8,"nodeType":"371","messageId":"372","endLine":4,"endColumn":18},{"ruleId":"369","severity":1,"message":"425","line":10,"column":8,"nodeType":"371","messageId":"372","endLine":10,"endColumn":15},{"ruleId":"369","severity":1,"message":"388","line":14,"column":8,"nodeType":"371","messageId":"372","endLine":14,"endColumn":12},{"ruleId":"369","severity":1,"message":"426","line":17,"column":8,"nodeType":"371","messageId":"372","endLine":17,"endColumn":14},{"ruleId":"369","severity":1,"message":"423","line":2,"column":8,"nodeType":"371","messageId":"372","endLine":2,"endColumn":14},{"ruleId":"369","severity":1,"message":"424","line":4,"column":8,"nodeType":"371","messageId":"372","endLine":4,"endColumn":18},{"ruleId":"369","severity":1,"message":"425","line":10,"column":8,"nodeType":"371","messageId":"372","endLine":10,"endColumn":15},{"ruleId":"369","severity":1,"message":"427","line":6,"column":8,"nodeType":"371","messageId":"372","endLine":6,"endColumn":12},{"ruleId":"369","severity":1,"message":"428","line":9,"column":8,"nodeType":"371","messageId":"372","endLine":9,"endColumn":22},{"ruleId":"369","severity":1,"message":"429","line":11,"column":8,"nodeType":"371","messageId":"372","endLine":11,"endColumn":14},{"ruleId":"369","severity":1,"message":"430","line":13,"column":10,"nodeType":"371","messageId":"372","endLine":13,"endColumn":19},{"ruleId":"369","severity":1,"message":"431","line":45,"column":7,"nodeType":"371","messageId":"372","endLine":45,"endColumn":19},{"ruleId":"369","severity":1,"message":"392","line":1,"column":50,"nodeType":"371","messageId":"372","endLine":1,"endColumn":61},{"ruleId":"378","severity":1,"message":"432","line":96,"column":6,"nodeType":"383","endLine":96,"endColumn":8,"suggestions":"433"},{"ruleId":"369","severity":1,"message":"392","line":1,"column":50,"nodeType":"371","messageId":"372","endLine":1,"endColumn":61},{"ruleId":"378","severity":1,"message":"434","line":95,"column":6,"nodeType":"383","endLine":95,"endColumn":8,"suggestions":"435"},{"ruleId":"369","severity":1,"message":"436","line":9,"column":8,"nodeType":"371","messageId":"372","endLine":9,"endColumn":17},{"ruleId":"369","severity":1,"message":"437","line":10,"column":8,"nodeType":"371","messageId":"372","endLine":10,"endColumn":24},{"ruleId":"369","severity":1,"message":"438","line":11,"column":8,"nodeType":"371","messageId":"372","endLine":11,"endColumn":24},{"ruleId":"369","severity":1,"message":"439","line":12,"column":8,"nodeType":"371","messageId":"372","endLine":12,"endColumn":16},{"ruleId":"369","severity":1,"message":"440","line":13,"column":8,"nodeType":"371","messageId":"372","endLine":13,"endColumn":24},{"ruleId":"369","severity":1,"message":"441","line":14,"column":8,"nodeType":"371","messageId":"372","endLine":14,"endColumn":22},{"ruleId":"369","severity":1,"message":"427","line":15,"column":8,"nodeType":"371","messageId":"372","endLine":15,"endColumn":12},{"ruleId":"369","severity":1,"message":"442","line":16,"column":8,"nodeType":"371","messageId":"372","endLine":16,"endColumn":16},{"ruleId":"369","severity":1,"message":"443","line":17,"column":8,"nodeType":"371","messageId":"372","endLine":17,"endColumn":20},{"ruleId":"369","severity":1,"message":"429","line":18,"column":8,"nodeType":"371","messageId":"372","endLine":18,"endColumn":14},{"ruleId":"369","severity":1,"message":"444","line":20,"column":8,"nodeType":"371","messageId":"372","endLine":20,"endColumn":14},{"ruleId":"378","severity":1,"message":"445","line":105,"column":6,"nodeType":"383","endLine":105,"endColumn":8,"suggestions":"446"},{"ruleId":"447","severity":1,"message":"448","line":122,"column":15,"nodeType":"449","messageId":"450","endLine":138,"endColumn":16},{"ruleId":"369","severity":1,"message":"451","line":4,"column":3,"nodeType":"371","messageId":"372","endLine":4,"endColumn":12},{"ruleId":"369","severity":1,"message":"410","line":6,"column":3,"nodeType":"371","messageId":"372","endLine":6,"endColumn":12},{"ruleId":"369","severity":1,"message":"452","line":8,"column":3,"nodeType":"371","messageId":"372","endLine":8,"endColumn":13},{"ruleId":"369","severity":1,"message":"453","line":32,"column":5,"nodeType":"371","messageId":"372","endLine":32,"endColumn":19},{"ruleId":"369","severity":1,"message":"454","line":36,"column":10,"nodeType":"371","messageId":"372","endLine":36,"endColumn":23},{"ruleId":"369","severity":1,"message":"455","line":36,"column":25,"nodeType":"371","messageId":"372","endLine":36,"endColumn":41},{"ruleId":"369","severity":1,"message":"456","line":46,"column":9,"nodeType":"371","messageId":"372","endLine":46,"endColumn":19},{"ruleId":"405","severity":1,"message":"457","line":72,"column":24,"nodeType":"407","messageId":"408","endLine":72,"endColumn":26},{"ruleId":"378","severity":1,"message":"458","line":101,"column":6,"nodeType":"383","endLine":101,"endColumn":23,"suggestions":"459"},{"ruleId":"369","severity":1,"message":"460","line":36,"column":22,"nodeType":"371","messageId":"372","endLine":36,"endColumn":37},{"ruleId":"369","severity":1,"message":"461","line":50,"column":15,"nodeType":"371","messageId":"372","endLine":50,"endColumn":25},{"ruleId":"378","severity":1,"message":"462","line":59,"column":6,"nodeType":"383","endLine":59,"endColumn":8,"suggestions":"463"},{"ruleId":"447","severity":1,"message":"448","line":82,"column":17,"nodeType":"449","messageId":"450","endLine":98,"endColumn":18},{"ruleId":"369","severity":1,"message":"388","line":2,"column":10,"nodeType":"371","messageId":"372","endLine":2,"endColumn":14},{"ruleId":"369","severity":1,"message":"444","line":4,"column":3,"nodeType":"371","messageId":"372","endLine":4,"endColumn":9},{"ruleId":"369","severity":1,"message":"464","line":7,"column":3,"nodeType":"371","messageId":"372","endLine":7,"endColumn":14},{"ruleId":"369","severity":1,"message":"452","line":8,"column":3,"nodeType":"371","messageId":"372","endLine":8,"endColumn":13},{"ruleId":"369","severity":1,"message":"465","line":9,"column":3,"nodeType":"371","messageId":"372","endLine":9,"endColumn":9},{"ruleId":"369","severity":1,"message":"466","line":11,"column":3,"nodeType":"371","messageId":"372","endLine":11,"endColumn":7},{"ruleId":"369","severity":1,"message":"467","line":15,"column":3,"nodeType":"371","messageId":"372","endLine":15,"endColumn":16},{"ruleId":"369","severity":1,"message":"468","line":16,"column":3,"nodeType":"371","messageId":"372","endLine":16,"endColumn":16},{"ruleId":"369","severity":1,"message":"469","line":17,"column":3,"nodeType":"371","messageId":"372","endLine":17,"endColumn":14},{"ruleId":"369","severity":1,"message":"470","line":18,"column":3,"nodeType":"371","messageId":"372","endLine":18,"endColumn":9},{"ruleId":"369","severity":1,"message":"471","line":19,"column":3,"nodeType":"371","messageId":"372","endLine":19,"endColumn":20},{"ruleId":"369","severity":1,"message":"472","line":26,"column":8,"nodeType":"371","messageId":"372","endLine":26,"endColumn":23},{"ruleId":"369","severity":1,"message":"473","line":33,"column":5,"nodeType":"371","messageId":"372","endLine":33,"endColumn":35},{"ruleId":"369","severity":1,"message":"474","line":35,"column":5,"nodeType":"371","messageId":"372","endLine":35,"endColumn":30},{"ruleId":"369","severity":1,"message":"475","line":36,"column":5,"nodeType":"371","messageId":"372","endLine":36,"endColumn":36},{"ruleId":"369","severity":1,"message":"476","line":47,"column":11,"nodeType":"371","messageId":"372","endLine":47,"endColumn":18},{"ruleId":"378","severity":1,"message":"477","line":82,"column":6,"nodeType":"383","endLine":82,"endColumn":23,"suggestions":"478"},{"ruleId":"369","severity":1,"message":"479","line":12,"column":8,"nodeType":"371","messageId":"372","endLine":12,"endColumn":23},{"ruleId":"369","severity":1,"message":"460","line":51,"column":22,"nodeType":"371","messageId":"372","endLine":51,"endColumn":37},{"ruleId":"447","severity":1,"message":"448","line":87,"column":11,"nodeType":"449","messageId":"450","endLine":103,"endColumn":12},{"ruleId":"378","severity":1,"message":"462","line":165,"column":6,"nodeType":"383","endLine":165,"endColumn":8,"suggestions":"480"},{"ruleId":"481","severity":1,"message":"482","line":313,"column":15,"nodeType":"483","endLine":313,"endColumn":32},{"ruleId":"369","severity":1,"message":"400","line":1,"column":17,"nodeType":"371","messageId":"372","endLine":1,"endColumn":25},{"ruleId":"369","severity":1,"message":"484","line":1,"column":27,"nodeType":"371","messageId":"372","endLine":1,"endColumn":37},{"ruleId":"369","severity":1,"message":"444","line":2,"column":10,"nodeType":"371","messageId":"372","endLine":2,"endColumn":16},{"ruleId":"369","severity":1,"message":"451","line":2,"column":18,"nodeType":"371","messageId":"372","endLine":2,"endColumn":27},{"ruleId":"369","severity":1,"message":"464","line":2,"column":29,"nodeType":"371","messageId":"372","endLine":2,"endColumn":40},{"ruleId":"369","severity":1,"message":"452","line":2,"column":42,"nodeType":"371","messageId":"372","endLine":2,"endColumn":52},{"ruleId":"369","severity":1,"message":"465","line":2,"column":54,"nodeType":"371","messageId":"372","endLine":2,"endColumn":60},{"ruleId":"369","severity":1,"message":"467","line":3,"column":10,"nodeType":"371","messageId":"372","endLine":3,"endColumn":23},{"ruleId":"369","severity":1,"message":"468","line":3,"column":25,"nodeType":"371","messageId":"372","endLine":3,"endColumn":38},{"ruleId":"369","severity":1,"message":"469","line":3,"column":40,"nodeType":"371","messageId":"372","endLine":3,"endColumn":51},{"ruleId":"369","severity":1,"message":"470","line":3,"column":53,"nodeType":"371","messageId":"372","endLine":3,"endColumn":59},{"ruleId":"369","severity":1,"message":"471","line":3,"column":61,"nodeType":"371","messageId":"372","endLine":3,"endColumn":78},{"ruleId":"369","severity":1,"message":"485","line":6,"column":10,"nodeType":"371","messageId":"372","endLine":6,"endColumn":17},{"ruleId":"369","severity":1,"message":"486","line":7,"column":10,"nodeType":"371","messageId":"372","endLine":7,"endColumn":23},{"ruleId":"487","severity":1,"message":"488","line":72,"column":22,"nodeType":"489","endLine":72,"endColumn":79},{"ruleId":"369","severity":1,"message":"490","line":3,"column":10,"nodeType":"371","messageId":"372","endLine":3,"endColumn":20},{"ruleId":"369","severity":1,"message":"441","line":4,"column":8,"nodeType":"371","messageId":"372","endLine":4,"endColumn":22},{"ruleId":"369","severity":1,"message":"466","line":5,"column":18,"nodeType":"371","messageId":"372","endLine":5,"endColumn":22},{"ruleId":"369","severity":1,"message":"410","line":5,"column":24,"nodeType":"371","messageId":"372","endLine":5,"endColumn":33},{"ruleId":"369","severity":1,"message":"491","line":14,"column":38,"nodeType":"371","messageId":"372","endLine":14,"endColumn":53},{"ruleId":"378","severity":1,"message":"492","line":35,"column":6,"nodeType":"383","endLine":35,"endColumn":8,"suggestions":"493"},{"ruleId":"369","severity":1,"message":"388","line":2,"column":10,"nodeType":"371","messageId":"372","endLine":2,"endColumn":14},{"ruleId":"369","severity":1,"message":"494","line":175,"column":5,"nodeType":"371","messageId":"372","endLine":175,"endColumn":19},{"ruleId":"378","severity":1,"message":"495","line":202,"column":6,"nodeType":"383","endLine":202,"endColumn":8,"suggestions":"496"},{"ruleId":"487","severity":1,"message":"488","line":326,"column":17,"nodeType":"489","endLine":326,"endColumn":73},{"ruleId":"487","severity":1,"message":"488","line":435,"column":25,"nodeType":"489","endLine":435,"endColumn":72},{"ruleId":"369","severity":1,"message":"439","line":7,"column":8,"nodeType":"371","messageId":"372","endLine":7,"endColumn":16},{"ruleId":"369","severity":1,"message":"440","line":8,"column":8,"nodeType":"371","messageId":"372","endLine":8,"endColumn":24},{"ruleId":"369","severity":1,"message":"427","line":10,"column":8,"nodeType":"371","messageId":"372","endLine":10,"endColumn":12},{"ruleId":"369","severity":1,"message":"497","line":142,"column":5,"nodeType":"371","messageId":"372","endLine":142,"endColumn":21},{"ruleId":"378","severity":1,"message":"495","line":164,"column":6,"nodeType":"383","endLine":164,"endColumn":21,"suggestions":"498"},{"ruleId":"487","severity":1,"message":"488","line":218,"column":17,"nodeType":"489","endLine":218,"endColumn":71},{"ruleId":"487","severity":1,"message":"488","line":254,"column":27,"nodeType":"489","endLine":254,"endColumn":74},{"ruleId":"369","severity":1,"message":"416","line":1,"column":8,"nodeType":"371","messageId":"372","endLine":1,"endColumn":13},{"ruleId":"499","severity":1,"message":"500","line":46,"column":9,"nodeType":"371","messageId":"501","endLine":46,"endColumn":21},{"ruleId":"499","severity":1,"message":"502","line":47,"column":9,"nodeType":"371","messageId":"501","endLine":47,"endColumn":13},{"ruleId":"499","severity":1,"message":"503","line":48,"column":9,"nodeType":"371","messageId":"501","endLine":48,"endColumn":14},{"ruleId":"499","severity":1,"message":"504","line":49,"column":9,"nodeType":"371","messageId":"501","endLine":49,"endColumn":12},{"ruleId":"369","severity":1,"message":"505","line":44,"column":5,"nodeType":"371","messageId":"372","endLine":44,"endColumn":16},{"ruleId":"369","severity":1,"message":"422","line":1,"column":29,"nodeType":"371","messageId":"372","endLine":1,"endColumn":38},{"ruleId":"369","severity":1,"message":"400","line":1,"column":40,"nodeType":"371","messageId":"372","endLine":1,"endColumn":48},{"ruleId":"369","severity":1,"message":"423","line":2,"column":8,"nodeType":"371","messageId":"372","endLine":2,"endColumn":14},{"ruleId":"369","severity":1,"message":"424","line":4,"column":8,"nodeType":"371","messageId":"372","endLine":4,"endColumn":18},{"ruleId":"369","severity":1,"message":"425","line":10,"column":8,"nodeType":"371","messageId":"372","endLine":10,"endColumn":15},{"ruleId":"369","severity":1,"message":"426","line":17,"column":8,"nodeType":"371","messageId":"372","endLine":17,"endColumn":14},"no-native-reassign",["506"],"no-negated-in-lhs",["507"],"no-unused-vars","'Loading' is defined but never used.","Identifier","unusedVar","'audits' is defined but never used.","'fbChecklist' is defined but never used.","'tenants' is defined but never used.","'institutions' is defined but never used.","'Redirect' is defined but never used.","react-hooks/exhaustive-deps","React Hook useCallback does nothing when called with only one argument. Did you forget to pass an array of dependencies?","'reportIdsState' is assigned a value but never used.","'setReportIdsState' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getAuditsTenant', 'getReport', 'getUserInfo', and 'tenantId'. Either include them or remove the dependency array.","ArrayExpression",["508"],"React Hook useEffect has a missing dependency: 'getAccountInfo'. Either include it or remove the dependency array.",["509"],"'API_URL' is assigned a value but never used.","'Link' is defined but never used.","'FaAngleRight' is defined but never used.","React Hook useEffect has missing dependencies: 'getAudits', 'getReport', and 'setAuditsState'. Either include them or remove the dependency array.",["510"],"'useCallback' is defined but never used.","React Hook useEffect has missing dependencies: 'createFbReportState', 'getFbChecklistQuestions', 'getUserInfo', and 'tenantId'. Either include them or remove the dependency array.",["511"],"'score' is assigned a value but never used.",["512"],"React Hook useEffect has missing dependencies: 'getInstitutionTenants' and 'institutionName'. Either include them or remove the dependency array.",["513"],"'name' is assigned a value but never used.","'useState' is defined but never used.","'HomeCategories' is defined but never used.","'Audits' is defined but never used.","'accountState' is assigned a value but never used.","'getAccountInfo' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'axios' is defined but never used.","'FormGroup' is defined but never used.","React Hook useEffect has a missing dependency: 'getAllChatsOfUser'. Either include it or remove the dependency array.",["514"],"'reportId' is assigned a value but never used.","'Box' is defined but never used.","'LoginComponent' is defined but never used.","'React' is defined but never used.","'users' is assigned a value but never used.",["515"],"'timeRemaining' is assigned a value but never used.","'status' is assigned a value but never used.","'date' is assigned a value but never used.","'useEffect' is defined but never used.","'AppBar' is defined but never used.","'CameraIcon' is defined but never used.","'Toolbar' is defined but never used.","'zIndex' is defined but never used.","'List' is defined but never used.","'ListItemAvatar' is defined but never used.","'Avatar' is defined but never used.","'FaRegEdit' is defined but never used.","'StyledRating' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'createSMAReportState', 'getSMAChecklistQuestions', 'getUserInfo', 'setTenantType', and 'tenantId'. Either include them or remove the dependency array.",["516"],"React Hook useEffect has missing dependencies: 'createNonFbReportState', 'getNonFbChecklistQuestions', 'getUserInfo', 'setTenantType', and 'tenantId'. Either include them or remove the dependency array.",["517"],"'Accordion' is defined but never used.","'AccordionSummary' is defined but never used.","'AccordionDetails' is defined but never used.","'Checkbox' is defined but never used.","'FormControlLabel' is defined but never used.","'ExpandMoreIcon' is defined but never used.","'ListItem' is defined but never used.","'ListItemText' is defined but never used.","'Button' is defined but never used.","React Hook useEffect has missing dependencies: 'getQuestionInfo', 'getReportStats', 'getUserInfoNoParams', and 'reportId'. Either include them or remove the dependency array.",["518"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'TextField' is defined but never used.","'InputLabel' is defined but never used.","'getAllAuditors' is assigned a value but never used.","'allChatsState' is assigned a value but never used.","'setAllChatsState' is assigned a value but never used.","'chatsArray' is assigned a value but never used.","Expected '===' and instead saw '=='.","React Hook useEffect has missing dependencies: 'allTenantsState', 'getAllChatsOfUser', 'getAllTenants', and 'setAllChatsOfUserState'. Either include them or remove the dependency array.",["519"],"'getQuestionInfo' is assigned a value but never used.","'reportInfo' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getOriginalReport', 'getReport', and 'reportId'. Either include them or remove the dependency array.",["520"],"'FormControl' is defined but never used.","'Select' is defined but never used.","'Grid' is defined but never used.","'DialogActions' is defined but never used.","'DialogContent' is defined but never used.","'DialogTitle' is defined but never used.","'Dialog' is defined but never used.","'DialogContentText' is defined but never used.","'NotificationRow' is defined but never used.","'allAvailableNotificationsState' is assigned a value but never used.","'currentNotificationsState' is assigned a value but never used.","'getNotificationByNotificationId' is assigned a value but never used.","'role_id' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getAllAvailableNotifications'. Either include it or remove the dependency array.",["521"],"'ReactHtmlParser' is defined but never used.",["522"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'useContext' is defined but never used.","'Context' is defined but never used.","'toValidFormat' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'makeStyles' is defined but never used.","'chatSubmitState' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getUserInfo' and 'target_id'. Either include them or remove the dependency array.",["523"],"'getReportEntry' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getTenantRectification', 'qn_id', 'report_id', and 'tenant_id'. Either include them or remove the dependency array.",["524"],"'setResolvedState' is assigned a value but never used.",["525"],"no-redeclare","'string_array' is already defined.","redeclared","'year' is already defined.","'month' is already defined.","'day' is already defined.","'tenantState' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"526","fix":"527"},{"desc":"528","fix":"529"},{"desc":"530","fix":"531"},{"desc":"532","fix":"533"},{"desc":"528","fix":"534"},{"desc":"535","fix":"536"},{"desc":"537","fix":"538"},{"desc":"539","fix":"540"},{"desc":"541","fix":"542"},{"desc":"543","fix":"544"},{"desc":"545","fix":"546"},{"desc":"547","fix":"548"},{"desc":"549","fix":"550"},{"desc":"551","fix":"552"},{"desc":"549","fix":"553"},{"desc":"554","fix":"555"},{"desc":"556","fix":"557"},{"desc":"558","fix":"559"},"Update the dependencies array to be: [getAuditsTenant, getReport, getUserInfo, tenantId]",{"range":"560","text":"561"},"Update the dependencies array to be: [getAccountInfo]",{"range":"562","text":"563"},"Update the dependencies array to be: [getAudits, getReport, setAuditsState]",{"range":"564","text":"565"},"Update the dependencies array to be: [createFbReportState, getFbChecklistQuestions, getUserInfo, tenantId]",{"range":"566","text":"567"},{"range":"568","text":"563"},"Update the dependencies array to be: [getInstitutionTenants, institutionName]",{"range":"569","text":"570"},"Update the dependencies array to be: [getAllChatsOfUser]",{"range":"571","text":"572"},"Update the dependencies array to be: [getAccountInfo, toggleClicked]",{"range":"573","text":"574"},"Update the dependencies array to be: [createSMAReportState, getSMAChecklistQuestions, getUserInfo, setTenantType, tenantId]",{"range":"575","text":"576"},"Update the dependencies array to be: [createNonFbReportState, getNonFbChecklistQuestions, getUserInfo, setTenantType, tenantId]",{"range":"577","text":"578"},"Update the dependencies array to be: [getQuestionInfo, getReportStats, getUserInfoNoParams, reportId]",{"range":"579","text":"580"},"Update the dependencies array to be: [allTenantsState, chatSubmitState, getAllChatsOfUser, getAllTenants, setAllChatsOfUserState]",{"range":"581","text":"582"},"Update the dependencies array to be: [getOriginalReport, getReport, reportId]",{"range":"583","text":"584"},"Update the dependencies array to be: [chatSubmitState, getAllAvailableNotifications]",{"range":"585","text":"586"},{"range":"587","text":"584"},"Update the dependencies array to be: [getUserInfo, target_id]",{"range":"588","text":"589"},"Update the dependencies array to be: [getTenantRectification, qn_id, report_id, tenant_id]",{"range":"590","text":"591"},"Update the dependencies array to be: [getTenantRectification, qn_id, report_id, resolvedState, tenant_id]",{"range":"592","text":"593"},[3627,3629],"[getAuditsTenant, getReport, getUserInfo, tenantId]",[702,704],"[getAccountInfo]",[1496,1498],"[getAudits, getReport, setAuditsState]",[2477,2479],"[createFbReportState, getFbChecklistQuestions, getUserInfo, tenantId]",[966,968],[873,875],"[getInstitutionTenants, institutionName]",[486,488],"[getAllChatsOfUser]",[926,941],"[getAccountInfo, toggleClicked]",[2584,2586],"[createSMAReportState, getSMAChecklistQuestions, getUserInfo, setTenantType, tenantId]",[2584,2586],"[createNonFbReportState, getNonFbChecklistQuestions, getUserInfo, setTenantType, tenantId]",[3542,3544],"[getQuestionInfo, getReportStats, getUserInfoNoParams, reportId]",[2659,2676],"[allTenantsState, chatSubmitState, getAllChatsOfUser, getAllTenants, setAllChatsOfUserState]",[1675,1677],"[getOriginalReport, getReport, reportId]",[2391,2408],"[chatSubmitState, getAllAvailableNotifications]",[4790,4792],[1183,1185],"[getUserInfo, target_id]",[5060,5062],"[getTenantRectification, qn_id, report_id, tenant_id]",[4168,4183],"[getTenantRectification, qn_id, report_id, resolvedState, tenant_id]"]