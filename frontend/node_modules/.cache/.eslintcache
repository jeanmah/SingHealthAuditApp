[{"/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/index.js":"1","/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/App.js":"2","/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/Context.js":"3","/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/pages/Tenant.js":"4","/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/pages/Account.js":"5","/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/pages/Institutions.js":"6","/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/pages/HomeAuditor.js":"7","/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/pages/FbChecklist.js":"8","/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/pages/EditAccount.js":"9","/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/pages/Error.js":"10","/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/pages/Loading.js":"11","/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/pages/Institution.js":"12","/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/pages/ManagerHome.js":"13","/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/pages/TenantHome.js":"14","/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/pages/Store.js":"15","/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/pages/EditPassword.js":"16","/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/pages/Chat.js":"17","/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/pages/AuditReport.js":"18","/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/components/testJwt/Login.js":"19","/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/components/testJwt/AuthenticatedRoute.js":"20","/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/data.js":"21","/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/AuthenticationService.js":"22","/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/Navbar.js":"23","/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/components/HomeCategories.js":"24","/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/components/Audits.js":"25","/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/components/HomeAuditorCards.js":"26","/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/styles.js":"27","/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/components/InstitutionsCards.js":"28","/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/components/Question.js":"29","/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/components/HomeAuditorTabs.js":"30","/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/components/TenantHomeCards.js":"31","/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/components/TenantHomeTabs.js":"32"},{"size":432,"mtime":1615629682191,"results":"33","hashOfConfig":"34"},{"size":2661,"mtime":1617898658729,"results":"35","hashOfConfig":"34"},{"size":11018,"mtime":1617891453769,"results":"36","hashOfConfig":"34"},{"size":8278,"mtime":1617892474004,"results":"37","hashOfConfig":"34"},{"size":2568,"mtime":1617719768857,"results":"38","hashOfConfig":"34"},{"size":1057,"mtime":1617719768858,"results":"39","hashOfConfig":"34"},{"size":1723,"mtime":1617884571466,"results":"40","hashOfConfig":"34"},{"size":3986,"mtime":1617891426288,"results":"41","hashOfConfig":"34"},{"size":3958,"mtime":1617865025545,"results":"42","hashOfConfig":"34"},{"size":103,"mtime":1615482392661,"results":"43","hashOfConfig":"34"},{"size":812,"mtime":1617719768858,"results":"44","hashOfConfig":"34"},{"size":2229,"mtime":1617719768858,"results":"45","hashOfConfig":"34"},{"size":405,"mtime":1617898892466,"results":"46","hashOfConfig":"34"},{"size":2583,"mtime":1617899745394,"results":"47","hashOfConfig":"34"},{"size":8322,"mtime":1617899764371,"results":"48","hashOfConfig":"34"},{"size":2179,"mtime":1617719768857,"results":"49","hashOfConfig":"34"},{"size":2373,"mtime":1617719768857,"results":"50","hashOfConfig":"34"},{"size":5839,"mtime":1617896978525,"results":"51","hashOfConfig":"34"},{"size":6811,"mtime":1617866443105,"results":"52","hashOfConfig":"34"},{"size":403,"mtime":1617719768844,"results":"53","hashOfConfig":"34"},{"size":15417,"mtime":1617898878050,"results":"54","hashOfConfig":"34"},{"size":1977,"mtime":1617719768843,"results":"55","hashOfConfig":"34"},{"size":3169,"mtime":1617719768843,"results":"56","hashOfConfig":"34"},{"size":508,"mtime":1615637216653,"results":"57","hashOfConfig":"34"},{"size":1043,"mtime":1617719768843,"results":"58","hashOfConfig":"34"},{"size":3915,"mtime":1617866758211,"results":"59","hashOfConfig":"34"},{"size":1032,"mtime":1617866578963,"results":"60","hashOfConfig":"34"},{"size":4255,"mtime":1617719768844,"results":"61","hashOfConfig":"34"},{"size":7006,"mtime":1617893776438,"results":"62","hashOfConfig":"34"},{"size":4271,"mtime":1617719768844,"results":"63","hashOfConfig":"34"},{"size":3214,"mtime":1617883134017,"results":"64","hashOfConfig":"34"},{"size":4942,"mtime":1617898012196,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"19x7rlu",{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"68"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"68"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"68"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"68"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"68"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"68"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"68"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"68"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"68"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"68"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"68"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"68"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"68"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154"},"/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/index.js",[],["155","156"],"/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/App.js",["157"],"//import logo from \"./logo.svg\";\nimport React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport Account from \"./pages/Account\";\nimport Tenant from \"./pages/Tenant\";\nimport Error from \"./pages/Error\";\nimport Institutions from \"./pages/Institutions\";\nimport Institution from \"./pages/Institution\";\nimport FbChecklist from \"./pages/FbChecklist\";\nimport AuthenticatedRoute from \"./components/testJwt/AuthenticatedRoute\";\nimport LoginComponent from \"./components/testJwt/Login\";\nimport HomeAuditor from \"./pages/HomeAuditor\";\nimport Loading from \"./pages/Loading\";\nimport AuditReport from \"./pages/AuditReport\";\nimport { ContextProvider } from \"./Context\";\nimport TenantHome from \"./pages/TenantHome\";\nimport ManagerHome from \"./pages/ManagerHome\";\nimport Store from \"./pages/Store\";\nimport EditAccount from \"./pages/EditAccount\";\nimport EditPassword from \"./pages/EditPassword\";\nimport Chat from \"./pages/Chat\";\n\nfunction App() {\n  return (\n    <Router>\n      <ContextProvider>\n        <Switch>\n          <Route exact path=\"/\" component={LoginComponent} />\n          <AuthenticatedRoute exact path=\"/home/a\" component={HomeAuditor} />\n          <AuthenticatedRoute exact path=\"/home/t\" component={TenantHome} />\n          <AuthenticatedRoute exact path=\"/home/m\" component={ManagerHome} />\n          <AuthenticatedRoute exact path=\"/account\" component={Account} />\n          <AuthenticatedRoute\n            exact\n            path=\"/edit_account\"\n            component={EditAccount}\n          />\n          <AuthenticatedRoute\n            exact\n            path=\"/edit_password\"\n            component={EditPassword}\n          />\n          <AuthenticatedRoute\n            exact\n            path=\"/institutions\"\n            component={Institutions}\n          />\n          <AuthenticatedRoute\n            exact\n            path=\"/institution/:institutionName\"\n            component={Institution}\n          />\n          <AuthenticatedRoute\n            exact\n            path=\"/tenant/:tenantId\"\n            component={Tenant}\n          />\n          <AuthenticatedRoute\n            exact\n            path=\"/tenant/fbChecklist/:tenantId\"\n            component={FbChecklist}\n          />\n          <AuthenticatedRoute\n            exact\n            path=\"/tenant/report/:reportId\"\n            component={AuditReport}\n          />\n          <AuthenticatedRoute exact path=\"/t/store\" component={Store} />\n          <AuthenticatedRoute exact path=\"/chat\" component={Chat} />\n          <AuthenticatedRoute exact path=\"/error\" component={Error} />\n        </Switch>\n      </ContextProvider>\n    </Router>\n  );\n}\n\nexport default App;\n","/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/Context.js",["158","159","160","161","162","163","164","165"],"import React, { useState, createContext, useCallback } from \"react\";\nimport { audits, fbChecklist, tenants, institutions } from \"./data\";\nimport axios from \"axios\";\nimport { Redirect } from \"react-router-dom\";\nimport AuthenticationService from \"./AuthenticationService\";\n\nexport const Context = createContext();\n\nexport const ContextProvider = (props) => {\n  const API_URL = \"http://localhost:8080\";\n\n  /*\n  =============== \n  BACKEND\n  ===============\n  */\n\n  /*\n  ---------------\n  FbChecklist\n  ---------------\n  */\n\n  const getAccountInfo = () => {\n    AuthenticationService.getStoredAxiosInterceptor();\n    // console.log(\"this is calling getAccountInfo\");\n    return axios\n      .get(`${API_URL}/account/getUserProfile`, {\n        params: {},\n      })\n      .then((response) => {\n        // console.log(\"Response from getUserProfile\", response.data);\n        setAccountState(response.data);\n      })\n      .catch(() => {\n        console.log(\"userProfile retrieval failed\");\n      });\n  };\n\n  const getAllChatsOfUser = () => {\n    AuthenticationService.getStoredAxiosInterceptor();\n    console.log(\"This is calling getAllChatsOfUser\");\n    return (\n      axios\n        .get(`${API_URL}/chat/getAllChatsOfUser`, {\n          params: {},\n        })\n        .then((response) => {\n          console.log(\"Response from getAllChatsOfUser\", response.data);\n          setAllChatsOfUserState(response.data);\n        })\n        // .then((response) => {\n        //   console.log(\"Response from getAllChatsOfUser\", response.data);\n        //   // Since the response.data is an array of chats, use map() to push chats into the state one by one\n        //   response.data.map(chat => {\n        //     setAllChatsOfUserState([]); // Before pushing, clear the original state\n        //     console.log(\"Pushing new chat: \" + chat.chat_id);\n        //     const chats = allChatsOfUserState;\n        //     chats.push(chat);\n        //     setAllChatsOfUserState(chats);\n        //   })\n        //   console.log(\"All chats pushed: \" + allChatsOfUserState);\n        //   console.log(\"Type of allChatsOfUserState: \" + typeof allChatsOfUserState);\n        //   console.log(\"Chat in chats: \" + allChatsOfUserState[0]);\n        //   console.log(\"Chat in chats: \" + allChatsOfUserState[0].chat_id);\n        // })\n        .catch(() => {\n          console.log(\"allChatsOfUser retrieval failed\");\n        })\n    );\n  };\n\n  //function to get Fb Checklist questions\n  const getFbChecklistQuestions = () => {\n    AuthenticationService.getStoredAxiosInterceptor();\n    //   return axios\n    //     .get(`${API_URL}/report/getAllQuestions`, {\n    //       params: { type: \"FB\" },\n    //     })\n    //     .then((response) => {\n    //       setFbChecklistState(response.data);\n    //       createFbReportState(response.data);\n    //     })\n    //     .catch(() => {\n    //       console.log(\"fb checklist retrieval failed\");\n    //     });\n    // }, []);\n\n    return axios.get(`${API_URL}/report/getAllQuestions`, {\n      params: { type: \"FB\" },\n    });\n  };\n\n  //function to submit FbChecklist report to compute the score\n  const submitFbReport = useCallback((tenantid, fbreport) => {\n    console.log(fbreport);\n    let FormData = require(\"form-data\");\n    let formdata = new FormData();\n    formdata.append(\"checklist\", JSON.stringify(fbreport));\n    return axios\n      .post(\n        `${API_URL}/report/postReportSubmission?type=FB&tenant_id=${tenantid}&remarks=`,\n        formdata,\n        {\n          headers: {\n            \"Content-Type\": `multipart/form-data; boundary=${formdata._boundary}`,\n          },\n          // params: { type: \"FB\", tenant_id: t_id, remarks: \"\" },\n          // data: formdata,\n        }\n      )\n      .then((response) => {\n        console.log(response);\n        // if (response.status === 200) {\n        //   return <Redirect to={`/tenant/${tenantid}`} />;\n        // }\n      })\n      .catch(() => {\n        console.log(\"Failed FB report submission\");\n      });\n  });\n\n  /*\n  ---------------\n  Institution\n  ---------------\n  */\n\n  //function to get tenants in a particular institution\n  const getInstitutionTenants = (name) => {\n    AuthenticationService.getStoredAxiosInterceptor();\n    console.log(name);\n    return axios.get(`${API_URL}/account/getAllTenantsOfBranch`, {\n      params: { branch_id: name },\n    });\n  };\n  /*\n  --------------- \n  Tenant\n  ---------------\n  */\n  //function to get user info given user id\n  const getUserInfo = (userId) => {\n    AuthenticationService.getStoredAxiosInterceptor();\n\n    return axios.get(`${API_URL}/account/getUserProfile`, {\n      params: { user_id: parseInt(userId) },\n    });\n  };\n\n  const getUserInfoNoParams = () => {\n    AuthenticationService.getStoredAxiosInterceptor();\n    return axios.get(`${API_URL}/account/getUserProfile`);\n  };\n\n  /*\n  --------------------- \n  Home Auditor & Tenant\n  ----------------------\n  */\n\n  //function to get all the audits done given auditor's username\n  const getAudits = (userName) => {\n    AuthenticationService.getStoredAxiosInterceptor();\n    return axios.get(`${API_URL}/report/getReportIDs`, {\n      params: { username: userName, type: \"ALL\" },\n    });\n  };\n\n  const getTenantAudits = (tenantid) => {\n    AuthenticationService.getStoredAxiosInterceptor();\n    return axios.get(`${API_URL}/report/getReportIDs`, {\n      params: { user_id: tenantid, type: \"ALL\" },\n    });\n  };\n\n  // const getClosedTenantAudits = (tenantid) => {\n  //   AuthenticationService.getStoredAxiosInterceptor();\n  //   return axios.get(`${API_URL}/report/getReportIDs`, {\n  //     params: { user_id: tenantid, type: \"CLOSED\" },\n  //   });\n  // };\n\n  const getReport = (reportId) => {\n    AuthenticationService.getStoredAxiosInterceptor();\n    return axios.get(`${API_URL}/report/getReport`, {\n      params: { report_id: parseInt(reportId) },\n    });\n  };\n\n  const getReportStats = (reportId) => {\n    AuthenticationService.getStoredAxiosInterceptor();\n    return axios.get(`${API_URL}/report/getReportStatistics`, {\n      params: { report_id: parseInt(reportId) },\n    });\n  };\n\n  const getReportEntry = (reportId, entryId) => {\n    AuthenticationService.getStoredAxiosInterceptor();\n    return axios.get(`${API_URL}/report/getReportEntry`, {\n      params: { report_id: parseInt(reportId), entry_id: entryId },\n    });\n  };\n\n  // const filterAudits = (category) => {\n  //   console.log(auditsState);\n  // };\n\n  /*\n  =============== \n  FRONTEND\n  ===============\n  */\n  //FRONTEND STATES AND FUNCTIONS\n  //state for report ids\n  const [reportIdsState, setReportIdsState] = useState();\n  //state for report\n  const [fbReportState, setFbReportState] = useState([]);\n  //state to keep track of audit\n  const [auditsState, setAuditsState] = useState();\n  //state to keep track of all tenants\n  const [tenantState, setTenantState] = useState();\n  //state for fbChecklist\n\n  //state for institutions\n  //const [institutionsState, setInstitutionstate] = useState(institutions);\n  //state for account\n  const [accountState, setAccountState] = useState([]);\n  //state for chats of user\n  const [allChatsOfUserState, setAllChatsOfUserState] = useState([]);\n  //state of comments in modal\n  const [comment, setComment] = useState(\"\");\n\n  //function to prepare report state\n  const createFbReportState = useCallback((checklist, response) => {\n    console.log(checklist);\n    //create temporary array\n    let array = [];\n    checklist.forEach((question) => {\n      const { fb_qn_id } = question;\n      array.push({\n        qn_id: fb_qn_id,\n        status: true,\n        severity: 0,\n        remarks: \"\",\n        images: \"\",\n      });\n    });\n    //set fbreportstate to array\n    setFbReportState(array);\n  }, []);\n\n  //function to update audits state\n  // const updateAudit = (\n  //   tenantid,\n  //   type,\n  //   tenantname,\n  //   // timeremaining,\n  //   status\n  //   // date\n  // ) => {\n  //   const tenantObject = tenantsState.find(\n  //     (tenant) => tenant.tenantid === tenantid\n  //   );\n  //   const tenantFbChecklist = tenantObject.fbChecklist;\n  //   let score = tenantFbChecklist.reduce((total, question) => {\n  //     if (question.checked === true) {\n  //       total += 1;\n  //     }\n  //     return total;\n  //   }, 0);\n\n  //   setAuditsState((prevAudits) => {\n  //     return [\n  //       ...prevAudits,\n  //       {\n  //         tenantid: tenantid,\n  //         type: type,\n  //         tenantname: tenantname,\n  //         // timeremaining: timeremaining,\n  //         status: status,\n  //         // date: date,\n  //         institution: tenantObject.institution,\n  //         score: score,\n  //       },\n  //     ];\n  //   });\n  // };\n\n  //function to reset tenant's fb checklist checked values\n  // const resetTenantFbChecklist = (tenantId) => {\n  //   const tenantObject = tenantsState.find(\n  //     (tenant) => tenant.tenantid === tenantId\n  //   );\n  //   //fbchecklist property for a tenant\n  //   const tenantFbChecklist = tenantObject.fbChecklist;\n  //   //reset each checked to false\n  //   tenantFbChecklist.forEach((question) => {\n  //     question.checked = false;\n  //   });\n  //   // //get tenants array without tenantObject\n  //   // const remainingTenants = tenantsState.filter((tenant) => {\n  //   //   return tenant.tenantid !== tenantId;\n  //   // });\n  //   // //update state with newTenantObject\n  //   // setTenantsState([...remainingTenants, tenantObject]);\n  // };\n\n  //functions to update tenant comment property\n  // const updateTenantComment = (tenantId, questionId) => {\n  //   //find object with specific tenantId\n  //   const tenantObject = tenantsState.find((tenant) => {\n  //     return tenant.tenantid === tenantId;\n  //   });\n  //   //fbchecklist property for a tenant\n  //   const tenantFbChecklist = tenantObject.fbChecklist;\n  //   //find question within the array of questions\n  //   const checklistQuestion = tenantFbChecklist.find((question) => {\n  //     return question.id === questionId;\n  //   });\n  //   //update checked property\n  //   checklistQuestion.comment = comment;\n  //   console.log(tenantId, questionId);\n  //   console.log(tenantObject);\n  //   console.log(tenantsState);\n  // };\n\n  return (\n    <Context.Provider\n      value={{\n        // openQuestionModal,\n        // closeQuestionModal,\n        tenantState,\n        setTenantState,\n        auditsState,\n        setAuditsState,\n        // resetTenantFbChecklist,\n\n        comment,\n        setComment,\n        // updateTenantComment,\n        getFbChecklistQuestions,\n\n        accountState,\n        setAccountState,\n        getAccountInfo,\n\n        allChatsOfUserState,\n        setAllChatsOfUserState,\n        getAllChatsOfUser,\n\n        fbReportState,\n        setFbReportState,\n        createFbReportState,\n        submitFbReport,\n        getInstitutionTenants,\n        getUserInfo,\n        getUserInfoNoParams,\n        getAudits,\n        getReport,\n        // getClosedTenantAudits,\n        getTenantAudits,\n        getReportStats,\n        getReportEntry,\n      }}\n    >\n      {props.children}\n    </Context.Provider>\n  );\n};\n","/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/pages/Tenant.js",["166"],"import React, { useContext, useEffect, useState } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { Context } from \"../Context\";\nimport Navbar from \"../Navbar\";\nimport Loading from \"./Loading\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport ExpandLess from \"@material-ui/icons/ExpandLess\";\nimport ExpandMore from \"@material-ui/icons/ExpandMore\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport QuestionAnswerIcon from \"@material-ui/icons/QuestionAnswer\";\nimport HistoryIcon from \"@material-ui/icons/History\";\nimport AssignmentTurnedInIcon from \"@material-ui/icons/AssignmentTurnedIn\";\nimport FastfoodIcon from \"@material-ui/icons/Fastfood\";\nimport StoreIcon from \"@material-ui/icons/Store\";\nimport LocalHospitalIcon from \"@material-ui/icons/LocalHospital\";\nimport Grid from \"@material-ui/core/Grid\";\nimport ReceiptIcon from \"@material-ui/icons/Receipt\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    padding: theme.spacing(4, 0, 10, 0),\n  },\n  list: {\n    width: \"100%\",\n    maxWidth: 800,\n    backgroundColor: theme.palette.background.paper,\n    // margin: theme.spacing(4, 0, 10, 0),\n  },\n  nested: {\n    paddingLeft: theme.spacing(4),\n  },\n  header: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(2, 0, 2, 0),\n  },\n  listItem: {\n    padding: theme.spacing(2, 2, 2, 2),\n  },\n}));\n\nfunction Tenant() {\n  //get tenantid from url\n  const { tenantId } = useParams();\n  // console.log(tenantId);\n  //tenant state\n  const [tenantState, setTenantState] = useState();\n  const [tenantAudits, setTenantAudits] = useState();\n  const [openChecklist, setOpenChecklist] = useState(false);\n  const [openPrevAudits, setOpenPrevAudits] = useState(false);\n  //Context: getUserInfo method\n  const { getUserInfo, getTenantAudits, getReport } = useContext(Context);\n\n  const classes = useStyles();\n\n  useEffect(() => {\n    getUserInfo(tenantId)\n      .then((response) => {\n        // console.log(response);\n        setTenantState(response.data);\n      })\n      .catch(() => {\n        console.log(\"Failed to retrieve tenant info\");\n      });\n\n    // console.log(tenantId);\n\n    async function getResponse() {\n      try {\n        const reportIdArray = await getTenantAudits(tenantId).then(\n          (response) => {\n            console.log(response);\n\n            if (response.data.LATEST === -1) {\n              return [...response.data.CLOSED.past_audits];\n            }\n\n            return [...response.data.CLOSED.past_audits, response.data.LATEST];\n\n            // return [response.data.LATEST, ...response.data.CLOSED];\n          }\n        );\n        console.log(reportIdArray);\n        // console.log(reportIdArray);\n        //initialize array to store all objects of report info\n        let reportInfoArray = [];\n\n        for (let i = 0; i < reportIdArray.length; i++) {\n          let reportInfo = await getReport(reportIdArray[i]).then(\n            (response) => {\n              return response.data;\n            }\n          );\n          reportInfoArray.push(reportInfo);\n        }\n\n        if (reportInfoArray.length === reportIdArray.length) {\n          console.log(reportInfoArray);\n          setTenantAudits(reportInfoArray);\n        }\n      } catch (err) {\n        console.log(err);\n      }\n    }\n    getResponse();\n  }, []);\n\n  const handleChecklistClick = () => {\n    setOpenChecklist(!openChecklist);\n  };\n  const handlePrevAuditsClick = () => {\n    setOpenPrevAudits(!openPrevAudits);\n  };\n\n  return (\n    <div>\n      {tenantState && tenantAudits ? (\n        <>\n          <Navbar />\n          <Box className={classes.header} textAlign=\"center\" boxShadow={1}>\n            <Typography variant=\"h5\">{tenantState.store_name}</Typography>\n          </Box>\n          <Grid container className={classes.root}>\n            <List\n              component=\"nav\"\n              aria-labelledby=\"nested-list-subheader\"\n              className={classes.list}\n            >\n              <ListItem button divider={true} className={classes.listItem}>\n                <ListItemIcon>\n                  <QuestionAnswerIcon color=\"primary\" />\n                </ListItemIcon>\n                <ListItemText primary=\"View Chats\" />\n              </ListItem>\n              <ListItem\n                button\n                onClick={handlePrevAuditsClick}\n                divider={true}\n                className={classes.listItem}\n              >\n                <ListItemIcon>\n                  <HistoryIcon color=\"primary\" />\n                </ListItemIcon>\n                <ListItemText primary=\"View Previous Audits\" />\n                {openPrevAudits ? <ExpandLess /> : <ExpandMore />}\n              </ListItem>\n              <Collapse in={openPrevAudits} timeout=\"auto\" unmountOnExit>\n                {tenantAudits.map((audit, index) => {\n                  const {\n                    open_date,\n                    overall_score,\n                    report_id,\n                    report_type,\n                    overall_status,\n                  } = audit;\n                  return (\n                    <Link to={`/tenant/report/${report_id}`}>\n                      <List component=\"div\" disablePadding>\n                        <ListItem button className={classes.nested}>\n                          <ListItemIcon>\n                            <ReceiptIcon color=\"secondary\" />\n                          </ListItemIcon>\n                          {report_type === \"FB\" && (\n                            <ListItemText\n                              primary={`F&B Checklist conducted on ${new Date(\n                                open_date\n                              ).toString()}`}\n                              secondary={\n                                overall_status === 0\n                                  ? `Score: ${overall_score} (UNRESOLVED)`\n                                  : `Score: ${overall_score}`\n                              }\n                            />\n                          )}\n                        </ListItem>\n                      </List>\n                    </Link>\n                  );\n                })}\n              </Collapse>\n              <ListItem\n                button\n                onClick={handleChecklistClick}\n                divider={true}\n                className={classes.listItem}\n              >\n                <ListItemIcon>\n                  <AssignmentTurnedInIcon color=\"primary\" />\n                </ListItemIcon>\n                <ListItemText primary=\"Select Checklist\" />\n                {openChecklist ? <ExpandLess /> : <ExpandMore />}\n              </ListItem>\n\n              <Collapse in={openChecklist} timeout=\"auto\" unmountOnExit>\n                <List component=\"div\" disablePadding>\n                  <Link to={`/tenant/fbChecklist/${tenantId}`}>\n                    <ListItem button className={classes.nested}>\n                      <ListItemIcon>\n                        <FastfoodIcon color=\"secondary\" />\n                      </ListItemIcon>\n                      <ListItemText primary=\"Conduct F&B Audit\" />\n                    </ListItem>\n                  </Link>\n                  <ListItem button className={classes.nested}>\n                    <ListItemIcon>\n                      <StoreIcon color=\"secondary\" />\n                    </ListItemIcon>\n                    <ListItemText primary=\"Conduct Non-F&B Audit\" />\n                  </ListItem>\n                  <ListItem button className={classes.nested}>\n                    <ListItemIcon>\n                      <LocalHospitalIcon color=\"secondary\" />\n                    </ListItemIcon>\n                    <ListItemText primary=\"Conduct Safe Managment Audit\" />\n                  </ListItem>\n                </List>\n              </Collapse>\n            </List>\n          </Grid>\n        </>\n      ) : (\n        <Loading />\n      )}\n    </div>\n  );\n}\n\nexport default Tenant;\n","/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/pages/Account.js",["167","168"],"import React, { useEffect, useContext } from \"react\";\nimport { Link } from 'react-router-dom';\nimport { Typography, Button } from \"@material-ui/core\";\n\nimport { Context } from \"../Context\";\nimport Navbar from \"../Navbar\";\nimport useStyles from \"../styles\";\nimport { FormGroup } from \"@material-ui/core\";\n\nfunction Account() {\n  const {\n    accountState,\n    getAccountInfo\n  } = useContext(Context);\n\n  // All possible account info categories for 3 types of users\n  const {\n    acc_id,\n    branch_id,\n    employee_id,\n    email,\n    username,\n    first_name,\n    last_name,\n    hp,\n    mgr_id,\n    role_id,\n    store_id,\n    type_id,\n  } = accountState;\n\n  useEffect(() => {\n    getAccountInfo();\n  }, []);\n\n  const styles = useStyles();\n  const API_URL = \"http://localhost:8080\";\n\n  // Used to generate one category of account info\n  // Filter out those empty categories\n  const AccountInfo = (props) => {\n    if (props.info != null) {\n      return <Typography align=\"center\">{props.category}: {props.info}</Typography>;\n    } else {\n      return null;\n    };\n  };\n\n  return (\n    <main className={styles.main}>\n      <Navbar />\n      <br />\n      <Typography variant=\"h3\" align='center'>Account</Typography>\n      <br />\n      <AccountInfo category=\"Username\" info={username}/>\n      <AccountInfo category=\"First Name\" info={first_name}/>\n      <AccountInfo category=\"Last Name\" info={last_name}/>\n      <br />\n      <AccountInfo category=\"Email\" info={email}/>\n      <AccountInfo category=\"Contact Number\" info={hp}/>\n      <AccountInfo category=\"Role\" info={role_id}/>\n      <br />\n      <AccountInfo category=\"Account ID\" info={acc_id}/>\n      <AccountInfo category=\"Branch ID\" info={branch_id}/>\n      <AccountInfo category=\"Employee ID\" info={employee_id} />\n      <AccountInfo category=\"Mgr ID\" info={mgr_id}/>\n      <AccountInfo category=\"Store ID\" info={store_id}/>\n      <AccountInfo category=\"Store Type\" info={type_id}/>\n      <br />\n      <FormGroup column=\"true\">\n        <Button\n          className={styles.buttons}\n          align=\"center\"\n          variant=\"outlined\"\n          fullWidth\n          color=\"primary\"\n        >\n          <Link to=\"/edit_account\">\n            Edit Account\n          </Link>\n        </Button>\n        <Button\n          className={styles.buttons}\n          align=\"center\"\n          variant=\"outlined\"\n          fullWidth\n          color=\"secondary\"\n        >\n          <Link to=\"/edit_password\">\n            Edit Password\n          </Link>\n        </Button>\n\n      </FormGroup>\n\n    </main>\n  );\n}\n\nexport default Account;\n","/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/pages/Institutions.js",["169","170","171"],"import React from \"react\";\nimport { institutions } from \"../data\";\nimport { Link } from \"react-router-dom\";\nimport { FaAngleRight } from \"react-icons/fa\";\nimport Navbar from \"../Navbar\";\nimport InstitutionsCards from \"../components/InstitutionsCards\";\n\nfunction Institutions() {\n  return (\n    <div>\n      <Navbar />\n\n      {/* <div className=\"institutions-head\"> */}\n      <InstitutionsCards />\n      {/* {institutions.map((institution, index) => {\n          const { id, name, tenantNames, imageUrl } = institution;\n          return (\n            <Link key={index} to={`/institution/${name}`}>\n              <article key={id} className=\"institutions-institution\">\n                <img src={imageUrl} className=\"hospital-logo\"></img>\n                <header className=\"institutions-btn\">\n                  <span className=\"institutions-btnicon\">\n                    <FaAngleRight />\n                  </span>\n                </header>\n              </article>\n            </Link>\n          );\n        })} */}\n    </div>\n  );\n}\n\nexport default Institutions;\n","/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/pages/HomeAuditor.js",["172"],"import React, { useEffect, useContext } from \"react\";\nimport HomeAuditorCards from \"../components/HomeAuditorCards\";\nimport HomeAuditorTabs from \"../components/HomeAuditorTabs\";\nimport Navbar from \"../Navbar\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { Context } from \"../Context\";\nimport Loading from \"./Loading\";\n\nfunction HomeAuditor() {\n  const { getAudits, auditsState, setAuditsState, getReport } = useContext(\n    Context\n  );\n\n  useEffect(() => {\n    const username = sessionStorage.getItem(\"authenticatedUser\");\n\n    async function getResponse() {\n      try {\n        const reportIdArray = await getAudits(username).then((response) => {\n          console.log(response);\n          return [\n            ...response.data.CLOSED.completed_audits,\n            ...response.data.OPEN.outstanding_audits,\n          ];\n        });\n        //initialize array to store all objects of report info\n        let reportInfoArray = [];\n\n        for (let i = 0; i < reportIdArray.length; i++) {\n          let reportInfo = await getReport(reportIdArray[i]).then(\n            (response) => {\n              console.log(response);\n              return response.data;\n            }\n          );\n          reportInfoArray.push(reportInfo);\n        }\n\n        //set state of audits to be an array of report info objects\n        setAuditsState(reportInfoArray);\n      } catch (err) {\n        console.log(err);\n      }\n    }\n    getResponse();\n  }, []);\n\n  return (\n    <div>\n      {auditsState ? (\n        <>\n          <CssBaseline />\n          <Navbar />\n          <HomeAuditorTabs />\n          <HomeAuditorCards />\n        </>\n      ) : (\n        <Loading />\n      )}\n    </div>\n  );\n}\n\nexport default HomeAuditor;\n","/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/pages/FbChecklist.js",["173","174"],"import React, { useState, useContext, useEffect, useCallback } from \"react\";\nimport { useParams, Link } from \"react-router-dom\";\nimport Question from \"../components/Question\";\nimport { Context } from \"../Context\";\nimport Loading from \"./Loading\";\nimport Navbar from \"../Navbar\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport Box from \"@material-ui/core/Box\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\n\nimport Typography from \"@material-ui/core/Typography\";\n\n//styling for the fbchecklist page\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    padding: theme.spacing(4, 0, 10, 0),\n  },\n  list: {\n    width: \"100%\",\n    maxWidth: 800,\n    backgroundColor: theme.palette.background.paper,\n    display: \"flex\",\n    flexDirection: \"column\",\n\n    // alignItems: \"center\",\n  },\n  button: {\n    color: \"#F15A22\",\n    fontWeight: \"medium\",\n    width: \"100%\",\n    // maxWidth: 800,\n    backgroundColor: theme.palette.background.paper,\n    height: 50,\n  },\n  header: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(2, 2, 2, 2),\n  },\n  link: {\n    width: \"100%\",\n    maxWidth: 800,\n    backgroundColor: theme.palette.background.paper,\n  },\n}));\n\nfunction FbChecklist() {\n  //use styles from function declared above\n  const classes = useStyles();\n  //get tenant id from url\n  const { tenantId } = useParams();\n\n  //Context\n  const {\n    getFbChecklistQuestions,\n    createFbReportState,\n    getUserInfo,\n    fbReportState,\n    submitFbReport,\n  } = useContext(Context);\n\n  //state to update fb checklist questions\n  const [fbChecklistState, setFbChecklistState] = useState();\n  const [tenantName, setTenantName] = useState();\n\n  useEffect(() => {\n    //function to retrieve questions\n    async function getTenantName() {\n      try {\n        const tenant_name = await getUserInfo(tenantId).then((response) => {\n          return response.data.store_name;\n        });\n        console.log(tenant_name);\n        setTenantName(tenant_name);\n      } catch (err) {\n        console.log(err);\n      }\n    }\n    getTenantName();\n    getFbChecklistQuestions()\n      .then((response) => {\n        setFbChecklistState(response.data);\n        createFbReportState(response.data);\n      })\n      .catch(() => {\n        console.log(\"fb checklist retrieval failed\");\n      });\n  }, []);\n\n  const handleSubmit = (tenantid, report) => {\n    submitFbReport(tenantid, report);\n  };\n\n  return (\n    <>\n      {fbChecklistState && tenantName ? (\n        <>\n          <Navbar />\n          <Box className={classes.header} textAlign=\"center\" boxShadow={1}>\n            <Typography variant=\"h5\">{tenantName} F&B Checklist</Typography>\n          </Box>\n\n          <Grid container className={classes.root}>\n            <List dense className={classes.list}>\n              {fbChecklistState.map((question, index) => {\n                const { fb_qn_id, requirement } = question;\n                const labelId = `checkbox-list-secondary-label-${fb_qn_id}`;\n                return (\n                  <>\n                    <Question\n                      key={fb_qn_id}\n                      fb_qn_id={fb_qn_id}\n                      requirement={requirement}\n                      labelId={labelId}\n                    />\n                  </>\n                );\n              })}\n            </List>\n            <Link to={`/tenant/${tenantId}`} className={classes.link}>\n              <Button\n                className={classes.button}\n                size=\"small\"\n                onClick={() => {\n                  handleSubmit(tenantId, fbReportState);\n                }}\n                // color=\"secondary\"\n              >\n                Submit\n              </Button>\n            </Link>\n          </Grid>\n        </>\n      ) : (\n        <Loading />\n      )}\n    </>\n  );\n}\n\nexport default FbChecklist;\n","/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/pages/EditAccount.js",["175"],"import React, { useState, useEffect, useContext } from \"react\";\nimport { Typography, Button, TextField, FormGroup } from \"@material-ui/core\";\nimport axios from \"axios\";\n\nimport { Context } from \"../Context\";\nimport Navbar from \"../Navbar\";\nimport useStyles from \"../styles\";\n\nfunction EditAccount() {\n\n  const {\n    accountState,\n    getAccountInfo\n  } = useContext(Context);\n\n  // All possible account info categories for 3 types of users\n  const {\n    acc_id,\n    branch_id,\n    employee_id,\n    email,\n    username,\n    first_name,\n    last_name,\n    hp,\n    mgr_id,\n    role_id,\n    store_id,\n    type_id,\n  } = accountState;\n\n  const [usernameState, setUsernameState] = useState(username);\n  const [firstnameState, setFirstnameState] = useState(first_name);\n  const [lastnameState, setLastnameState] = useState(last_name);\n  const [emailState, setEmailState] = useState(email);\n  const [hpState, setHpState] = useState(hp);\n\n  useEffect(() => {\n    getAccountInfo();\n  }, []);\n\n  const API_URL = \"http://localhost:8080\";\n  const styles = useStyles();\n  const disabledInfo = [\n    \"Role\", \n    \"Account ID\", \n    \"Employee ID\", \n    \"Branch ID\", \n    \"Mgr ID\", \n    \"Store ID\", \n    \"Store Type\"\n  ];\n\n  const EditAccountInfo = (props) => {\n    if (props.info == null) {\n      return null\n    } else if (disabledInfo.includes(props.category)) {\n      return <TextField \n        label={props.category} \n        defaultValue={props.info} \n        disabled={true}\n      />\n    } else {\n      console.log(\"You shouldn't use this function.\")\n    }\n  }\n\n  function postAccountChange(newUsername, newFirstName, newLastName, newEmail, newHp) {\n    console.log(\"This is posting account changes\");\n    let payload = {\n      username: newUsername,\n      first_name: newFirstName,\n      last_name: newLastName,\n      email: newEmail,\n      hp: newHp,\n    };\n    console.log(payload);\n    let FormData = require(\"form-data\");\n    let formdata = new FormData();\n    formdata.append(\"changes\", JSON.stringify(payload));\n    return axios\n      .post(\n        `${API_URL}/account/postProfileUpdate`,\n        formdata,\n        {\n          headers: {\n            \"Content-Type\": `multipart/form-data; boundary=${formdata._boundary}`,\n          },\n        }\n      )\n      .then((response) => {\n        console.log(response);\n      })\n      .catch(() => {\n        console.log(\"Failed account change submission\");\n      });\n  }\n\n  return (\n    <main className={styles.main}>\n      <Navbar />\n      <br />\n      <Typography variant=\"h3\" align=\"center\">Edit Account</Typography>\n      <FormGroup column=\"true\">\n        <TextField label=\"Username\" onChange={(e) => setUsernameState(e.target.value)} />\n        <TextField label=\"First Name\" onChange={(e) => setFirstnameState(e.target.value)} />\n        <TextField label=\"Last Name\" onChange={(e) => setLastnameState(e.target.value)} />\n        <TextField label=\"Email\" onChange={(e) => setEmailState(e.target.value)} />\n        <TextField label=\"Contact Number\" onChange={(e) => setHpState(e.target.value)} />\n        <br />\n        <EditAccountInfo category=\"Role\" info={role_id}/>\n        <EditAccountInfo category=\"Account ID\" info={acc_id}/>\n        <EditAccountInfo category=\"Branch ID\" info={branch_id}/>\n        <EditAccountInfo category=\"Employee ID\" info={employee_id} />\n        <EditAccountInfo category=\"Mgr ID\" info={mgr_id}/>\n        <EditAccountInfo category=\"Store ID\" info={store_id}/>\n        <EditAccountInfo category=\"Store Type\" info={type_id}/>\n        <br />\n      </FormGroup>\n      <Button\n        className={styles.buttons}\n        align=\"center\"\n        variant=\"outlined\"\n        color=\"primary\"\n        fullWidth\n        onClick={() => \n          postAccountChange(\n            usernameState,\n            firstnameState,\n            lastnameState,\n            emailState,\n            hpState,\n          )\n        }\n      >\n        Submit\n      </Button>\n    </main>\n  )\n}\n\nexport default EditAccount;","/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/pages/Error.js",[],"/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/pages/Loading.js",[],"/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/pages/Institution.js",["176","177","178"],"import React, { useContext, useEffect, useState } from \"react\";\nimport { tenants, institutions } from \"../data\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { FaAngleRight } from \"react-icons/fa\";\nimport Navbar from \"../Navbar\";\nimport { Context } from \"../Context\";\nimport Loading from \"./Loading\";\n\nconst Institution = () => {\n  //obtain id which is indicated in the url\n  const { institutionName } = useParams();\n  const { getInstitutionTenants } = useContext(Context);\n  const [institutionState, setInstitutionState] = useState();\n  console.log(institutionName);\n  useEffect(() => {\n    getInstitutionTenants(institutionName)\n      .then((response) => {\n        //update state of institution tenants\n        setInstitutionState(response.data);\n      })\n      .catch(() => {\n        console.log(\"Failed to get tenants in the institution\");\n      });\n  }, []);\n\n  // array of one object which is the selected institution\n  const selectedInstitution = institutions.filter((institution) => {\n    const { name } = institution;\n    return institutionName === name;\n  });\n\n  return (\n    <div>\n      {institutionState ? (\n        <div>\n          <Navbar />\n          {selectedInstitution.map((institution, index) => {\n            const { id, name, imageUrl } = institution;\n            return (\n              <section key={id} className=\"institution-header\">\n                <img\n                  src={imageUrl}\n                  className=\"institution-logo\"\n                  alt=\"logo\"\n                ></img>\n              </section>\n            );\n          })}\n          {institutionState.map((tenant, index) => {\n            const { store_name, acc_id } = tenant;\n            return (\n              <>\n                <Link key={acc_id} to={`/tenant/${acc_id}`}>\n                  <section className=\"institution-tenant-resolved\">\n                    <div>{store_name}</div>\n                    <div className=\"institution-tenantbtn\">\n                      <FaAngleRight />\n                    </div>\n                  </section>\n                </Link>\n              </>\n            );\n          })}{\" \"}\n        </div>\n      ) : (\n        <Loading />\n      )}\n    </div>\n  );\n};\n\nexport default Institution;\n","/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/pages/ManagerHome.js",["179","180","181","182","183"],"import React, { useState } from \"react\";\nimport { audits } from \"../data\";\nimport { Link } from \"react-router-dom\";\nimport HomeCategories from \"../components/HomeCategories\";\nimport Audits from \"../components/Audits\";\nimport Navbar from \"../Navbar\";\n\nfunction ManagerHome() {\n  return (\n    <main>\n      <Navbar />\n      <div>This is manager homepage</div>\n    </main>\n  );\n}\n\nexport default ManagerHome;\n","/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/pages/TenantHome.js",["184"],"import React, { useEffect, useContext } from \"react\";\nimport TenantHomeCards from \"../components/TenantHomeCards\";\nimport Navbar from \"../Navbar\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { Context } from \"../Context\";\nimport Loading from \"./Loading\";\nimport TenantHomeTabs from \"../components/TenantHomeTabs\";\n\nfunction TenantHome() {\n  const {\n    getTenantAudits,\n    tenantState,\n    setTenantState,\n    getUserInfoNoParams,\n    getReport,\n  } = useContext(Context);\n\n  useEffect(() => {\n    async function getResponse() {\n      try {\n        const tenantId = await getUserInfoNoParams().then((response) => {\n          console.log(response);\n          return response.data.acc_id;\n        });\n        console.log(tenantId);\n        const reportIdArray = await getTenantAudits(tenantId).then(\n          (response) => {\n            console.log(response);\n            if (response.data.LATEST === -1 && response.data.OVERDUE === -1) {\n              return [...response.data.CLOSED.past_audits];\n            }\n            if (response.data.LATEST === -1) {\n              return [\n                ...response.data.CLOSED.past_audits,\n                response.data.OVERDUE,\n              ];\n            }\n            if (response.data.OVERDUE === -1) {\n              return [\n                ...response.data.CLOSED.past_audits,\n                response.data.LATEST,\n              ];\n            }\n            return [\n              ...response.data.CLOSED.past_audits,\n              response.data.LATEST,\n              response.data.OVERDUE,\n            ];\n            // return [response.data.LATEST, ...response.data.CLOSED];\n          }\n        );\n        console.log(reportIdArray);\n        //initialize array to store all objects of report info\n        let reportInfoArray = [];\n\n        for (let i = 0; i < reportIdArray.length; i++) {\n          let reportInfo = await getReport(reportIdArray[i]).then(\n            (response) => {\n              return response.data;\n            }\n          );\n          reportInfoArray.push(reportInfo);\n        }\n        if (reportInfoArray.length === reportIdArray.length) {\n          console.log(reportInfoArray);\n          setTenantState(reportInfoArray);\n        }\n      } catch (err) {\n        console.log(err);\n      }\n    }\n    getResponse();\n  }, []);\n  return (\n    <div>\n      {tenantState ? (\n        <>\n          <CssBaseline />\n          <Navbar />\n          <TenantHomeTabs />\n          <TenantHomeCards />\n        </>\n      ) : (\n        <Loading />\n      )}\n    </div>\n  );\n}\n\nexport default TenantHome;\n","/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/pages/Store.js",["185","186"],"import React, { useContext, useEffect, useState } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { Context } from \"../Context\";\nimport Navbar from \"../Navbar\";\nimport Loading from \"./Loading\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport ExpandLess from \"@material-ui/icons/ExpandLess\";\nimport ExpandMore from \"@material-ui/icons/ExpandMore\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport QuestionAnswerIcon from \"@material-ui/icons/QuestionAnswer\";\nimport HistoryIcon from \"@material-ui/icons/History\";\nimport AssignmentTurnedInIcon from \"@material-ui/icons/AssignmentTurnedIn\";\nimport FastfoodIcon from \"@material-ui/icons/Fastfood\";\nimport StoreIcon from \"@material-ui/icons/Store\";\nimport LocalHospitalIcon from \"@material-ui/icons/LocalHospital\";\nimport Grid from \"@material-ui/core/Grid\";\nimport ReceiptIcon from \"@material-ui/icons/Receipt\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    padding: theme.spacing(4, 0, 10, 0),\n  },\n  list: {\n    width: \"100%\",\n    maxWidth: 800,\n    backgroundColor: theme.palette.background.paper,\n    // margin: theme.spacing(4, 0, 10, 0),\n  },\n  nested: {\n    paddingLeft: theme.spacing(4),\n  },\n  header: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(2, 0, 2, 0),\n  },\n  listItem: {\n    padding: theme.spacing(2, 2, 2, 2),\n  },\n}));\n\nfunction Store() {\n  const [openChecklist, setOpenChecklist] = useState(false);\n  const [openPrevAudits, setOpenPrevAudits] = useState(false);\n  //Context: getUserInfo method\n  const {\n    tenantState,\n    getUserInfoNoParams,\n    getTenantAudits,\n    getReport,\n    setTenantState,\n  } = useContext(Context);\n\n  const classes = useStyles();\n\n  useEffect(() => {\n    async function getResponse() {\n      try {\n        const tenantId = await getUserInfoNoParams().then((response) => {\n          console.log(response);\n          return response.data.acc_id;\n        });\n        console.log(tenantId);\n        const reportIdArray = await getTenantAudits(tenantId).then(\n          (response) => {\n            console.log(response);\n            if (response.data.LATEST === -1 && response.data.OVERDUE === -1) {\n              return [...response.data.CLOSED.past_audits];\n            }\n            if (response.data.LATEST === -1) {\n              return [\n                ...response.data.CLOSED.past_audits,\n                response.data.OVERDUE,\n              ];\n            }\n            if (response.data.OVERDUE === -1) {\n              return [\n                ...response.data.CLOSED.past_audits,\n                response.data.LATEST,\n              ];\n            }\n            return [\n              ...response.data.CLOSED.past_audits,\n              response.data.LATEST,\n              response.data.OVERDUE,\n            ];\n          }\n        );\n        console.log(reportIdArray);\n        //initialize array to store all objects of report info\n        let reportInfoArray = [];\n\n        for (let i = 0; i < reportIdArray.length; i++) {\n          let reportInfo = await getReport(reportIdArray[i]).then(\n            (response) => {\n              return response.data;\n            }\n          );\n          reportInfoArray.push(reportInfo);\n        }\n        if (reportInfoArray.length === reportIdArray.length) {\n          console.log(reportInfoArray);\n          setTenantState(reportInfoArray);\n        }\n      } catch (err) {\n        console.log(err);\n      }\n    }\n    getResponse();\n  }, []);\n\n  const handleChecklistClick = () => {\n    setOpenChecklist(!openChecklist);\n  };\n  const handlePrevAuditsClick = () => {\n    setOpenPrevAudits(!openPrevAudits);\n  };\n\n  return (\n    <div>\n      {tenantState ? (\n        <>\n          <Navbar />\n          <Box className={classes.header} textAlign=\"center\" boxShadow={1}>\n            <Typography variant=\"h5\">{tenantState.store_name}</Typography>\n          </Box>\n          <Grid container className={classes.root}>\n            <List\n              component=\"nav\"\n              aria-labelledby=\"nested-list-subheader\"\n              className={classes.list}\n            >\n              <ListItem button divider={true} className={classes.listItem}>\n                <ListItemIcon>\n                  <QuestionAnswerIcon color=\"primary\" />\n                </ListItemIcon>\n                <ListItemText primary=\"View Chats\" />\n              </ListItem>\n              <ListItem\n                button\n                onClick={handlePrevAuditsClick}\n                divider={true}\n                className={classes.listItem}\n              >\n                <ListItemIcon>\n                  <HistoryIcon color=\"primary\" />\n                </ListItemIcon>\n                <ListItemText primary=\"View Previous Audits\" />\n                {openPrevAudits ? <ExpandLess /> : <ExpandMore />}\n              </ListItem>\n              <Collapse in={openPrevAudits} timeout=\"auto\" unmountOnExit>\n                {tenantState.map((audit, index) => {\n                  const {\n                    open_date,\n                    overall_score,\n                    report_id,\n                    report_type,\n                    overall_status,\n                  } = audit;\n                  return (\n                    <Link to={`/tenant/report/${report_id}`}>\n                      <List component=\"div\" disablePadding>\n                        <ListItem button className={classes.nested}>\n                          <ListItemIcon>\n                            <ReceiptIcon color=\"secondary\" />\n                          </ListItemIcon>\n                          {report_type === \"FB\" && (\n                            <ListItemText\n                              primary={`F&B Checklist conducted on ${new Date(\n                                open_date\n                              ).toString()}`}\n                              secondary={\n                                overall_status === 0\n                                  ? `Score: ${overall_score} (UNRESOLVED)`\n                                  : `Score: ${overall_score}`\n                              }\n                            />\n                          )}\n                        </ListItem>\n                      </List>\n                    </Link>\n                  );\n                })}\n              </Collapse>\n              <ListItem\n                button\n                onClick={handleChecklistClick}\n                divider={true}\n                className={classes.listItem}\n              >\n                <ListItemIcon>\n                  <AssignmentTurnedInIcon color=\"primary\" />\n                </ListItemIcon>\n                <ListItemText primary=\"Select Checklist\" />\n                {openChecklist ? <ExpandLess /> : <ExpandMore />}\n              </ListItem>\n\n              <Collapse in={openChecklist} timeout=\"auto\" unmountOnExit>\n                <List component=\"div\" disablePadding>\n                  <ListItem button className={classes.nested}>\n                    <ListItemIcon>\n                      <FastfoodIcon color=\"secondary\" />\n                    </ListItemIcon>\n                    <ListItemText primary=\"Conduct F&B Audit\" />\n                  </ListItem>\n\n                  <ListItem button className={classes.nested}>\n                    <ListItemIcon>\n                      <StoreIcon color=\"secondary\" />\n                    </ListItemIcon>\n                    <ListItemText primary=\"Conduct Non-F&B Audit\" />\n                  </ListItem>\n                  <ListItem button className={classes.nested}>\n                    <ListItemIcon>\n                      <LocalHospitalIcon color=\"secondary\" />\n                    </ListItemIcon>\n                    <ListItemText primary=\"Conduct Safe Managment Audit\" />\n                  </ListItem>\n                </List>\n              </Collapse>\n            </List>\n          </Grid>\n        </>\n      ) : (\n        <Loading />\n      )}\n    </div>\n  );\n}\nexport default Store;\n","/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/pages/EditPassword.js",["187","188","189"],"import React, { useState, useContext } from \"react\";\nimport { Typography, Button, TextField, FormGroup } from \"@material-ui/core\";\nimport axios from \"axios\";\n\nimport { Context } from \"../Context\";\nimport useStyles from \"../styles\";\nimport Navbar from \"../Navbar\";\n\nfunction EditPassword() {\n  const {\n    accountState,\n    getAccountInfo\n  } = useContext(Context);\n\n  const API_URL = \"http://localhost:8080\";\n  const [passwordState, setPasswordState] = useState(\"\");\n  const [confirmPasswordState, setConfirmPasswordState] = useState(\"\");\n  const styles = useStyles();\n\n  function submitNewPassword(newPassword, confirmedNewPassword) {\n    if (newPassword != confirmedNewPassword) {\n      console.log(\"Two passwords are not the same.\")\n    } else {\n      postPasswordChange(newPassword);\n      console.log(\"Password change updated.\")\n    }\n  }\n\n  function postPasswordChange(newPassword) {\n    console.log(\"This is posting password change\");\n    let FormData = require(\"form-data\");\n    let formdata = new FormData();\n    formdata.append(\"new_password\", newPassword);\n    return axios\n      .post(\n        `${API_URL}/account/postPasswordUpdate`,\n        formdata,\n        {\n          headers: {\n            \"Content-Type\": `multipart/form-data; boundary=${formdata._boundary}`,\n          },\n        }\n      )\n      .then((response) => {\n        console.log(response);\n      })\n      .catch(() => {\n        console.log(\"Failed password change submission\");\n      })\n  }\n\n  return (\n    <main className={styles.main}>\n      <Navbar />\n      <br />\n      <Typography variant=\"h3\" align=\"center\">Edit Password</Typography>\n      <FormGroup column=\"true\">\n        <TextField label=\"New Password\" onChange={(e) => setPasswordState(e.target.value)}/>\n        <TextField label=\"Confirm New Password\" onChange={(e) => setConfirmPasswordState(e.target.value)}/>\n      </FormGroup>\n      <Button \n        align=\"center\"\n        variant=\"outlined\"\n        color=\"primary\"\n        className={styles.buttons}\n        fullWidth\n        onClick={() => submitNewPassword(passwordState, confirmPasswordState)}\n      >\n        Submit\n      </Button>\n    </main>\n  )\n}\n\nexport default EditPassword;","/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/pages/Chat.js",["190","191","192","193"],"import React, { useEffect, useContext } from \"react\";\nimport { Link } from 'react-router-dom';\nimport { Typography, Button } from \"@material-ui/core\";\nimport axios from \"axios\";\n\nimport { Context } from \"../Context\";\nimport Navbar from \"../Navbar\";\nimport useStyles from \"../styles\";\nimport { FormGroup } from \"@material-ui/core\";\n\nfunction Chat() {\n\n  const {\n    allChatsOfUserState,\n    getAllChatsOfUser\n  } = useContext(Context);\n\n  useEffect(() => {\n    getAllChatsOfUser();\n  }, []);\n\n  const styles = useStyles();\n\n  // allChatsOfUserState.map(chat => {\n  //   console.log(\"chat: \" + chat);\n  //   console.log(\"chat ID: \" + chat.chat_id);\n  //   console.log(\"auditor ID: \" + chat.auditor_id);\n  //   console.log(\"tenant ID: \" + chat.tenant_id);\n  //   console.log(\"messages: \" + chat.messages);\n  // })\n\n  const ChatInfo = (props) => {\n    return (\n      <div>\n        <div>Chat ID: {props.chat_id}</div>\n        <div>Tenant ID: {props.tenant_id}</div>\n        <div>Auditor ID: {props.auditor_id}</div>\n        <div>Messages: {props.messages}</div>\n      </div>   \n    );\n  };\n\n  return (\n    <main className={styles.main}>\n      <Navbar />\n      <br />\n      <Typography variant=\"h3\" align=\"center\">Chat</Typography>\n      <Button\n        className={styles.buttons}\n        align=\"center\"\n        variant=\"outlined\"\n        color=\"primary\"\n        fullWidth\n        onClick={() => {\n          console.log(\"chatState: \" + allChatsOfUserState);\n          console.log(\"firstChat: \" + allChatsOfUserState[0]);\n          console.log(\"firstChatID: \" + allChatsOfUserState[0].chat_id);\n        }}\n      >\n        Get All Chats of User\n      </Button>\n\n      <div>\n        {allChatsOfUserState.map((chat, index) => {\n          console.log(\"Chats in chat page: \" + chat.chat_id);\n          console.log(\"Chat info: \" + chat);\n          return (\n            <ChatInfo key={index}\n              chat_id={chat.chat_id}\n              tenant_id={chat.tenant_id}\n              auditor_id={chat.auditor_id}\n              messages={chat.messages}\n            />\n          )\n        })}\n      </div>\n\n      {/* <ChatInfo \n        chat_id={allChatsOfUserState[0].chat_id}\n        tenant_id={allChatsOfUserState[0].tenant_id}\n        auditor_id={allChatsOfUserState[0].auditor_id}\n        messages={allChatsOfUserState[0].messages}\n      /> */}\n\n    </main>\n  )\n}\n\nexport default Chat;","/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/pages/AuditReport.js",["194","195","196","197","198"],"import React, { useEffect, useState, useContext } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport Navbar from \"../Navbar\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Context } from \"../Context\";\nimport Loading from \"./Loading\";\nimport Accordion from \"@material-ui/core/Accordion\";\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Avatar from \"@material-ui/core/Avatar\";\n\nconst useStyles = makeStyles((theme) => ({\n  header: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(2, 0, 2, 0),\n  },\n  root: {\n    width: \"100%\",\n    padding: theme.spacing(4, 0, 10, 0),\n  },\n  dropdownMain: {\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  dropdownContainer: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    margin: theme.spacing(0, 0, 0, 2),\n  },\n  textInfo: {\n    padding: theme.spacing(2, 0, 2, 0),\n    color: \"#F15A22\",\n  },\n  topText: {\n    color: \"#F15A22\",\n  },\n  textTenant: {\n    padding: theme.spacing(1, 0, 2, 2),\n    fontWeight: \"medium\",\n  },\n  tenantResponse: {\n    display: \"flex\",\n    padding: theme.spacing(2, 0, 2, 2),\n  },\n  avatar: {},\n}));\n\nfunction AuditReport() {\n  const { reportId } = useParams();\n  const { getReportStats, getReportEntry } = useContext(Context);\n  const classes = useStyles();\n  const [failedEntries, setFailedEntries] = useState();\n\n  useEffect(() => {\n    async function getResponse() {\n      try {\n        const entryArray = await getReportStats(reportId).then((response) => {\n          return response.data.Failed_Entries;\n        });\n        // console.log(entryArray);\n\n        let entryInfoArray = [];\n\n        for (let i = 0; i < entryArray.length; i++) {\n          // console.log(entryArray[i]);\n          // console.log(reportId);\n          let info = await getReportEntry(reportId, entryArray[i]).then(\n            (response) => {\n              // console.log(response);\n              return response;\n            }\n          );\n          entryInfoArray.push(info);\n        }\n        if (entryInfoArray.length === entryArray.length) {\n          console.log(entryInfoArray);\n          setFailedEntries(entryInfoArray);\n        }\n      } catch (err) {\n        console.error(err);\n      }\n    }\n    getResponse();\n  }, []);\n\n  return (\n    <div>\n      {failedEntries ? (\n        <>\n          <Navbar />\n          <Box className={classes.header} textAlign=\"center\" boxShadow={1}>\n            <Typography variant=\"h5\">Report Non-Compliance Overview</Typography>\n          </Box>\n          <Box className={classes.reportBasicInfo}></Box>\n          <div className={classes.root}>\n            {failedEntries.map((entry) => {\n              const { data } = entry;\n              let severity = data.severity / 1000000;\n              severity = Math.floor(severity);\n              let timeframe = \"\";\n              switch (severity) {\n                case 1:\n                  timeframe = \"3 weeks\";\n                  break;\n                case 2:\n                  timeframe = \"2 weeks\";\n                  break;\n                case 3:\n                  timeframe = \"1 week\";\n                  break;\n                case 4:\n                  timeframe = \"4 days\";\n                  break;\n                case 5:\n                  timeframe = \"1 day\";\n                  break;\n              }\n              return (\n                <Accordion>\n                  <AccordionSummary\n                    expandIcon={<ExpandMoreIcon />}\n                    aria-label=\"Expand\"\n                    aria-controls=\"additional-actions1-content\"\n                    id=\"additional-actions1-header\"\n                  >\n                    <ListItem>\n                      <ListItemText\n                        id={data.entry_id}\n                        primary={data.Requirement}\n                      />\n                    </ListItem>\n                  </AccordionSummary>\n                  <AccordionDetails className={classes.dropdownMain}>\n                    <div className={classes.dropdownContainer}>\n                      <Typography\n                        color=\"textSecondary\"\n                        variant=\"button\"\n                        className={classes.topText}\n                      >\n                        REMARKS: {data.remarks}\n                      </Typography>\n\n                      <Typography\n                        color=\"textSecondary\"\n                        variant=\"button\"\n                        className={classes.textInfo}\n                      >\n                        RECTIFICATION PERIOD: {timeframe}\n                      </Typography>\n                    </div>\n                    <div className={classes.tenantResponse}>\n                      <Avatar\n                        src=\"/broken-image.jpg\"\n                        className={classes.avatar}\n                      />\n                      <Typography\n                        color=\"textPrimary\"\n                        className={classes.textTenant}\n                      >\n                        Tenant Response:\n                      </Typography>\n                    </div>\n                  </AccordionDetails>\n                </Accordion>\n              );\n            })}\n          </div>\n        </>\n      ) : (\n        <Loading />\n      )}\n    </div>\n  );\n}\n\nexport default AuditReport;\n","/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/components/testJwt/Login.js",["199","200","201"],"import React, { Component, useState } from \"react\";\nimport {\n  Grid,\n  Link,\n  Paper,\n  CssBaseline,\n  Box,\n  Typography,\n  Avatar,\n  Button,\n  TextField,\n  FormControlLabel,\n  Checkbox,\n} from \"@material-ui/core\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport singhealthBackground from \"../../images/singhealth_building.png\";\n\nimport AuthenticationService from \"../../AuthenticationService\";\nimport useStyles from \"../../../src/styles\";\nimport { useHistory } from \"react-router\";\n\nfunction Login() {\n  const [usernameState, setUsernameState] = useState(\"\");\n  const [passwordState, setPasswordState] = useState(\"\");\n  const [hasLoginFailedState, setHasLoginFailedState] = useState(false);\n  const [showSuccessMessageState, setShowSuccessMessageState] = useState(false);\n\n  const styles = useStyles();\n  const history = useHistory();\n\n  const DisplayMessage = () => {\n    if (hasLoginFailedState) {\n      return (\n        <Typography align=\"center\" color=\"secondary\">\n          Invalid Credentials\n        </Typography>\n      );\n    } else if (showSuccessMessageState) {\n      return <Typography>Login Successful</Typography>;\n    } else {\n      return null;\n    }\n  };\n\n  function loginClicked() {\n    console.log(usernameState);\n    console.log(passwordState);\n    AuthenticationService.executeJwtAuthenticationService(\n      usernameState,\n      passwordState\n    )\n      .then((response) => {\n        console.log(response);\n        console.log(response.data);\n        AuthenticationService.registerSuccessfulLoginForJwt(\n          usernameState,\n          response.data.token\n        );\n\n        if (response.data.accountType === \"Auditor\") {\n          history.push(`/home/a`);\n        } else if (response.data.accountType === \"Tenant\") {\n          history.push(`/home/t`);\n        } else if (response.data.accountType === \"Manager\") {\n          history.push(`/home/m`);\n        }\n      })\n      .catch(() => {\n        setShowSuccessMessageState(false);\n        setHasLoginFailedState(true);\n      });\n  }\n\n  return (\n    <Grid container component=\"main\" className={styles.root}>\n      <CssBaseline />\n      <Grid item xs={false} sm={4} md={7} className={styles.image} />\n      <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n        <div className={styles.paper}>\n          <Avatar className={styles.avatar}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign in\n          </Typography>\n          <form className={styles.form} noValidate>\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"username\"\n              label=\"Username\"\n              name=\"username\"\n              autoComplete=\"username\"\n              autoFocus\n              value={usernameState}\n              onChange={(e) => setUsernameState(e.target.value)}\n            />\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              id=\"password\"\n              autoComplete=\"current-password\"\n              value={passwordState}\n              onChange={(e) => setPasswordState(e.target.value)}\n            />\n            <DisplayMessage />\n            <FormControlLabel\n              control={<Checkbox value=\"remember\" color=\"primary\" />}\n              label=\"Remember me\"\n            />\n            <Button\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={styles.submit}\n              onClick={() => loginClicked()}\n            >\n              Sign In\n            </Button>\n            <Grid container>\n              <Grid item xs>\n                <Link href=\"#\" variant=\"body2\">\n                  Forgot password?\n                </Link>\n              </Grid>\n              <Grid item>\n                <Link href=\"#\" variant=\"body2\">\n                  {\"Don't have an account? Sign Up\"}\n                </Link>\n              </Grid>\n            </Grid>\n            {/* <Box mt={5}>\n              <Copyright />\n            </Box> */}\n          </form>\n        </div>\n      </Grid>\n    </Grid>\n  );\n}\n\nclass LoginComponent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      username: \"\",\n      password: \"\",\n      hasLoginFailed: false,\n      showSuccessMessage: false,\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.loginClicked = this.loginClicked.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value,\n    });\n  }\n\n  loginClicked() {\n    console.log(this.state.username);\n    console.log(this.state.password);\n    AuthenticationService.executeJwtAuthenticationService(\n      this.state.username,\n      this.state.password\n    )\n      .then((response) => {\n        console.log(response);\n        console.log(response.data);\n        AuthenticationService.registerSuccessfulLoginForJwt(\n          this.state.username,\n          response.data.token\n        );\n\n        if (response.data.accountType === \"Auditor\") {\n          this.props.history.push(`/home/a`);\n        } else if (response.data.accountType === \"Tenant\") {\n          this.props.history.push(`/home/t`);\n        } else if (response.data.accountType === \"Manager\") {\n          this.props.history.push(`/home/m`);\n        }\n      })\n      .catch(() => {\n        this.setState({ showSuccessMessage: false });\n        this.setState({ hasLoginFailed: true });\n      });\n  }\n\n  render() {\n    return (\n      <div>\n        <h2>Login</h2>\n        <div className=\"container\">\n          {/*<ShowInvalidCredentials hasLoginFailed={this.state.hasLoginFailed}/>*/}\n          {this.state.hasLoginFailed && (\n            <div className=\"alert alert-warning\">Invalid Credentials</div>\n          )}\n          {this.state.showSuccessMessage && <div>Login Sucessful</div>}\n          {/*<ShowLoginSuccessMessage showSuccessMessage={this.state.showSuccessMessage}/>*/}\n          <div>\n            User Name:{\" \"}\n            <input\n              type=\"text\"\n              name=\"username\"\n              value={this.state.username}\n              onChange={this.handleChange}\n            />\n          </div>\n          <div>\n            Password:{\" \"}\n            <input\n              type=\"password\"\n              name=\"password\"\n              value={this.state.password}\n              onChange={this.handleChange}\n            />\n          </div>\n          <button className=\"btn btn-success\" onClick={this.loginClicked}>\n            Login\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Login;\n","/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/components/testJwt/AuthenticatedRoute.js",[],"/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/data.js",["202","203"],"import React from \"react\";\n\nconst users = [\n  {\n    username: \"hannz\",\n    password: \"test123\",\n    type: \"auditor\",\n  },\n  {\n    username: \"ZHZHZH\",\n    pasword: \"test123\",\n    type: \"tenant\",\n  },\n];\n\nexport const auditorAccountDatas = [\n  \"acc_id\", // 1003\n  \"appealed_audits\", // null\n  \"branch_id\", // \"*\"\n  \"completed_audits\", // null\n  \"email\", // \"jeanmah828@gmail.com\"\n  \"employee_id\", // 1004332\n  \"first_name\", // \"Hannah\"\n  \"hp\", // \"90270062\"\n  \"last_name\", // \"Mah\"\n  \"mgr_id\", // 1001\n  \"outstanding_audit_ids\", // null\n  \"role_id\", // \"Auditor\"\n  \"username\", // \"hannz\"\n];\n\nexport const tenantAccountDatas = [\n  \"acc_id\", //1004\n  \"audit_score\", //2\n  \"branch_id\", //\"CGH\"\n  \"email\", //\"yzh98640860@gmail.com\"\n  \"employee_id\", //1004516\n  \"first_name\", //\"Zhonghao\"\n  \"hp\", //\"98640860\"\n  \"last_name\", //\"Yang\"\n  \"last_audit\", //-1\n  \"past_audits\", //null\n  \"role_id\", //\"Tenant\"\n  \"store_addr\", //\"#01-20\"\n  \"type_id\", //\"FB\"\n  \"username\", //\"ZHZHZH\"\n];\n\nexport const managerAccountDatas = [\n  \"acc_id\", //1001\n  \"branch_id\", //\"HQ\"\n  \"email\", //\"marcushojww@gmail.com\"\n  \"employee_id\", //1002222\n  \"first_name\", //\"Marcus\"\n  \"hp\", //\"+65 432432\"\n  \"last_name\", //\"Ho\"\n  \"role_id\", //\"Manager\"\n  \"username\", //\"mcMarcus\"\n];\n\nexport const auditorNavLinks = [\n  {\n    id: 1,\n    url: \"/home/a\",\n    text: \"Home\",\n  },\n  {\n    id: 2,\n    url: \"/chat\",\n    text: \"Chat\",\n  },\n  {\n    id: 3,\n    url: \"/institutions\",\n    text: \"Institutions\",\n  },\n  {\n    id: 4,\n    url: \"/account\",\n    text: \"My Account\",\n  },\n];\n\nexport const tenantNavLinks = [\n  {\n    id: 1,\n    url: \"/home/t\",\n    text: \"Home\",\n  },\n  {\n    id: 2,\n    url: \"/chat\",\n    text: \"Chat\",\n  },\n  {\n    id: 3,\n    url: \"/t/store\",\n    text: \"My Store\",\n  },\n  {\n    id: 4,\n    url: \"/account\",\n    text: \"My Account\",\n  },\n];\n\nexport const managerNavLinks = [\n  {\n    id: 1,\n    url: \"/home/m\",\n    text: \"Home\",\n  },\n  {\n    id: 2,\n    url: \"/account\",\n    text: \"My Account\",\n  },\n];\n\nexport const audits = [\n  {\n    tenantid: \"1\",\n    type: \"FB\",\n    tenantName: \"Kopitiam\",\n    timeRemaining: 30,\n    status: \"unresolved\",\n    date: \"-\",\n    institution: \"CGH\",\n    score: \"\",\n  },\n  {\n    tenantid: \"2\",\n    type: \"FB\",\n    tenantName: \"1983\",\n    timeRemaining: 2,\n    status: \"unresolved\",\n    date: \"-\",\n    institution: \"KKH\",\n    score: \"\",\n  },\n  {\n    tenantid: \"3\",\n    type: \"FB\",\n    tenantName: \"7-Eleven\",\n    timeRemaining: 10,\n    status: \"unresolved\",\n    date: \"-\",\n    institution: \"SGH\",\n    score: \"\",\n  },\n  {\n    tenantid: \"4\",\n    type: \"Non-FB\",\n    tenantName: \"Kcuts\",\n    timeRemaining: 0,\n    status: \"resolved\",\n    date: \"12-02-20\",\n    institution: \"SKH\",\n    score: \"\",\n  },\n  {\n    tenantid: \"5\",\n    type: \"FB\",\n    tenantName: \"Kaki Makan\",\n    timeRemaining: 0,\n    status: \"resolved\",\n    date: \"27-02-20\",\n    institution: \"NCCS\",\n    score: \"\",\n  },\n  {\n    tenantid: \"6\",\n    type: \"FB\",\n    tenantName: \"7-Eleven\",\n    timeRemaining: 0,\n    status: \"resolved\",\n    date: \"13-01-20\",\n    institution: \"NDCS\",\n    score: \"\",\n  },\n  {\n    tenantid: \"7\",\n    type: \"FB\",\n    tenantName: \"myNonna's\",\n    timeRemaining: 2,\n    status: \"unresolved\",\n    date: \"-\",\n    institution: \"NHCS\",\n    score: \"\",\n  },\n  {\n    tenantid: \"8\",\n    type: \"Non-FB\",\n    tenantName: \"Comics Connection\",\n    timeRemaining: 10,\n    status: \"unresolved\",\n    date: \"-\",\n    institution: \"SNEC\",\n    score: \"\",\n  },\n];\n\nexport const tenants = [\n  {\n    tenantid: \"1\",\n    tenantName: \"Kopitiam\",\n    timeRemaining: 30,\n    status: \"unresolved\",\n    institution: \"1\",\n    latestScore: 0,\n    fbChecklist: [\n      {\n        id: \"1\",\n        category: \"A\",\n        text: \"FB-A-Question-1\",\n        checked: false,\n        comment: \"\",\n      },\n      {\n        id: \"2\",\n        category: \"A\",\n        text: \"FB-A-Question-2\",\n        checked: false,\n        comment: \"\",\n      },\n      {\n        id: \"3\",\n        category: \"A\",\n        text: \"FB-A-Question-3\",\n        checked: false,\n        comment: \"\",\n      },\n      {\n        id: \"4\",\n        category: \"A\",\n        text: \"FB-A-Question-4\",\n        checked: false,\n        comment: \"\",\n      },\n      {\n        id: \"5\",\n        category: \"B\",\n        text: \"FB-B-Question-1\",\n        checked: false,\n        comment: \"\",\n      },\n      {\n        id: \"6\",\n        category: \"B\",\n        text: \"FB-B-Question-2\",\n        checked: false,\n        comment: \"\",\n      },\n      {\n        id: \"7\",\n        category: \"B\",\n        text: \"FB-B-Question-3\",\n        checked: false,\n        comment: \"\",\n      },\n      {\n        id: \"8\",\n        category: \"B\",\n        text: \"FB-B-Question-4\",\n        checked: false,\n        comment: \"\",\n      },\n    ],\n  },\n  {\n    tenantid: \"2\",\n    tenantName: \"1983\",\n    timeRemaining: 2,\n    status: \"unresolved\",\n    institution: \"2\",\n    latestScore: 0,\n    score: [{ date: \"12-3-2021\", value: 0 }],\n  },\n  {\n    tenantid: \"3\",\n    tenantName: \"7-Eleven\",\n    timeRemaining: 10,\n    status: \"unresolved\",\n    institution: \"3\",\n    latestScore: 0,\n    score: [{ date: \"12-3-2021\", value: 0 }],\n    fbChecklist: [\n      {\n        id: \"1\",\n        category: \"A\",\n        text: \"FB-A-Question-1\",\n        checked: false,\n        comment: \"\",\n      },\n      {\n        id: \"2\",\n        category: \"A\",\n        text: \"FB-A-Question-2\",\n        checked: false,\n        comment: \"\",\n      },\n      {\n        id: \"3\",\n        category: \"A\",\n        text: \"FB-A-Question-3\",\n        checked: false,\n        comment: \"\",\n      },\n      {\n        id: \"4\",\n        category: \"A\",\n        text: \"FB-A-Question-4\",\n        checked: false,\n        comment: \"\",\n      },\n      {\n        id: \"5\",\n        category: \"B\",\n        text: \"FB-B-Question-1\",\n        checked: false,\n        comment: \"\",\n      },\n      {\n        id: \"6\",\n        category: \"B\",\n        text: \"FB-B-Question-2\",\n        checked: false,\n        comment: \"\",\n      },\n      {\n        id: \"7\",\n        category: \"B\",\n        text: \"FB-B-Question-3\",\n        checked: false,\n        comment: \"\",\n      },\n      {\n        id: \"8\",\n        category: \"B\",\n        text: \"FB-B-Question-4\",\n        checked: false,\n        comment: \"\",\n      },\n    ],\n  },\n  {\n    tenantid: \"4\",\n    tenantName: \"Kcuts\",\n    timeRemaining: 0,\n    status: \"resolved\",\n    institution: \"4\",\n    latestScore: 0,\n    score: [{ date: \"12-3-2021\", value: 0 }],\n    fbChecklist: [\n      {\n        id: \"1\",\n        category: \"A\",\n        text: \"FB-A-Question-1\",\n        checked: false,\n        comment: \"\",\n      },\n      {\n        id: \"2\",\n        category: \"A\",\n        text: \"FB-A-Question-2\",\n        checked: false,\n        comment: \"\",\n      },\n      {\n        id: \"3\",\n        category: \"A\",\n        text: \"FB-A-Question-3\",\n        checked: false,\n        comment: \"\",\n      },\n      {\n        id: \"4\",\n        category: \"A\",\n        text: \"FB-A-Question-4\",\n        checked: false,\n        comment: \"\",\n      },\n      {\n        id: \"5\",\n        category: \"B\",\n        text: \"FB-B-Question-1\",\n        checked: false,\n        comment: \"\",\n      },\n      {\n        id: \"6\",\n        category: \"B\",\n        text: \"FB-B-Question-2\",\n        checked: false,\n        comment: \"\",\n      },\n      {\n        id: \"7\",\n        category: \"B\",\n        text: \"FB-B-Question-3\",\n        checked: false,\n        comment: \"\",\n      },\n      {\n        id: \"8\",\n        category: \"B\",\n        text: \"FB-B-Question-4\",\n        checked: false,\n        comment: \"\",\n      },\n    ],\n  },\n  {\n    tenantid: \"5\",\n    tenantName: \"Kaki Makan\",\n    timeRemaining: 0,\n    status: \"resolved\",\n    date: \"27-02-20\",\n    institution: \"5\",\n    latestScore: 0,\n    score: [{ date: \"12-3-2021\", value: 0 }],\n    fbChecklist: [\n      {\n        id: \"1\",\n        category: \"A\",\n        text: \"FB-A-Question-1\",\n        checked: false,\n        comment: \"\",\n      },\n      {\n        id: \"2\",\n        category: \"A\",\n        text: \"FB-A-Question-2\",\n        checked: false,\n        comment: \"\",\n      },\n      {\n        id: \"3\",\n        category: \"A\",\n        text: \"FB-A-Question-3\",\n        checked: false,\n        comment: \"\",\n      },\n      {\n        id: \"4\",\n        category: \"A\",\n        text: \"FB-A-Question-4\",\n        checked: false,\n        comment: \"\",\n      },\n      {\n        id: \"5\",\n        category: \"B\",\n        text: \"FB-B-Question-1\",\n        checked: false,\n        comment: \"\",\n      },\n      {\n        id: \"6\",\n        category: \"B\",\n        text: \"FB-B-Question-2\",\n        checked: false,\n        comment: \"\",\n      },\n      {\n        id: \"7\",\n        category: \"B\",\n        text: \"FB-B-Question-3\",\n        checked: false,\n        comment: \"\",\n      },\n      {\n        id: \"8\",\n        category: \"B\",\n        text: \"FB-B-Question-4\",\n        checked: false,\n        comment: \"\",\n      },\n    ],\n  },\n  {\n    tenantid: \"6\",\n    tenantName: \"7-Eleven\",\n    timeRemaining: 0,\n    status: \"resolved\",\n    date: \"13-01-20\",\n    institution: \"6\",\n    latestScore: 0,\n    score: [{ date: \"12-3-2021\", value: 0 }],\n    fbChecklist: [\n      {\n        id: \"1\",\n        category: \"A\",\n        text: \"FB-A-Question-1\",\n        checked: false,\n        comment: \"\",\n      },\n      {\n        id: \"2\",\n        category: \"A\",\n        text: \"FB-A-Question-2\",\n        checked: false,\n        comment: \"\",\n      },\n      {\n        id: \"3\",\n        category: \"A\",\n        text: \"FB-A-Question-3\",\n        checked: false,\n        comment: \"\",\n      },\n      {\n        id: \"4\",\n        category: \"A\",\n        text: \"FB-A-Question-4\",\n        checked: false,\n        comment: \"\",\n      },\n      {\n        id: \"5\",\n        category: \"B\",\n        text: \"FB-B-Question-1\",\n        checked: false,\n        comment: \"\",\n      },\n      {\n        id: \"6\",\n        category: \"B\",\n        text: \"FB-B-Question-2\",\n        checked: false,\n        comment: \"\",\n      },\n      {\n        id: \"7\",\n        category: \"B\",\n        text: \"FB-B-Question-3\",\n        checked: false,\n        comment: \"\",\n      },\n      {\n        id: \"8\",\n        category: \"B\",\n        text: \"FB-B-Question-4\",\n        checked: false,\n        comment: \"\",\n      },\n    ],\n  },\n  {\n    tenantid: \"7\",\n    tenantName: \"myNonna's\",\n    timeRemaining: 2,\n    status: \"unresolved\",\n    date: \"-\",\n    institution: \"1\",\n    latestScore: 0,\n    score: [{ date: \"12-3-2021\", value: 0 }],\n    fbChecklist: [\n      {\n        id: \"1\",\n        category: \"A\",\n        text: \"FB-A-Question-1\",\n        checked: false,\n        comment: \"\",\n      },\n      {\n        id: \"2\",\n        category: \"A\",\n        text: \"FB-A-Question-2\",\n        checked: false,\n        comment: \"\",\n      },\n      {\n        id: \"3\",\n        category: \"A\",\n        text: \"FB-A-Question-3\",\n        checked: false,\n        comment: \"\",\n      },\n      {\n        id: \"4\",\n        category: \"A\",\n        text: \"FB-A-Question-4\",\n        checked: false,\n        comment: \"\",\n      },\n      {\n        id: \"5\",\n        category: \"B\",\n        text: \"FB-B-Question-1\",\n        checked: false,\n        comment: \"\",\n      },\n      {\n        id: \"6\",\n        category: \"B\",\n        text: \"FB-B-Question-2\",\n        checked: false,\n        comment: \"\",\n      },\n      {\n        id: \"7\",\n        category: \"B\",\n        text: \"FB-B-Question-3\",\n        checked: false,\n        comment: \"\",\n      },\n      {\n        id: \"8\",\n        category: \"B\",\n        text: \"FB-B-Question-4\",\n        checked: false,\n        comment: \"\",\n      },\n    ],\n  },\n  {\n    tenantid: \"8\",\n    tenantName: \"Comics Connection\",\n    timeRemaining: 10,\n    status: \"unresolved\",\n    date: \"-\",\n    institution: \"2\",\n    latestScore: 0,\n    score: [{ date: \"12-3-2021\", value: 0 }],\n    fbChecklist: [\n      {\n        id: \"1\",\n        category: \"A\",\n        text: \"FB-A-Question-1\",\n        checked: false,\n        comment: \"\",\n      },\n      {\n        id: \"2\",\n        category: \"A\",\n        text: \"FB-A-Question-2\",\n        checked: false,\n        comment: \"\",\n      },\n      {\n        id: \"3\",\n        category: \"A\",\n        text: \"FB-A-Question-3\",\n        checked: false,\n        comment: \"\",\n      },\n      {\n        id: \"4\",\n        category: \"A\",\n        text: \"FB-A-Question-4\",\n        checked: false,\n        comment: \"\",\n      },\n      {\n        id: \"5\",\n        category: \"B\",\n        text: \"FB-B-Question-1\",\n        checked: false,\n        comment: \"\",\n      },\n      {\n        id: \"6\",\n        category: \"B\",\n        text: \"FB-B-Question-2\",\n        checked: false,\n        comment: \"\",\n      },\n      {\n        id: \"7\",\n        category: \"B\",\n        text: \"FB-B-Question-3\",\n        checked: false,\n        comment: \"\",\n      },\n      {\n        id: \"8\",\n        category: \"B\",\n        text: \"FB-B-Question-4\",\n        checked: false,\n        comment: \"\",\n      },\n    ],\n  },\n];\n\nexport const categories = [\"all\", \"unresolved\", \"resolved\"];\n\nexport const auditors = [\n  {\n    id: \"1\",\n    name: \"Marcus Ho\",\n    dob: \"19 January 1998\",\n  },\n];\n\nexport const institutions = [\n  {\n    id: \"1\",\n    name: \"CGH\",\n    tenantNames: [],\n    tenantIDs: [],\n    imageUrl: \"../images/cgh.png\",\n  },\n  {\n    id: \"2\",\n    name: \"KKH\",\n    tenantNames: [],\n    tenantIDs: [],\n    imageUrl: \"../images/kkh.png\",\n  },\n  {\n    id: \"3\",\n    name: \"SGH\",\n    tenantNames: [],\n    tenantIDs: [],\n    imageUrl: \"../images/sgh.png\",\n  },\n  {\n    id: \"4\",\n    name: \"SKH\",\n    tenantNames: [],\n    tenantIDs: [],\n    imageUrl: \"../images/skh.png\",\n  },\n  {\n    id: \"5\",\n    name: \"NCCS\",\n    tenantNames: [],\n    tenantIDs: [],\n    imageUrl: \"../images/nccs.png\",\n  },\n  {\n    id: \"6\",\n    name: \"NDCS\",\n    tenantNames: [],\n    tenantIDs: [],\n    imageUrl: \"../images/ndcs.jpeg\",\n  },\n];\n\nexport const checklistTypes = [\n  \"FB Checklist\",\n  \"Non-FB Checklist\",\n  \"SM Checklist\",\n];\n\nexport const fbChecklist = [\n  {\n    id: \"1\",\n    category: \"A\",\n    text:\n      \"Shop is open and ready to service patients/visitors according to operating hours.\",\n    modalOpen: false,\n  },\n  {\n    id: \"2\",\n    category: \"A\",\n    text: \"Staff Attendance: adequate staff for peak and non-peak hours.\",\n    modalOpen: false,\n  },\n  {\n    id: \"3\",\n    category: \"A\",\n    text: \"At least one (1) clearly assigned person in-charge on site.\",\n    modalOpen: false,\n  },\n  {\n    id: \"4\",\n    category: \"A\",\n    text:\n      \"Staff who are unfit for work due to illness should not report to work).\",\n    modalOpen: false,\n  },\n  {\n    id: \"5\",\n    category: \"B\",\n    text:\n      \"Cleaning and maintenance records for equipment, ventilation and exhaust system.\",\n    modalOpen: false,\n  },\n  {\n    id: \"6\",\n    category: \"B\",\n    text: \"Adequate and regular pest control.\",\n    modalOpen: false,\n  },\n  {\n    id: \"7\",\n    category: \"B\",\n    text: \"Goods and equipment are within shop boundary.\",\n    modalOpen: false,\n  },\n  {\n    id: \"8\",\n    category: \"B\",\n    text: \"Store display/ Shop front is neat and tidy.\",\n    modalOpen: false,\n  },\n];\nexport const tenantImages = [\n  {\n    name: \"7-Eleven\",\n    imageUrl: \"../images/7-11.png\",\n  },\n  {\n    name: \"168 Florist\",\n    imageUrl: \"../images/168florist.jpeg\",\n  },\n  {\n    name: \"1983\",\n    imageUrl: \"../images/1983.jpeg\",\n  },\n  {\n    name: \"Coffee Bean\",\n    imageUrl: \"../images/coffee_bean.jpg\",\n  },\n  {\n    name: \"Kopitiam\",\n    imageUrl: \"../images/kopitiam.jpeg\",\n  },\n  {\n    name: \"Delifrance\",\n    imageUrl: \"../images/delifrance.jpeg\",\n  },\n  {\n    name: \"Mr Bean\",\n    imageUrl: \"../images/mr_bean.jpeg\",\n  },\n];\n","/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/AuthenticationService.js",[],"/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/Navbar.js",["204"],"import React, { useState, useRef, useEffect, useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { FaBars } from \"react-icons/fa\";\n\nimport { auditorNavLinks, tenantNavLinks, managerNavLinks } from \"./data\";\nimport auditor from \"./auditor.png\";\nimport { Context } from './Context';\n\nfunction Navbar() {\n  const { accountState, getAccountInfo } = useContext(Context);\n  const { role_id, username } = accountState;\n  const [toggleClicked, settoggleClicked] = useState(false);\n  const linksContainerRef = useRef(null);\n  const linksRef = useRef(null);\n  const showLinks = () => {\n    settoggleClicked(!toggleClicked);\n  };\n\n  useEffect(() => {\n    getAccountInfo();\n    let linksHeight = linksRef.current.getBoundingClientRect().height;\n    if (toggleClicked) {\n      linksContainerRef.current.style.height = `${linksHeight}px`;\n    } else {\n      linksContainerRef.current.style.height = \"0px\";\n    }\n  }, [toggleClicked]);\n\n  function mapLinks(links) {\n    return (\n      links.map((link, index) => {\n        const { url, text } = link;\n        return (\n          <li key={index}>\n            <Link to={url}>{text}</Link>\n          </li>\n        );\n      })\n    )\n  }\n\n  function getNavLinks(role) {\n    if (role === \"Auditor\") {\n      return mapLinks(auditorNavLinks);\n    } else if (role === \"Tenant\") {\n      return mapLinks(tenantNavLinks);\n    } else if (role === \"Manager\") {\n      return mapLinks(managerNavLinks);\n    };\n  };\n\n  // console.log(role_id);\n  // console.log(navLinks);\n  // console.log(fakeNavLinks);\n  // console.log(navLinks===fakeNavLinks);\n\n  return (\n    <nav>\n      <div className=\"nav-pc\">\n        <div className=\"nav-mobile\">\n          <img src={auditor} className=\"logo\" alt=\"auditor\"></img>\n          <div className=\"auditor-name\">Welcome {username}</div>\n          <button\n            className=\"nav-toggle\"\n            onClick={() => {\n              showLinks();\n            }}\n          >\n            <FaBars />\n          </button>\n        </div>\n        <div className=\"links-container\" ref={linksContainerRef}>\n          <ul className=\"links\" ref={linksRef}>\n            {getNavLinks(role_id)}\n          </ul>\n        </div>\n      </div>\n    </nav>\n  );\n\n  // return (\n  //   <nav>\n  //     <div className=\"nav-pc\">\n  //       <div className=\"nav-mobile\">\n  //         <img src={auditor} className=\"logo\" alt=\"auditor\"></img>\n  //         <div className=\"auditor-name\">Welcome Marcus {}</div>\n  //         <button\n  //           className=\"nav-toggle\"\n  //           onClick={() => {\n  //             showLinks();\n  //           }}\n  //         >\n  //           <FaBars />\n  //         </button>\n  //       </div>\n  //       <div className=\"links-container\" ref={linksContainerRef}>\n  //         <ul className=\"links\" ref={linksRef}>\n  //           {fakeNavLinks.map((link, index) => {\n  //             const { id, url, text } = link;\n  //             return (\n  //               <li key={index}>\n  //                 <Link to={url}>{text}</Link>\n  //               </li>\n  //             );\n  //           })}\n  //         </ul>\n  //       </div>\n  //     </div>\n  //   </nav>\n  // );\n}\n\nexport default Navbar;\n","/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/components/HomeCategories.js",[],"/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/components/Audits.js",["205","206","207"],"import React, { useRef } from \"react\";\nimport { FaAngleRight } from \"react-icons/fa\";\nimport { Link } from \"react-router-dom\";\n\nfunction Audits({ homeAudits }) {\n  //to display the audits on the home page\n  //change color based on whether it is resolved or not\n  const homeAuditGridRef = useRef(null);\n\n  return (\n    <div>\n      {homeAudits.map((audit, index) => {\n        const { tenantid, tenantName, timeRemaining, status, date } = audit;\n\n        return (\n          <Link key={index} to={`/tenant/${tenantid}`}>\n            <div\n              className={`${\n                audit.status === \"resolved\"\n                  ? \"homeaudit-grid-resolved\"\n                  : \"homeaudit-grid-unresolved\"\n              }`}\n              ref={homeAuditGridRef}\n            >\n              <div className=\"tenantName-gridItem\">{tenantName}</div>\n              <div className=\"btn-homeToTenant\">\n                <FaAngleRight />\n              </div>\n            </div>\n          </Link>\n        );\n      })}\n    </div>\n  );\n}\n\nexport default Audits;\n","/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/components/HomeAuditorCards.js",["208","209","210","211","212","213","214"],"import React, { useContext, useEffect, useState } from \"react\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Button from \"@material-ui/core/Button\";\nimport CameraIcon from \"@material-ui/icons/PhotoCamera\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport Link from \"@material-ui/core/Link\";\nimport { Context } from \"../Context\";\nimport { tenantImages } from \"../data\";\nimport zIndex from \"@material-ui/core/styles/zIndex\";\n\n// function Copyright() {\n//   return (\n//     <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n//       {\"Copyright © \"}\n//       <Link color=\"inherit\" href=\"https://material-ui.com/\">\n//         Your Website\n//       </Link>{\" \"}\n//       {new Date().getFullYear()}\n//       {\".\"}\n//     </Typography>\n//   );\n// }\n\nconst useStyles = makeStyles((theme) => ({\n  // icon: {\n  //   marginRight: theme.spacing(2),\n  // },\n  // heroContent: {\n  //   backgroundColor: theme.palette.background.paper,\n  //   padding: theme.spacing(8, 0, 6),\n  // },\n  // heroButtons: {\n  //   // marginTop: theme.spacing(4),\n  // },\n  cardGrid: {\n    paddingTop: theme.spacing(8),\n    paddingBottom: theme.spacing(8),\n  },\n  card: {\n    height: \"100%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  cardMedia: {\n    // padding: theme.spacing(2, 2, 2, 2),\n    height: 150,\n    width: \"100%\",\n    // paddingTop: \"56.25%\", // 16:9\n  },\n  cardContent: {\n    flexGrow: 1,\n  },\n  // footer: {\n  //   backgroundColor: theme.palette.background.paper,\n  //   padding: theme.spacing(6),\n  // },\n}));\n\nexport default function HomeAuditorCards() {\n  const classes = useStyles();\n\n  const { auditsState } = useContext(Context);\n\n  return (\n    <React.Fragment>\n      <Container className={classes.cardGrid} maxWidth=\"md\">\n        {/* End hero unit */}\n        <Grid container spacing={4}>\n          {auditsState.map((audit, index) => {\n            const { store_name } = audit;\n            let imageObject = tenantImages.find(\n              (image) => image.name === store_name\n            );\n\n            return (\n              <Grid item key={index} xs={12} sm={6} md={4}>\n                <Card className={classes.card}>\n                  <CardMedia\n                    component=\"img\"\n                    alt=\"tenant-image\"\n                    className={classes.cardMedia}\n                    // image={`${imageObject.imageUrl}`}\n                    image={\n                      imageObject.imageUrl\n                        ? `${imageObject.imageUrl}`\n                        : `url(https://source.unsplash.com/random)`\n                    }\n                    title=\"Image title\"\n                  />\n                  <CardContent className={classes.cardContent}>\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                      {store_name}\n                    </Typography>\n                    <Typography>\n                      This is a media card. You can use this section to describe\n                      the content.\n                    </Typography>\n                  </CardContent>\n                  <CardActions>\n                    <Button size=\"small\" color=\"primary\">\n                      View\n                    </Button>\n                    <Button size=\"small\" color=\"primary\">\n                      Edit\n                    </Button>\n                  </CardActions>\n                </Card>\n              </Grid>\n            );\n          })}\n        </Grid>\n      </Container>\n    </React.Fragment>\n  );\n}\n","/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/styles.js",[],"/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/components/InstitutionsCards.js",["215","216","217"],"import React from \"react\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Button from \"@material-ui/core/Button\";\nimport CameraIcon from \"@material-ui/icons/PhotoCamera\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport { institutions } from \"../data\";\nimport { Link } from \"react-router-dom\";\n\n// function Copyright() {\n//   return (\n//     <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n//       {\"Copyright © \"}\n//       <Link color=\"inherit\" href=\"https://material-ui.com/\">\n//         Your Website\n//       </Link>{\" \"}\n//       {new Date().getFullYear()}\n//       {\".\"}\n//     </Typography>\n//   );\n// }\n\nconst useStyles = makeStyles((theme) => ({\n  // icon: {\n  //   marginRight: theme.spacing(2),\n  // },\n  // heroContent: {\n  //   padding: theme.spacing(8, 0, 6),\n  // },\n  // heroButtons: {\n  //   // marginTop: theme.spacing(4),\n  // },\n  cardGrid: {\n    paddingTop: theme.spacing(8),\n    paddingBottom: theme.spacing(8),\n  },\n  card: {\n    height: \"100%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  cardMedia: {\n    // width: \"100%\",\n    padding: theme.spacing(2, 2, 2, 2),\n\n    // paddingTop: \"56.25%\",\n    // height: \"0%\",\n    // height: \"100%\",\n  },\n  cardContent: {\n    flexGrow: 1,\n  },\n  button: {\n    color: \"#F15A22\",\n    fontWeight: \"medium\",\n  },\n  // footer: {\n  //   backgroundColor: theme.palette.background.paper,\n  //   padding: theme.spacing(6),\n  // },\n}));\n\nexport default function HomeAuditorCards() {\n  const classes = useStyles();\n\n  return (\n    <React.Fragment>\n      {/* <AppBar position=\"relative\">\n        <Toolbar>\n          <CameraIcon className={classes.icon} />\n          <Typography variant=\"h6\" color=\"inherit\" noWrap>\n            Album layout\n          </Typography>\n        </Toolbar>\n      </AppBar> */}\n\n      <Container className={classes.cardGrid} maxWidth=\"md\">\n        {/* End hero unit */}\n        <Grid container spacing={4}>\n          {institutions.map((institution, index) => {\n            const { name, imageUrl } = institution;\n            return (\n              <Grid item key={index} xs={12} sm={6} md={4}>\n                <Card className={classes.card}>\n                  <CardMedia\n                    component=\"img\"\n                    alt=\"institution-image\"\n                    className={classes.cardMedia}\n                    image={`${imageUrl}`}\n                    title=\"Image title\"\n                  />\n                  <CardContent className={classes.cardContent}>\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                      {name}\n                    </Typography>\n                    <Typography>\n                      This is a media card. You can use this section to describe\n                      the content.\n                    </Typography>\n                  </CardContent>\n                  <CardActions>\n                    <Link to={`/institution/${name}`}>\n                      <Button\n                        className={classes.button}\n                        size=\"small\"\n                        // color=\"secondary\"\n                      >\n                        View Tenants\n                      </Button>\n                    </Link>\n                  </CardActions>\n                </Card>\n              </Grid>\n            );\n          })}\n        </Grid>\n      </Container>\n\n      {/* Footer */}\n      {/* <footer className={classes.footer}>\n        <Typography variant=\"h6\" align=\"center\" gutterBottom>\n          Footer\n        </Typography>\n        <Typography\n          variant=\"subtitle1\"\n          align=\"center\"\n          color=\"textSecondary\"\n          component=\"p\"\n        >\n          Something here to give the footer a purpose!\n        </Typography>\n        <Copyright />\n      </footer> */}\n      {/* End footer */}\n    </React.Fragment>\n  );\n}\n","/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/components/Question.js",["218","219","220","221","222"],"import React, { useContext, useState } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Accordion from \"@material-ui/core/Accordion\";\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport { FaRegEdit } from \"react-icons/fa\";\nimport { Context } from \"../Context\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport SentimentVeryDissatisfiedIcon from \"@material-ui/icons/SentimentVeryDissatisfied\";\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\nimport PropTypes from \"prop-types\";\nimport Rating from \"@material-ui/lab/Rating\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  dropdownContainer: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  dropdownSection: {\n    display: \"flex\",\n    justifyContent: \"space-around\",\n    width: \"100%\",\n    // justifyContent: \"center\",\n  },\n  commentBox: {\n    // margin: theme.spacing(0, 2, 0, 2),\n    width: \"70%\",\n  },\n  button: {\n    color: \"#F15A22\",\n    fontWeight: \"medium\",\n  },\n}));\nconst StyledRating = withStyles({\n  iconFilled: {\n    color: \"#ff6d75\",\n  },\n  iconHover: {\n    color: \"#ff3d47\",\n  },\n})(Rating);\n\nconst customIcons = {\n  1: {\n    icon: <SentimentVeryDissatisfiedIcon />,\n    label: \"Very Dissatisfied\",\n  },\n  2: {\n    icon: <SentimentVeryDissatisfiedIcon />,\n    label: \"Dissatisfied\",\n  },\n  3: {\n    icon: <SentimentVeryDissatisfiedIcon />,\n    label: \"Neutral\",\n  },\n  4: {\n    icon: <SentimentVeryDissatisfiedIcon />,\n    label: \"Satisfied\",\n  },\n  5: {\n    icon: <SentimentVeryDissatisfiedIcon />,\n    label: \"Very Satisfied\",\n  },\n};\n\nfunction IconContainer(props) {\n  const { value, ...other } = props;\n  return <span {...other}>{customIcons[value].icon}</span>;\n}\n\nIconContainer.propTypes = {\n  value: PropTypes.number.isRequired,\n};\n\nfunction Question({ fb_qn_id, requirement, labelId }) {\n  const classes = useStyles();\n\n  const { fbReportState, setFbReportState } = useContext(Context);\n\n  //state to update number of checked boxes\n  const [checked, setChecked] = useState([]);\n  //state to update comments\n  const [comment, setComment] = useState(\"\");\n  //state to update severity\n  const [severity, setSeverity] = useState(0);\n\n  //handle the checkbox changes\n  const handleToggle = (question_id) => () => {\n    // current question id\n    const currentIndex = checked.indexOf(question_id);\n\n    const newChecked = [...checked];\n\n    if (currentIndex === -1) {\n      newChecked.push(question_id);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n    // update the checked state\n    setChecked(newChecked);\n    console.log(fbReportState);\n    //update fb report state\n    setFbReportState((prevState) => {\n      return prevState.map((question) =>\n        question.qn_id === question_id\n          ? { ...question, status: !question.status }\n          : question\n      );\n    });\n  };\n  //function to update comment state\n  const handleComment = (e) => {\n    setComment(e.target.value);\n  };\n  //function to update severity state\n  const handleSeverity = (e) => {\n    setSeverity(e.target.value);\n    // console.log(e.target.value);\n  };\n  //function to update fb report state upon clicking save\n  const handleSave = () => {\n    alert(`Input saved for question ${parseInt(fb_qn_id)}`);\n    let today = new Date();\n    switch (severity) {\n      case \"1\":\n        today.setDate(today.getDate() + 21);\n        break;\n      case \"2\":\n        today.setDate(today.getDate() + 14);\n        break;\n      case \"3\":\n        today.setDate(today.getDate() + 7);\n        break;\n      case \"4\":\n        today.setDate(today.getDate() + 4);\n        break;\n      case \"5\":\n        today.setDate(today.getDate() + 1);\n        break;\n      default:\n        today.setDate(today.getDate());\n        break;\n    }\n    let severityDate =\n      (today.getDate() < 10\n        ? \"0\" + today.getDate().toString()\n        : today.getDate().toString()) +\n      (today.getMonth() < 10\n        ? \"0\" + today.getMonth().toString()\n        : today.getMonth().toString()) +\n      today.getFullYear().toString().slice(2, 4);\n    console.log(severityDate);\n\n    setFbReportState((prevState) => {\n      return prevState.map((question) =>\n        question.qn_id === fb_qn_id && severity !== \"0\"\n          ? {\n              ...question,\n              severity: parseInt(severity + severityDate),\n              remarks: comment,\n            }\n          : question\n      );\n    });\n  };\n\n  return (\n    <div>\n      <Accordion>\n        <AccordionSummary\n          key={fb_qn_id}\n          expandIcon={<ExpandMoreIcon />}\n          aria-label=\"Expand\"\n          aria-controls=\"additional-actions1-content\"\n          id=\"additional-actions1-header\"\n        >\n          <ListItem>\n            <ListItemText id={fb_qn_id} primary={`${requirement}`} />\n            <Checkbox\n              // edge=\"end\"\n              onChange={handleToggle(fb_qn_id)}\n              checked={checked.indexOf(fb_qn_id) === -1}\n              inputProps={{ \"aria-labelledby\": labelId }}\n              className={classes.checkbox}\n            />\n          </ListItem>\n        </AccordionSummary>\n        <AccordionDetails className={classes.dropdownContainer}>\n          <div className={classes.dropdownSection}>\n            <TextField\n              id=\"standard-multiline-static\"\n              label=\"Comment on non-compliance\"\n              multiline\n              value={comment}\n              onChange={(e) => {\n                handleComment(e);\n              }}\n              className={classes.commentBox}\n            />\n            <Box component=\"fieldset\" mb={3} borderColor=\"transparent\">\n              <Typography component=\"legend\">Set Severity</Typography>\n              <Rating\n                name={`${fb_qn_id}`}\n                defaultValue={0}\n                // getLabelText={(value) => customIcons[value].label}\n                IconContainerComponent={IconContainer}\n                onChange={(e) => {\n                  handleSeverity(e);\n                }}\n              />\n            </Box>\n          </div>\n          <div>\n            <Button\n              className={classes.button}\n              size=\"small\"\n              onClick={() => {\n                handleSave();\n              }}\n              // color=\"secondary\"\n            >\n              save\n            </Button>\n          </div>\n        </AccordionDetails>\n      </Accordion>\n    </div>\n  );\n}\n\nexport default Question;\n","/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/components/HomeAuditorTabs.js",[],"/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/components/TenantHomeCards.js",["223","224","225","226","227","228","229"],"import React, { useContext, useEffect, useState } from \"react\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Button from \"@material-ui/core/Button\";\nimport CameraIcon from \"@material-ui/icons/PhotoCamera\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport Link from \"@material-ui/core/Link\";\nimport { Context } from \"../Context\";\nimport { tenantImages } from \"../data\";\nimport zIndex from \"@material-ui/core/styles/zIndex\";\n\nconst useStyles = makeStyles((theme) => ({\n  cardGrid: {\n    paddingTop: theme.spacing(8),\n    paddingBottom: theme.spacing(8),\n  },\n  card: {\n    height: \"100%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  cardMedia: {\n    // padding: theme.spacing(2, 2, 2, 2),\n    height: 150,\n    width: \"100%\",\n    // paddingTop: \"56.25%\", // 16:9\n  },\n  cardContent: {\n    flexGrow: 1,\n  },\n}));\nexport default function TenantHomeCards() {\n  const classes = useStyles();\n\n  const { tenantState } = useContext(Context);\n\n  return (\n    <React.Fragment>\n      <Container className={classes.cardGrid} maxWidth=\"md\">\n        {/* End hero unit */}\n        <Grid container spacing={4}>\n          {tenantState.map((audit, index) => {\n            const { store_name } = audit;\n            let imageObject = tenantImages.find(\n              (image) => image.name === store_name\n            );\n\n            return (\n              <Grid item key={index} xs={12} sm={6} md={4}>\n                <Card className={classes.card}>\n                  <CardMedia\n                    component=\"img\"\n                    alt=\"tenant-image\"\n                    className={classes.cardMedia}\n                    // image={`${imageObject.imageUrl}`}\n                    image={\n                      imageObject.imageUrl\n                        ? `${imageObject.imageUrl}`\n                        : `url(https://source.unsplash.com/random)`\n                    }\n                    title=\"Image title\"\n                  />\n                  <CardContent className={classes.cardContent}>\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                      {store_name}\n                    </Typography>\n                    <Typography>\n                      This is a media card. You can use this section to describe\n                      the content.\n                    </Typography>\n                  </CardContent>\n                  <CardActions>\n                    <Button size=\"small\" color=\"primary\">\n                      View\n                    </Button>\n                    <Button size=\"small\" color=\"primary\">\n                      Edit\n                    </Button>\n                  </CardActions>\n                </Card>\n              </Grid>\n            );\n          })}\n        </Grid>\n      </Container>\n    </React.Fragment>\n  );\n}\n","/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/components/TenantHomeTabs.js",["230"],"import React, { useContext } from \"react\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport { Context } from \"../Context\";\n\nconst useStyles = makeStyles((theme) => ({\n  //   root: { },\n}));\n\nconst StyledTabs = withStyles({\n  indicator: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    backgroundColor: \"transparent\",\n    \"& > span\": {\n      maxWidth: 40,\n      width: \"100%\",\n      backgroundColor: \"#F15A22\",\n    },\n  },\n})((props) => <Tabs {...props} TabIndicatorProps={{ children: <span /> }} />);\n\nconst StyledTab = withStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    textTransform: \"none\",\n    color: \"#000000\",\n    fontWeight: theme.typography.fontWeightBold,\n    fontSize: theme.typography.pxToRem(16),\n    margin: theme.spacing(2, 0, 2, 0),\n    \"&:focus\": {\n      opacity: 1,\n    },\n  },\n}))((props) => <Tab disableRipple {...props} />);\n\nexport default function CenteredTabs() {\n  const {\n    getTenantAudits,\n    getUserInfoNoParams,\n    getReport,\n    tenantState,\n    setTenantState,\n  } = useContext(Context);\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  const filterAudits = (category) => {\n    async function getResponse() {\n      try {\n        const tenantId = await getUserInfoNoParams().then((response) => {\n          //   console.log(response);\n          return response.data.acc_id;\n        });\n        // console.log(tenantId);\n        if (category === \"OVERDUE\") {\n          const reportIdArray = await getTenantAudits(tenantId).then(\n            (response) => {\n              // console.log(response);\n              if (response.data.OVERDUE === -1) {\n                return [];\n              }\n              return [response.data.OVERDUE];\n            }\n          );\n          //initialize array to store all objects of report info\n          let reportInfoArray = [];\n\n          for (let i = 0; i < reportIdArray.length; i++) {\n            let reportInfo = await getReport(reportIdArray[i]).then(\n              (response) => {\n                return response.data;\n              }\n            );\n            reportInfoArray.push(reportInfo);\n          }\n          if (reportInfoArray.length === reportIdArray.length) {\n            setTenantState(reportInfoArray);\n          }\n        }\n        if (category === \"UNRESOLVED\") {\n          const reportIdArray = await getTenantAudits(tenantId).then(\n            (response) => {\n              // console.log(response);\n              if (response.data.LATEST === -1) {\n                return [];\n              }\n              return [response.data.LATEST];\n            }\n          );\n          //initialize array to store all objects of report info\n          let reportInfoArray = [];\n\n          for (let i = 0; i < reportIdArray.length; i++) {\n            let reportInfo = await getReport(reportIdArray[i]).then(\n              (response) => {\n                return response.data;\n              }\n            );\n            reportInfoArray.push(reportInfo);\n          }\n          if (reportInfoArray.length === reportIdArray.length) {\n            setTenantState(reportInfoArray);\n          }\n        }\n        if (category === \"COMPLETED\") {\n          const reportIdArray = await getTenantAudits(tenantId).then(\n            (response) => {\n              if (response.data.LATEST === -1) {\n                return [...response.data.CLOSED.past_audits];\n              }\n              return [\n                response.data.LATEST,\n                ...response.data.CLOSED.past_audits,\n              ];\n            }\n          );\n          //initialize array to store all objects of report info\n          let reportInfoArray = [];\n\n          for (let i = 0; i < reportIdArray.length; i++) {\n            let reportInfo = await getReport(reportIdArray[i]).then(\n              (response) => {\n                return response.data;\n              }\n            );\n            reportInfoArray.push(reportInfo);\n          }\n          if (reportInfoArray.length === reportIdArray.length) {\n            setTenantState(reportInfoArray);\n          }\n        }\n      } catch (err) {\n        console.log(err);\n      }\n    }\n    getResponse();\n  };\n\n  return (\n    <Paper className={classes.root}>\n      <StyledTabs value={value} onChange={handleChange} centered>\n        <StyledTab\n          onClick={() => {\n            filterAudits(\"COMPLETED\");\n          }}\n          label=\"COMPLETED\"\n        />\n        <StyledTab\n          onClick={() => {\n            filterAudits(\"UNRESOLVED\");\n          }}\n          label=\"UNRESOLVED\"\n        />\n        <StyledTab\n          onClick={() => {\n            filterAudits(\"OVERDUE\");\n          }}\n          label=\"OVERDUE\"\n        />\n      </StyledTabs>\n    </Paper>\n  );\n}\n",{"ruleId":"231","replacedBy":"232"},{"ruleId":"233","replacedBy":"234"},{"ruleId":"235","severity":1,"message":"236","line":14,"column":8,"nodeType":"237","messageId":"238","endLine":14,"endColumn":15},{"ruleId":"235","severity":1,"message":"239","line":2,"column":10,"nodeType":"237","messageId":"238","endLine":2,"endColumn":16},{"ruleId":"235","severity":1,"message":"240","line":2,"column":18,"nodeType":"237","messageId":"238","endLine":2,"endColumn":29},{"ruleId":"235","severity":1,"message":"241","line":2,"column":31,"nodeType":"237","messageId":"238","endLine":2,"endColumn":38},{"ruleId":"235","severity":1,"message":"242","line":2,"column":40,"nodeType":"237","messageId":"238","endLine":2,"endColumn":52},{"ruleId":"235","severity":1,"message":"243","line":4,"column":10,"nodeType":"237","messageId":"238","endLine":4,"endColumn":18},{"ruleId":"244","severity":1,"message":"245","line":95,"column":26,"nodeType":"237","endLine":95,"endColumn":37},{"ruleId":"235","severity":1,"message":"246","line":216,"column":10,"nodeType":"237","messageId":"238","endLine":216,"endColumn":24},{"ruleId":"235","severity":1,"message":"247","line":216,"column":26,"nodeType":"237","messageId":"238","endLine":216,"endColumn":43},{"ruleId":"244","severity":1,"message":"248","line":114,"column":6,"nodeType":"249","endLine":114,"endColumn":8,"suggestions":"250"},{"ruleId":"244","severity":1,"message":"251","line":34,"column":6,"nodeType":"249","endLine":34,"endColumn":8,"suggestions":"252"},{"ruleId":"235","severity":1,"message":"253","line":37,"column":9,"nodeType":"237","messageId":"238","endLine":37,"endColumn":16},{"ruleId":"235","severity":1,"message":"242","line":2,"column":10,"nodeType":"237","messageId":"238","endLine":2,"endColumn":22},{"ruleId":"235","severity":1,"message":"254","line":3,"column":10,"nodeType":"237","messageId":"238","endLine":3,"endColumn":14},{"ruleId":"235","severity":1,"message":"255","line":4,"column":10,"nodeType":"237","messageId":"238","endLine":4,"endColumn":22},{"ruleId":"244","severity":1,"message":"256","line":46,"column":6,"nodeType":"249","endLine":46,"endColumn":8,"suggestions":"257"},{"ruleId":"235","severity":1,"message":"258","line":1,"column":50,"nodeType":"237","messageId":"238","endLine":1,"endColumn":61},{"ruleId":"244","severity":1,"message":"259","line":92,"column":6,"nodeType":"249","endLine":92,"endColumn":8,"suggestions":"260"},{"ruleId":"244","severity":1,"message":"251","line":40,"column":6,"nodeType":"249","endLine":40,"endColumn":8,"suggestions":"261"},{"ruleId":"235","severity":1,"message":"241","line":2,"column":10,"nodeType":"237","messageId":"238","endLine":2,"endColumn":17},{"ruleId":"244","severity":1,"message":"262","line":24,"column":6,"nodeType":"249","endLine":24,"endColumn":8,"suggestions":"263"},{"ruleId":"235","severity":1,"message":"264","line":38,"column":25,"nodeType":"237","messageId":"238","endLine":38,"endColumn":29},{"ruleId":"235","severity":1,"message":"265","line":1,"column":17,"nodeType":"237","messageId":"238","endLine":1,"endColumn":25},{"ruleId":"235","severity":1,"message":"239","line":2,"column":10,"nodeType":"237","messageId":"238","endLine":2,"endColumn":16},{"ruleId":"235","severity":1,"message":"254","line":3,"column":10,"nodeType":"237","messageId":"238","endLine":3,"endColumn":14},{"ruleId":"235","severity":1,"message":"266","line":4,"column":8,"nodeType":"237","messageId":"238","endLine":4,"endColumn":22},{"ruleId":"235","severity":1,"message":"267","line":5,"column":8,"nodeType":"237","messageId":"238","endLine":5,"endColumn":14},{"ruleId":"244","severity":1,"message":"268","line":73,"column":6,"nodeType":"249","endLine":73,"endColumn":8,"suggestions":"269"},{"ruleId":"235","severity":1,"message":"270","line":2,"column":16,"nodeType":"237","messageId":"238","endLine":2,"endColumn":25},{"ruleId":"244","severity":1,"message":"268","line":118,"column":6,"nodeType":"249","endLine":118,"endColumn":8,"suggestions":"271"},{"ruleId":"235","severity":1,"message":"272","line":11,"column":5,"nodeType":"237","messageId":"238","endLine":11,"endColumn":17},{"ruleId":"235","severity":1,"message":"273","line":12,"column":5,"nodeType":"237","messageId":"238","endLine":12,"endColumn":19},{"ruleId":"274","severity":1,"message":"275","line":21,"column":21,"nodeType":"276","messageId":"277","endLine":21,"endColumn":23},{"ruleId":"235","severity":1,"message":"254","line":2,"column":10,"nodeType":"237","messageId":"238","endLine":2,"endColumn":14},{"ruleId":"235","severity":1,"message":"278","line":4,"column":8,"nodeType":"237","messageId":"238","endLine":4,"endColumn":13},{"ruleId":"235","severity":1,"message":"279","line":9,"column":10,"nodeType":"237","messageId":"238","endLine":9,"endColumn":19},{"ruleId":"244","severity":1,"message":"280","line":20,"column":6,"nodeType":"249","endLine":20,"endColumn":8,"suggestions":"281"},{"ruleId":"235","severity":1,"message":"282","line":12,"column":8,"nodeType":"237","messageId":"238","endLine":12,"endColumn":16},{"ruleId":"235","severity":1,"message":"283","line":13,"column":8,"nodeType":"237","messageId":"238","endLine":13,"endColumn":24},{"ruleId":"235","severity":1,"message":"284","line":15,"column":8,"nodeType":"237","messageId":"238","endLine":15,"endColumn":12},{"ruleId":"244","severity":1,"message":"285","line":92,"column":6,"nodeType":"249","endLine":92,"endColumn":8,"suggestions":"286"},{"ruleId":"287","severity":1,"message":"288","line":109,"column":15,"nodeType":"289","messageId":"290","endLine":125,"endColumn":16},{"ruleId":"235","severity":1,"message":"291","line":7,"column":3,"nodeType":"237","messageId":"238","endLine":7,"endColumn":6},{"ruleId":"235","severity":1,"message":"292","line":16,"column":8,"nodeType":"237","messageId":"238","endLine":16,"endColumn":28},{"ruleId":"235","severity":1,"message":"293","line":149,"column":7,"nodeType":"237","messageId":"238","endLine":149,"endColumn":21},{"ruleId":"235","severity":1,"message":"294","line":1,"column":8,"nodeType":"237","messageId":"238","endLine":1,"endColumn":13},{"ruleId":"235","severity":1,"message":"295","line":3,"column":7,"nodeType":"237","messageId":"238","endLine":3,"endColumn":12},{"ruleId":"244","severity":1,"message":"251","line":27,"column":6,"nodeType":"249","endLine":27,"endColumn":21,"suggestions":"296"},{"ruleId":"235","severity":1,"message":"297","line":13,"column":39,"nodeType":"237","messageId":"238","endLine":13,"endColumn":52},{"ruleId":"235","severity":1,"message":"298","line":13,"column":54,"nodeType":"237","messageId":"238","endLine":13,"endColumn":60},{"ruleId":"235","severity":1,"message":"299","line":13,"column":62,"nodeType":"237","messageId":"238","endLine":13,"endColumn":66},{"ruleId":"235","severity":1,"message":"300","line":1,"column":29,"nodeType":"237","messageId":"238","endLine":1,"endColumn":38},{"ruleId":"235","severity":1,"message":"265","line":1,"column":40,"nodeType":"237","messageId":"238","endLine":1,"endColumn":48},{"ruleId":"235","severity":1,"message":"301","line":2,"column":8,"nodeType":"237","messageId":"238","endLine":2,"endColumn":14},{"ruleId":"235","severity":1,"message":"302","line":4,"column":8,"nodeType":"237","messageId":"238","endLine":4,"endColumn":18},{"ruleId":"235","severity":1,"message":"303","line":10,"column":8,"nodeType":"237","messageId":"238","endLine":10,"endColumn":15},{"ruleId":"235","severity":1,"message":"254","line":14,"column":8,"nodeType":"237","messageId":"238","endLine":14,"endColumn":12},{"ruleId":"235","severity":1,"message":"304","line":17,"column":8,"nodeType":"237","messageId":"238","endLine":17,"endColumn":14},{"ruleId":"235","severity":1,"message":"301","line":2,"column":8,"nodeType":"237","messageId":"238","endLine":2,"endColumn":14},{"ruleId":"235","severity":1,"message":"302","line":4,"column":8,"nodeType":"237","messageId":"238","endLine":4,"endColumn":18},{"ruleId":"235","severity":1,"message":"303","line":10,"column":8,"nodeType":"237","messageId":"238","endLine":10,"endColumn":15},{"ruleId":"235","severity":1,"message":"284","line":6,"column":8,"nodeType":"237","messageId":"238","endLine":6,"endColumn":12},{"ruleId":"235","severity":1,"message":"305","line":9,"column":8,"nodeType":"237","messageId":"238","endLine":9,"endColumn":22},{"ruleId":"235","severity":1,"message":"306","line":11,"column":8,"nodeType":"237","messageId":"238","endLine":11,"endColumn":14},{"ruleId":"235","severity":1,"message":"307","line":13,"column":10,"nodeType":"237","messageId":"238","endLine":13,"endColumn":19},{"ruleId":"235","severity":1,"message":"308","line":45,"column":7,"nodeType":"237","messageId":"238","endLine":45,"endColumn":19},{"ruleId":"235","severity":1,"message":"300","line":1,"column":29,"nodeType":"237","messageId":"238","endLine":1,"endColumn":38},{"ruleId":"235","severity":1,"message":"265","line":1,"column":40,"nodeType":"237","messageId":"238","endLine":1,"endColumn":48},{"ruleId":"235","severity":1,"message":"301","line":2,"column":8,"nodeType":"237","messageId":"238","endLine":2,"endColumn":14},{"ruleId":"235","severity":1,"message":"302","line":4,"column":8,"nodeType":"237","messageId":"238","endLine":4,"endColumn":18},{"ruleId":"235","severity":1,"message":"303","line":10,"column":8,"nodeType":"237","messageId":"238","endLine":10,"endColumn":15},{"ruleId":"235","severity":1,"message":"254","line":14,"column":8,"nodeType":"237","messageId":"238","endLine":14,"endColumn":12},{"ruleId":"235","severity":1,"message":"304","line":17,"column":8,"nodeType":"237","messageId":"238","endLine":17,"endColumn":14},{"ruleId":"235","severity":1,"message":"309","line":44,"column":5,"nodeType":"237","messageId":"238","endLine":44,"endColumn":16},"no-native-reassign",["310"],"no-negated-in-lhs",["311"],"no-unused-vars","'Loading' is defined but never used.","Identifier","unusedVar","'audits' is defined but never used.","'fbChecklist' is defined but never used.","'tenants' is defined but never used.","'institutions' is defined but never used.","'Redirect' is defined but never used.","react-hooks/exhaustive-deps","React Hook useCallback does nothing when called with only one argument. Did you forget to pass an array of dependencies?","'reportIdsState' is assigned a value but never used.","'setReportIdsState' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getReport', 'getTenantAudits', 'getUserInfo', and 'tenantId'. Either include them or remove the dependency array.","ArrayExpression",["312"],"React Hook useEffect has a missing dependency: 'getAccountInfo'. Either include it or remove the dependency array.",["313"],"'API_URL' is assigned a value but never used.","'Link' is defined but never used.","'FaAngleRight' is defined but never used.","React Hook useEffect has missing dependencies: 'getAudits', 'getReport', and 'setAuditsState'. Either include them or remove the dependency array.",["314"],"'useCallback' is defined but never used.","React Hook useEffect has missing dependencies: 'createFbReportState', 'getFbChecklistQuestions', 'getUserInfo', and 'tenantId'. Either include them or remove the dependency array.",["315"],["316"],"React Hook useEffect has missing dependencies: 'getInstitutionTenants' and 'institutionName'. Either include them or remove the dependency array.",["317"],"'name' is assigned a value but never used.","'useState' is defined but never used.","'HomeCategories' is defined but never used.","'Audits' is defined but never used.","React Hook useEffect has missing dependencies: 'getReport', 'getTenantAudits', 'getUserInfoNoParams', and 'setTenantState'. Either include them or remove the dependency array.",["318"],"'useParams' is defined but never used.",["319"],"'accountState' is assigned a value but never used.","'getAccountInfo' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'axios' is defined but never used.","'FormGroup' is defined but never used.","React Hook useEffect has a missing dependency: 'getAllChatsOfUser'. Either include it or remove the dependency array.",["320"],"'Checkbox' is defined but never used.","'FormControlLabel' is defined but never used.","'List' is defined but never used.","React Hook useEffect has missing dependencies: 'getReportEntry', 'getReportStats', and 'reportId'. Either include them or remove the dependency array.",["321"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'Box' is defined but never used.","'singhealthBackground' is defined but never used.","'LoginComponent' is defined but never used.","'React' is defined but never used.","'users' is assigned a value but never used.",["322"],"'timeRemaining' is assigned a value but never used.","'status' is assigned a value but never used.","'date' is assigned a value but never used.","'useEffect' is defined but never used.","'AppBar' is defined but never used.","'CameraIcon' is defined but never used.","'Toolbar' is defined but never used.","'zIndex' is defined but never used.","'ListItemAvatar' is defined but never used.","'Avatar' is defined but never used.","'FaRegEdit' is defined but never used.","'StyledRating' is assigned a value but never used.","'tenantState' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"323","fix":"324"},{"desc":"325","fix":"326"},{"desc":"327","fix":"328"},{"desc":"329","fix":"330"},{"desc":"325","fix":"331"},{"desc":"332","fix":"333"},{"desc":"334","fix":"335"},{"desc":"334","fix":"336"},{"desc":"337","fix":"338"},{"desc":"339","fix":"340"},{"desc":"341","fix":"342"},"Update the dependencies array to be: [getReport, getTenantAudits, getUserInfo, tenantId]",{"range":"343","text":"344"},"Update the dependencies array to be: [getAccountInfo]",{"range":"345","text":"346"},"Update the dependencies array to be: [getAudits, getReport, setAuditsState]",{"range":"347","text":"348"},"Update the dependencies array to be: [createFbReportState, getFbChecklistQuestions, getUserInfo, tenantId]",{"range":"349","text":"350"},{"range":"351","text":"346"},"Update the dependencies array to be: [getInstitutionTenants, institutionName]",{"range":"352","text":"353"},"Update the dependencies array to be: [getReport, getTenantAudits, getUserInfoNoParams, setTenantState]",{"range":"354","text":"355"},{"range":"356","text":"355"},"Update the dependencies array to be: [getAllChatsOfUser]",{"range":"357","text":"358"},"Update the dependencies array to be: [getReportEntry, getReportStats, reportId]",{"range":"359","text":"360"},"Update the dependencies array to be: [getAccountInfo, toggleClicked]",{"range":"361","text":"362"},[3695,3697],"[getReport, getTenantAudits, getUserInfo, tenantId]",[702,704],"[getAccountInfo]",[1454,1456],"[getAudits, getReport, setAuditsState]",[2474,2476],"[createFbReportState, getFbChecklistQuestions, getUserInfo, tenantId]",[977,979],[873,875],"[getInstitutionTenants, institutionName]",[2318,2320],"[getReport, getTenantAudits, getUserInfoNoParams, setTenantState]",[3859,3861],[486,488],"[getAllChatsOfUser]",[2770,2772],"[getReportEntry, getReportStats, reportId]",[926,941],"[getAccountInfo, toggleClicked]"]