{"ast":null,"code":"var _jsxFileName = \"/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/pages/FbChecklist.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext, useEffect, useCallback } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Question from \"../components/Question\";\nimport { Context } from \"../Context\";\nimport Loading from \"./Loading\";\nimport Navbar from \"../Navbar\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\"; //styling for the fbchecklist page\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    padding: theme.spacing(5, 0, 5, 0)\n  },\n  list: {\n    width: \"100%\",\n    maxWidth: 800,\n    backgroundColor: theme.palette.background.paper,\n    display: \"flex\",\n    flexDirection: \"column\" // alignItems: \"center\",\n\n  },\n  button: {\n    width: \"100%\",\n    height: 50,\n    maxWidth: 800,\n    color: \"#F15A22\",\n    fontWeight: \"medium\",\n    backgroundColor: theme.palette.background.paper\n  },\n  listItem: {\n    padding: theme.spacing(2, 5, 2, 5)\n  },\n  checkbox: {// padding: theme.spacing(0, 2, 0, 3),\n  },\n  commentBox: {\n    padding: theme.spacing(2, 5, 2, 5)\n  },\n  dialog: {\n    backgroundColor: \"transparent\"\n  }\n}));\n\nfunction FbChecklist() {\n  _s();\n\n  //use styles from function declared above\n  const classes = useStyles(); //get tenant id from url\n\n  const {\n    tenantId\n  } = useParams(); //Context\n\n  const {\n    getFbChecklistQuestions,\n    createFbReportState,\n    setFbReportState\n  } = useContext(Context); //state to update fb checklist questions\n\n  const [fbChecklistState, setFbChecklistState] = useState(); //state to update number of checked boxes\n\n  const [checked, setChecked] = useState([]); //state to update comments\n\n  const [comments, setComments] = useState([]); //state for dialog modal\n\n  const [open, setOpen] = useState(false);\n  useEffect(() => {\n    //function to retrieve questions\n    getFbChecklistQuestions().then(response => {\n      setFbChecklistState(response.data);\n      createFbReportState(response.data);\n    }).catch(() => {\n      console.log(\"fb checklist retrieval failed\");\n    });\n  }, []); //when dialog is clicked\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  }; //when dialog is closed\n\n\n  const handleClose = () => {\n    setOpen(false);\n  }; //handle the checkbox changes\n\n\n  const handleToggle = question_id => () => {\n    //current question id\n    const currentIndex = checked.indexOf(question_id);\n    const newChecked = [...checked];\n\n    if (currentIndex === -1) {\n      newChecked.push(question_id);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    } //update the checked state\n\n\n    setChecked(newChecked); //update fb report state\n\n    setFbReportState(prevState => {\n      return prevState.map(question => question.qn_id === question_id ? { ...question,\n        status: !question.status\n      } : question);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: fbChecklistState ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        className: classes.root,\n        children: [/*#__PURE__*/_jsxDEV(List, {\n          dense: true,\n          className: classes.list,\n          children: fbChecklistState.map((question, index) => {\n            const {\n              fb_qn_id,\n              requirement\n            } = question;\n            const labelId = `checkbox-list-secondary-label-${fb_qn_id}`;\n            return /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(ListItem, {\n                button: true,\n                className: classes.listItem,\n                children: [/*#__PURE__*/_jsxDEV(ListItemText, {\n                  id: fb_qn_id,\n                  primary: `${requirement}`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 145,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(ListItemSecondaryAction, {\n                  className: classes.checkbox,\n                  children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                    edge: \"end\",\n                    onChange: handleToggle(fb_qn_id),\n                    checked: checked.indexOf(fb_qn_id) !== -1,\n                    inputProps: {\n                      \"aria-labelledby\": labelId\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 147,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 146,\n                  columnNumber: 23\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"outlined\",\n                  color: \"primary\",\n                  onClick: handleClickOpen,\n                  children: \"Open form dialog\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 156,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n                  open: open,\n                  onClose: handleClose,\n                  \"aria-labelledby\": \"form-dialog-title\",\n                  className: classes.dialog,\n                  children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n                    id: \"form-dialog-title\",\n                    children: \"Subscribe\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 169,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n                    children: [/*#__PURE__*/_jsxDEV(DialogContentText, {\n                      children: \"To subscribe to this website, please enter your email address here. We will send updates occasionally.\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 173,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                      autoFocus: true,\n                      margin: \"dense\",\n                      id: \"name\",\n                      label: \"Email Address\",\n                      type: \"email\",\n                      fullWidth: true\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 178,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 172,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n                    children: [/*#__PURE__*/_jsxDEV(Button, {\n                      onClick: handleClose,\n                      color: \"primary\",\n                      children: \"Cancel\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 188,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(Button, {\n                      onClick: handleClose,\n                      color: \"primary\",\n                      children: \"Subscribe\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 191,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 187,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 163,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: classes.button,\n          size: \"small\" // color=\"secondary\"\n          ,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 9\n    }, this)\n  }, void 0, false) // <div>\n  //   {fbChecklistState ? (\n  //     <>\n  //       <Navbar />\n  //       <div className=\"category-head\">\n  //         <h2>FB Checklist</h2>\n  //         {fbChecklistState.map((question, index) => {\n  //           const { fb_qn_id, requirement } = question;\n  //           return (\n  //             <Question\n  //               key={index}\n  //               fb_qn_id={fb_qn_id}\n  //               requirement={requirement}\n  //               tenantId={tenantId}\n  //             />\n  //           );\n  //         })}\n  //         <br />\n  //         {/* <Link to={`/tenant/${tenantId}`}> */}\n  //         <button\n  //           // onClick={() => {\n  //           //   updateAudit(tenantId, \"FB\", tenantName, \"unresolved\");\n  //           //   resetTenantFbChecklist(tenantId);\n  //           // }}\n  //           onClick={() => submitFbReport(1006, fbReportState)}\n  //         >\n  //           Submit\n  //         </button>\n  //         {/* </Link> */}\n  //       </div>\n  //     </>\n  //   ) : (\n  //     <Loading />\n  //   )}\n  // </div>\n  ;\n}\n\n_s(FbChecklist, \"mn48ZiLev3/LrqxDoXzzKo9U0w8=\", false, function () {\n  return [useStyles, useParams];\n});\n\n_c = FbChecklist;\nexport default FbChecklist;\n\nvar _c;\n\n$RefreshReg$(_c, \"FbChecklist\");","map":{"version":3,"sources":["/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/pages/FbChecklist.js"],"names":["React","useState","useContext","useEffect","useCallback","useParams","Question","Context","Loading","Navbar","makeStyles","List","ListItem","ListItemSecondaryAction","ListItemText","ListItemAvatar","Checkbox","Avatar","Button","Grid","TextField","AccountCircle","InputAdornment","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","useStyles","theme","root","display","flexDirection","alignItems","padding","spacing","list","width","maxWidth","backgroundColor","palette","background","paper","button","height","color","fontWeight","listItem","checkbox","commentBox","dialog","FbChecklist","classes","tenantId","getFbChecklistQuestions","createFbReportState","setFbReportState","fbChecklistState","setFbChecklistState","checked","setChecked","comments","setComments","open","setOpen","then","response","data","catch","console","log","handleClickOpen","handleClose","handleToggle","question_id","currentIndex","indexOf","newChecked","push","splice","prevState","map","question","qn_id","status","index","fb_qn_id","requirement","labelId"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect, useCallback } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Question from \"../components/Question\";\nimport { Context } from \"../Context\";\nimport Loading from \"./Loading\";\nimport Navbar from \"../Navbar\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\n\n//styling for the fbchecklist page\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    padding: theme.spacing(5, 0, 5, 0),\n  },\n  list: {\n    width: \"100%\",\n    maxWidth: 800,\n    backgroundColor: theme.palette.background.paper,\n    display: \"flex\",\n    flexDirection: \"column\",\n\n    // alignItems: \"center\",\n  },\n  button: {\n    width: \"100%\",\n    height: 50,\n    maxWidth: 800,\n    color: \"#F15A22\",\n    fontWeight: \"medium\",\n    backgroundColor: theme.palette.background.paper,\n  },\n  listItem: {\n    padding: theme.spacing(2, 5, 2, 5),\n  },\n  checkbox: {\n    // padding: theme.spacing(0, 2, 0, 3),\n  },\n  commentBox: {\n    padding: theme.spacing(2, 5, 2, 5),\n  },\n  dialog: {\n    backgroundColor: \"transparent\",\n  },\n}));\n\nfunction FbChecklist() {\n  //use styles from function declared above\n  const classes = useStyles();\n  //get tenant id from url\n  const { tenantId } = useParams();\n\n  //Context\n  const {\n    getFbChecklistQuestions,\n    createFbReportState,\n    setFbReportState,\n  } = useContext(Context);\n\n  //state to update fb checklist questions\n  const [fbChecklistState, setFbChecklistState] = useState();\n  //state to update number of checked boxes\n  const [checked, setChecked] = useState([]);\n  //state to update comments\n  const [comments, setComments] = useState([]);\n  //state for dialog modal\n  const [open, setOpen] = useState(false);\n\n  useEffect(() => {\n    //function to retrieve questions\n    getFbChecklistQuestions()\n      .then((response) => {\n        setFbChecklistState(response.data);\n        createFbReportState(response.data);\n      })\n      .catch(() => {\n        console.log(\"fb checklist retrieval failed\");\n      });\n  }, []);\n\n  //when dialog is clicked\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  //when dialog is closed\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  //handle the checkbox changes\n  const handleToggle = (question_id) => () => {\n    //current question id\n    const currentIndex = checked.indexOf(question_id);\n\n    const newChecked = [...checked];\n\n    if (currentIndex === -1) {\n      newChecked.push(question_id);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n    //update the checked state\n    setChecked(newChecked);\n    //update fb report state\n    setFbReportState((prevState) => {\n      return prevState.map((question) =>\n        question.qn_id === question_id\n          ? { ...question, status: !question.status }\n          : question\n      );\n    });\n  };\n\n  return (\n    <>\n      {fbChecklistState ? (\n        <>\n          <Navbar />\n          <Grid container className={classes.root}>\n            <List dense className={classes.list}>\n              {fbChecklistState.map((question, index) => {\n                const { fb_qn_id, requirement } = question;\n                const labelId = `checkbox-list-secondary-label-${fb_qn_id}`;\n                return (\n                  <>\n                    <ListItem key={index} button className={classes.listItem}>\n                      <ListItemText id={fb_qn_id} primary={`${requirement}`} />\n                      <ListItemSecondaryAction className={classes.checkbox}>\n                        <Checkbox\n                          edge=\"end\"\n                          onChange={handleToggle(fb_qn_id)}\n                          checked={checked.indexOf(fb_qn_id) !== -1}\n                          inputProps={{ \"aria-labelledby\": labelId }}\n                        />\n                      </ListItemSecondaryAction>\n                    </ListItem>\n                    <div>\n                      <Button\n                        variant=\"outlined\"\n                        color=\"primary\"\n                        onClick={handleClickOpen}\n                      >\n                        Open form dialog\n                      </Button>\n                      <Dialog\n                        open={open}\n                        onClose={handleClose}\n                        aria-labelledby=\"form-dialog-title\"\n                        className={classes.dialog}\n                      >\n                        <DialogTitle id=\"form-dialog-title\">\n                          Subscribe\n                        </DialogTitle>\n                        <DialogContent>\n                          <DialogContentText>\n                            To subscribe to this website, please enter your\n                            email address here. We will send updates\n                            occasionally.\n                          </DialogContentText>\n                          <TextField\n                            autoFocus\n                            margin=\"dense\"\n                            id=\"name\"\n                            label=\"Email Address\"\n                            type=\"email\"\n                            fullWidth\n                          />\n                        </DialogContent>\n                        <DialogActions>\n                          <Button onClick={handleClose} color=\"primary\">\n                            Cancel\n                          </Button>\n                          <Button onClick={handleClose} color=\"primary\">\n                            Subscribe\n                          </Button>\n                        </DialogActions>\n                      </Dialog>\n                    </div>\n                    {/* <TextField\n                      className={classes.commentBox}\n                      id=\"input-with-icon-textfield\"\n                      label=\"Comment\"\n                      InputProps={{\n                        startAdornment: (\n                          <InputAdornment position=\"start\">\n                            <AccountCircle />\n                          </InputAdornment>\n                        ),\n                      }}\n                    /> */}\n                  </>\n                );\n              })}\n            </List>\n            <Button\n              className={classes.button}\n              size=\"small\"\n              // color=\"secondary\"\n            >\n              Submit\n            </Button>\n          </Grid>\n        </>\n      ) : (\n        <Loading />\n      )}\n    </>\n    // <div>\n    //   {fbChecklistState ? (\n    //     <>\n    //       <Navbar />\n    //       <div className=\"category-head\">\n    //         <h2>FB Checklist</h2>\n    //         {fbChecklistState.map((question, index) => {\n    //           const { fb_qn_id, requirement } = question;\n    //           return (\n    //             <Question\n    //               key={index}\n    //               fb_qn_id={fb_qn_id}\n    //               requirement={requirement}\n    //               tenantId={tenantId}\n    //             />\n    //           );\n    //         })}\n    //         <br />\n    //         {/* <Link to={`/tenant/${tenantId}`}> */}\n    //         <button\n    //           // onClick={() => {\n    //           //   updateAudit(tenantId, \"FB\", tenantName, \"unresolved\");\n    //           //   resetTenantFbChecklist(tenantId);\n    //           // }}\n    //           onClick={() => submitFbReport(1006, fbReportState)}\n    //         >\n    //           Submit\n    //         </button>\n    //         {/* </Link> */}\n    //       </div>\n    //     </>\n    //   ) : (\n    //     <Loading />\n    //   )}\n    // </div>\n  );\n}\n\nexport default FbChecklist;\n"]},"metadata":{},"sourceType":"module"}