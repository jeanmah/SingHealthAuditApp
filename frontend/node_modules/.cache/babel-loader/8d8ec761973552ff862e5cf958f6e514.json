{"ast":null,"code":"var _jsxFileName = \"/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/pages/Institution.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useCallback, useState } from \"react\";\nimport { tenants, institutions } from \"../data\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { FaAngleRight } from \"react-icons/fa\";\nimport Navbar from \"../Navbar\";\nimport { Context } from \"../Context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Institution = /*#__PURE__*/React.memo(_c = _s(() => {\n  _s();\n\n  //obtain id which is indicated in the url\n  const {\n    institutionName\n  } = useParams();\n  const {\n    getInstitutionTenants\n  } = useContext(Context);\n  const [institutionState, setInstitutionState] = useState([]);\n  getInstitutionTenants(institutionName).then(response => {\n    //update state of institution tenants\n    console.log(response.data);\n    setInstitutionState(response.data);\n  }).catch(() => {\n    console.log(\"Failed to get tenants in the institution\");\n  }); // array of one object which is the selected institution\n\n  const selectedInstitution = institutions.filter(institution => {\n    const {\n      name\n    } = institution;\n    return institutionName === name;\n  }); //filter the tenants based on the selected institution\n  // const selectedTenants = tenants.filter((tenant) => {\n  //   const { institution } = tenant;\n  //   return institutionName === institution;\n  // });\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), selectedInstitution.map((institution, index) => {\n      const {\n        id,\n        name,\n        imageUrl\n      } = institution;\n      return /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"institution-header\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: imageUrl,\n          className: \"institution-logo\",\n          alt: \"logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this)\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this);\n    }), institutionState.map((tenant, index) => {\n      const {\n        store_name,\n        acc_id\n      } = tenant;\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: `/tenant/${acc_id}`,\n          children: /*#__PURE__*/_jsxDEV(\"section\", {\n            className: \"institution-tenant-resolved\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: store_name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"institution-tenantbtn\",\n              children: /*#__PURE__*/_jsxDEV(FaAngleRight, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this)\n        }, acc_id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this)\n      }, void 0, false);\n    })]\n  }, void 0, true);\n}, \"VqENTBTzjxI/HinV4RkN7L8e4Ks=\", false, function () {\n  return [useParams];\n}));\n_c2 = Institution;\nexport default Institution;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Institution$React.memo\");\n$RefreshReg$(_c2, \"Institution\");","map":{"version":3,"sources":["/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/pages/Institution.js"],"names":["React","useContext","useCallback","useState","tenants","institutions","Link","useParams","FaAngleRight","Navbar","Context","Institution","memo","institutionName","getInstitutionTenants","institutionState","setInstitutionState","then","response","console","log","data","catch","selectedInstitution","filter","institution","name","map","index","id","imageUrl","tenant","store_name","acc_id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,WAA5B,EAAyCC,QAAzC,QAAyD,OAAzD;AACA,SAASC,OAAT,EAAkBC,YAAlB,QAAsC,SAAtC;AACA,SAASC,IAAT,EAAeC,SAAf,QAAgC,kBAAhC;AACA,SAASC,YAAT,QAA6B,gBAA7B;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,SAASC,OAAT,QAAwB,YAAxB;;;AAEA,MAAMC,WAAW,gBAAGX,KAAK,CAACY,IAAN,SAAW,MAAM;AAAA;;AACnC;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAsBN,SAAS,EAArC;AACA,QAAM;AAAEO,IAAAA;AAAF,MAA4Bb,UAAU,CAACS,OAAD,CAA5C;AACA,QAAM,CAACK,gBAAD,EAAmBC,mBAAnB,IAA0Cb,QAAQ,CAAC,EAAD,CAAxD;AAEAW,EAAAA,qBAAqB,CAACD,eAAD,CAArB,CACGI,IADH,CACSC,QAAD,IAAc;AAClB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB;AACAL,IAAAA,mBAAmB,CAACE,QAAQ,CAACG,IAAV,CAAnB;AACD,GALH,EAMGC,KANH,CAMS,MAAM;AACXH,IAAAA,OAAO,CAACC,GAAR,CAAY,0CAAZ;AACD,GARH,EANmC,CAgBnC;;AACA,QAAMG,mBAAmB,GAAGlB,YAAY,CAACmB,MAAb,CAAqBC,WAAD,IAAiB;AAC/D,UAAM;AAAEC,MAAAA;AAAF,QAAWD,WAAjB;AACA,WAAOZ,eAAe,KAAKa,IAA3B;AACD,GAH2B,CAA5B,CAjBmC,CAqBnC;AACA;AACA;AACA;AACA;;AAEA,sBACE;AAAA,4BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADF,EAEGH,mBAAmB,CAACI,GAApB,CAAwB,CAACF,WAAD,EAAcG,KAAd,KAAwB;AAC/C,YAAM;AAAEC,QAAAA,EAAF;AAAMH,QAAAA,IAAN;AAAYI,QAAAA;AAAZ,UAAyBL,WAA/B;AACA,0BACE;AAAkB,QAAA,SAAS,EAAC,oBAA5B;AAAA,+BACE;AAAK,UAAA,GAAG,EAAEK,QAAV;AAAoB,UAAA,SAAS,EAAC,kBAA9B;AAAiD,UAAA,GAAG,EAAC;AAArD;AAAA;AAAA;AAAA;AAAA;AADF,SAAcD,EAAd;AAAA;AAAA;AAAA;AAAA,cADF;AAKD,KAPA,CAFH,EAUGd,gBAAgB,CAACY,GAAjB,CAAqB,CAACI,MAAD,EAASH,KAAT,KAAmB;AACvC,YAAM;AAAEI,QAAAA,UAAF;AAAcC,QAAAA;AAAd,UAAyBF,MAA/B;AACA,0BACE;AAAA,+BACE,QAAC,IAAD;AAAmB,UAAA,EAAE,EAAG,WAAUE,MAAO,EAAzC;AAAA,iCACE;AAAS,YAAA,SAAS,EAAC,6BAAnB;AAAA,oCACE;AAAA,wBAAMD;AAAN;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAK,cAAA,SAAS,EAAC,uBAAf;AAAA,qCACE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,WAAWC,MAAX;AAAA;AAAA;AAAA;AAAA;AADF,uBADF;AAYD,KAdA,CAVH;AAAA,kBADF;AA4BD,CAvDmB;AAAA,UAEU1B,SAFV;AAAA,GAApB;MAAMI,W;AAyDN,eAAeA,WAAf","sourcesContent":["import React, { useContext, useCallback, useState } from \"react\";\nimport { tenants, institutions } from \"../data\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { FaAngleRight } from \"react-icons/fa\";\nimport Navbar from \"../Navbar\";\nimport { Context } from \"../Context\";\n\nconst Institution = React.memo(() => {\n  //obtain id which is indicated in the url\n  const { institutionName } = useParams();\n  const { getInstitutionTenants } = useContext(Context);\n  const [institutionState, setInstitutionState] = useState([]);\n\n  getInstitutionTenants(institutionName)\n    .then((response) => {\n      //update state of institution tenants\n      console.log(response.data);\n      setInstitutionState(response.data);\n    })\n    .catch(() => {\n      console.log(\"Failed to get tenants in the institution\");\n    });\n\n  // array of one object which is the selected institution\n  const selectedInstitution = institutions.filter((institution) => {\n    const { name } = institution;\n    return institutionName === name;\n  });\n  //filter the tenants based on the selected institution\n  // const selectedTenants = tenants.filter((tenant) => {\n  //   const { institution } = tenant;\n  //   return institutionName === institution;\n  // });\n\n  return (\n    <>\n      <Navbar />\n      {selectedInstitution.map((institution, index) => {\n        const { id, name, imageUrl } = institution;\n        return (\n          <section key={id} className=\"institution-header\">\n            <img src={imageUrl} className=\"institution-logo\" alt=\"logo\"></img>\n          </section>\n        );\n      })}\n      {institutionState.map((tenant, index) => {\n        const { store_name, acc_id } = tenant;\n        return (\n          <>\n            <Link key={acc_id} to={`/tenant/${acc_id}`}>\n              <section className=\"institution-tenant-resolved\">\n                <div>{store_name}</div>\n                <div className=\"institution-tenantbtn\">\n                  <FaAngleRight />\n                </div>\n              </section>\n            </Link>\n          </>\n        );\n      })}\n    </>\n  );\n});\n\nexport default Institution;\n"]},"metadata":{},"sourceType":"module"}