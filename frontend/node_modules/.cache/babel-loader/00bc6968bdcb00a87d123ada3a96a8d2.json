{"ast":null,"code":"var _jsxFileName = \"/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/pages/FbChecklist.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext, useEffect, useCallback } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Question from \"../components/Question\";\nimport { Context } from \"../Context\";\nimport Loading from \"./Loading\";\nimport Navbar from \"../Navbar\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: \"100%\",\n    maxWidth: 360,\n    backgroundColor: theme.palette.background.paper\n  }\n}));\n\nfunction FbCategory() {\n  _s();\n\n  //get tenant id from url\n  const {\n    tenantId\n  } = useParams();\n  const [fbChecklistState, setFbChecklistState] = useState(); //Context: Fb Checklist\n\n  const {\n    getFbChecklistQuestions,\n    createFbReportState\n  } = useContext(Context);\n  const classes = useStyles();\n  const [checked, setChecked] = useState([1]);\n\n  const handleToggle = value => () => {\n    console.log(checked);\n    const currentIndex = checked.indexOf(value);\n    const newChecked = [...checked];\n\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n\n    setChecked(newChecked);\n    console.log(newChecked);\n  };\n\n  useEffect(() => {\n    //function to retrieve questions\n    getFbChecklistQuestions().then(response => {\n      setFbChecklistState(response.data);\n      createFbReportState(response.data);\n    }).catch(() => {\n      console.log(\"fb checklist retrieval failed\");\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: fbChecklistState ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        dense: true,\n        className: classes.root,\n        children: [0, 1, 2, 3].map(value => {\n          const labelId = `checkbox-list-secondary-label-${value}`;\n          return /*#__PURE__*/_jsxDEV(ListItem, {\n            button: true,\n            children: [/*#__PURE__*/_jsxDEV(ListItemText, {\n              id: labelId,\n              primary: `Line item ${value + 1}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(ListItemSecondaryAction, {\n              children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                edge: \"end\",\n                onChange: handleToggle(value),\n                checked: checked.indexOf(value) !== -1,\n                inputProps: {\n                  \"aria-labelledby\": labelId\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 19\n            }, this)]\n          }, value, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }, this)\n  }, void 0, false) // <div>\n  //   {fbChecklistState ? (\n  //     <>\n  //       <Navbar />\n  //       <div className=\"category-head\">\n  //         <h2>FB Checklist</h2>\n  //         {fbChecklistState.map((question, index) => {\n  //           const { fb_qn_id, requirement } = question;\n  //           return (\n  //             <Question\n  //               key={index}\n  //               fb_qn_id={fb_qn_id}\n  //               requirement={requirement}\n  //               tenantId={tenantId}\n  //             />\n  //           );\n  //         })}\n  //         <br />\n  //         {/* <Link to={`/tenant/${tenantId}`}> */}\n  //         <button\n  //           // onClick={() => {\n  //           //   updateAudit(tenantId, \"FB\", tenantName, \"unresolved\");\n  //           //   resetTenantFbChecklist(tenantId);\n  //           // }}\n  //           onClick={() => submitFbReport(1006, fbReportState)}\n  //         >\n  //           Submit\n  //         </button>\n  //         {/* </Link> */}\n  //       </div>\n  //     </>\n  //   ) : (\n  //     <Loading />\n  //   )}\n  // </div>\n  ;\n}\n\n_s(FbCategory, \"PuhXIsHjF/pEqzucRjDmR5uhIBk=\", false, function () {\n  return [useParams, useStyles];\n});\n\n_c = FbCategory;\nexport default FbCategory;\n\nvar _c;\n\n$RefreshReg$(_c, \"FbCategory\");","map":{"version":3,"sources":["/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/pages/FbChecklist.js"],"names":["React","useState","useContext","useEffect","useCallback","useParams","Question","Context","Loading","Navbar","makeStyles","List","ListItem","ListItemSecondaryAction","ListItemText","ListItemAvatar","Checkbox","Avatar","useStyles","theme","root","width","maxWidth","backgroundColor","palette","background","paper","FbCategory","tenantId","fbChecklistState","setFbChecklistState","getFbChecklistQuestions","createFbReportState","classes","checked","setChecked","handleToggle","value","console","log","currentIndex","indexOf","newChecked","push","splice","then","response","data","catch","map","labelId"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,EAAsCC,SAAtC,EAAiDC,WAAjD,QAAoE,OAApE;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAASC,OAAT,QAAwB,YAAxB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,uBAAP,MAAoC,2CAApC;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;;;AAEA,MAAMC,SAAS,GAAGR,UAAU,CAAES,KAAD,KAAY;AACvCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,KAAK,EAAE,MADH;AAEJC,IAAAA,QAAQ,EAAE,GAFN;AAGJC,IAAAA,eAAe,EAAEJ,KAAK,CAACK,OAAN,CAAcC,UAAd,CAAyBC;AAHtC;AADiC,CAAZ,CAAD,CAA5B;;AAQA,SAASC,UAAT,GAAsB;AAAA;;AACpB;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAevB,SAAS,EAA9B;AAEA,QAAM,CAACwB,gBAAD,EAAmBC,mBAAnB,IAA0C7B,QAAQ,EAAxD,CAJoB,CAKpB;;AACA,QAAM;AAAE8B,IAAAA,uBAAF;AAA2BC,IAAAA;AAA3B,MAAmD9B,UAAU,CAACK,OAAD,CAAnE;AAEA,QAAM0B,OAAO,GAAGf,SAAS,EAAzB;AACA,QAAM,CAACgB,OAAD,EAAUC,UAAV,IAAwBlC,QAAQ,CAAC,CAAC,CAAD,CAAD,CAAtC;;AAEA,QAAMmC,YAAY,GAAIC,KAAD,IAAW,MAAM;AACpCC,IAAAA,OAAO,CAACC,GAAR,CAAYL,OAAZ;AACA,UAAMM,YAAY,GAAGN,OAAO,CAACO,OAAR,CAAgBJ,KAAhB,CAArB;AACA,UAAMK,UAAU,GAAG,CAAC,GAAGR,OAAJ,CAAnB;;AAEA,QAAIM,YAAY,KAAK,CAAC,CAAtB,EAAyB;AACvBE,MAAAA,UAAU,CAACC,IAAX,CAAgBN,KAAhB;AACD,KAFD,MAEO;AACLK,MAAAA,UAAU,CAACE,MAAX,CAAkBJ,YAAlB,EAAgC,CAAhC;AACD;;AAEDL,IAAAA,UAAU,CAACO,UAAD,CAAV;AACAJ,IAAAA,OAAO,CAACC,GAAR,CAAYG,UAAZ;AACD,GAbD;;AAeAvC,EAAAA,SAAS,CAAC,MAAM;AACd;AACA4B,IAAAA,uBAAuB,GACpBc,IADH,CACSC,QAAD,IAAc;AAClBhB,MAAAA,mBAAmB,CAACgB,QAAQ,CAACC,IAAV,CAAnB;AACAf,MAAAA,mBAAmB,CAACc,QAAQ,CAACC,IAAV,CAAnB;AACD,KAJH,EAKGC,KALH,CAKS,MAAM;AACXV,MAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ;AACD,KAPH;AAQD,GAVQ,EAUN,EAVM,CAAT;AAYA,sBACE;AAAA,cACGV,gBAAgB,gBACf;AAAA,8BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,IAAD;AAAM,QAAA,KAAK,MAAX;AAAY,QAAA,SAAS,EAAEI,OAAO,CAACb,IAA/B;AAAA,kBACG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa6B,GAAb,CAAkBZ,KAAD,IAAW;AAC3B,gBAAMa,OAAO,GAAI,iCAAgCb,KAAM,EAAvD;AACA,8BACE,QAAC,QAAD;AAAsB,YAAA,MAAM,MAA5B;AAAA,oCACE,QAAC,YAAD;AACE,cAAA,EAAE,EAAEa,OADN;AAEE,cAAA,OAAO,EAAG,aAAYb,KAAK,GAAG,CAAE;AAFlC;AAAA;AAAA;AAAA;AAAA,oBADF,eAKE,QAAC,uBAAD;AAAA,qCACE,QAAC,QAAD;AACE,gBAAA,IAAI,EAAC,KADP;AAEE,gBAAA,QAAQ,EAAED,YAAY,CAACC,KAAD,CAFxB;AAGE,gBAAA,OAAO,EAAEH,OAAO,CAACO,OAAR,CAAgBJ,KAAhB,MAA2B,CAAC,CAHvC;AAIE,gBAAA,UAAU,EAAE;AAAE,qCAAmBa;AAArB;AAJd;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBALF;AAAA,aAAeb,KAAf;AAAA;AAAA;AAAA;AAAA,kBADF;AAgBD,SAlBA;AADH;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA,oBADe,gBA0Bf,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AA3BJ,mBADF,CA+BE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAjEF;AAmED;;GAzGQV,U;UAEctB,S,EAMLa,S;;;KARTS,U;AA2GT,eAAeA,UAAf","sourcesContent":["import React, { useState, useContext, useEffect, useCallback } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Question from \"../components/Question\";\nimport { Context } from \"../Context\";\nimport Loading from \"./Loading\";\nimport Navbar from \"../Navbar\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Avatar from \"@material-ui/core/Avatar\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    maxWidth: 360,\n    backgroundColor: theme.palette.background.paper,\n  },\n}));\n\nfunction FbCategory() {\n  //get tenant id from url\n  const { tenantId } = useParams();\n\n  const [fbChecklistState, setFbChecklistState] = useState();\n  //Context: Fb Checklist\n  const { getFbChecklistQuestions, createFbReportState } = useContext(Context);\n\n  const classes = useStyles();\n  const [checked, setChecked] = useState([1]);\n\n  const handleToggle = (value) => () => {\n    console.log(checked);\n    const currentIndex = checked.indexOf(value);\n    const newChecked = [...checked];\n\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n\n    setChecked(newChecked);\n    console.log(newChecked);\n  };\n\n  useEffect(() => {\n    //function to retrieve questions\n    getFbChecklistQuestions()\n      .then((response) => {\n        setFbChecklistState(response.data);\n        createFbReportState(response.data);\n      })\n      .catch(() => {\n        console.log(\"fb checklist retrieval failed\");\n      });\n  }, []);\n\n  return (\n    <>\n      {fbChecklistState ? (\n        <>\n          <Navbar />\n          <List dense className={classes.root}>\n            {[0, 1, 2, 3].map((value) => {\n              const labelId = `checkbox-list-secondary-label-${value}`;\n              return (\n                <ListItem key={value} button>\n                  <ListItemText\n                    id={labelId}\n                    primary={`Line item ${value + 1}`}\n                  />\n                  <ListItemSecondaryAction>\n                    <Checkbox\n                      edge=\"end\"\n                      onChange={handleToggle(value)}\n                      checked={checked.indexOf(value) !== -1}\n                      inputProps={{ \"aria-labelledby\": labelId }}\n                    />\n                  </ListItemSecondaryAction>\n                </ListItem>\n              );\n            })}\n          </List>\n        </>\n      ) : (\n        <Loading />\n      )}\n    </>\n    // <div>\n    //   {fbChecklistState ? (\n    //     <>\n    //       <Navbar />\n    //       <div className=\"category-head\">\n    //         <h2>FB Checklist</h2>\n    //         {fbChecklistState.map((question, index) => {\n    //           const { fb_qn_id, requirement } = question;\n    //           return (\n    //             <Question\n    //               key={index}\n    //               fb_qn_id={fb_qn_id}\n    //               requirement={requirement}\n    //               tenantId={tenantId}\n    //             />\n    //           );\n    //         })}\n    //         <br />\n    //         {/* <Link to={`/tenant/${tenantId}`}> */}\n    //         <button\n    //           // onClick={() => {\n    //           //   updateAudit(tenantId, \"FB\", tenantName, \"unresolved\");\n    //           //   resetTenantFbChecklist(tenantId);\n    //           // }}\n    //           onClick={() => submitFbReport(1006, fbReportState)}\n    //         >\n    //           Submit\n    //         </button>\n    //         {/* </Link> */}\n    //       </div>\n    //     </>\n    //   ) : (\n    //     <Loading />\n    //   )}\n    // </div>\n  );\n}\n\nexport default FbCategory;\n"]},"metadata":{},"sourceType":"module"}