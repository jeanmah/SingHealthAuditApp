{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Documents/SingHealthAuditApp/frontend/src/pages/Chat.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useContext } from \"react\";\nimport { Link } from 'react-router-dom';\nimport { Typography, Button } from \"@material-ui/core\";\nimport axios from \"axios\";\nimport { Context } from \"../Context\";\nimport Navbar from \"../Navbar\";\nimport useStyles from \"../styles\";\nimport { FormGroup } from \"@material-ui/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Chat() {\n  _s();\n\n  const {\n    allChatsOfUserState,\n    getAllChatsOfUser\n  } = useContext(Context);\n  useEffect(() => {\n    getAllChatsOfUser();\n  }, []);\n  useEffect(() => {\n    const username = sessionStorage.getItem(\"authenticatedUser\");\n\n    async function getResponse() {\n      try {\n        const reportIdArray = await getAudits(username).then(response => {\n          console.log(response);\n          return [...response.data.CLOSED.completed_audits, ...response.data.OPEN.outstanding_audits];\n        }); //initialize array to store all objects of report info\n\n        let reportInfoArray = [];\n\n        for (let i = 0; i < reportIdArray.length; i++) {\n          let reportInfo = await getReport(reportIdArray[i]).then(response => {\n            console.log(response);\n            return response.data;\n          });\n          reportInfoArray.push(reportInfo);\n        } //set state of audits to be an array of report info objects\n\n\n        setAuditsState(reportInfoArray);\n      } catch (err) {\n        console.log(err);\n      }\n    }\n\n    getResponse();\n  }, []);\n  const styles = useStyles();\n\n  const ChatInfo = props => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Chat ID: \", props.chat_id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Tenant ID: \", props.tenant_id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Auditor ID: \", props.auditor_id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Messages: \", props.messages]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: styles.main,\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h3\",\n      align: \"center\",\n      children: \"Chat\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      className: styles.buttons,\n      align: \"center\",\n      variant: \"outlined\",\n      color: \"primary\",\n      fullWidth: true // onClick={() => {\n      //   console.log(\"chatState: \" + allChatsOfUserState);\n      //   console.log(\"firstChat: \" + allChatsOfUserState[0]);\n      //   console.log(\"firstChatID: \" + allChatsOfUserState[0].chat_id);\n      // }}\n      ,\n      children: \"Get All Chats of User\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Chat, \"oANPuQtEefbdvW0o9f+dMvBo8VY=\", false, function () {\n  return [useStyles];\n});\n\n_c = Chat;\nexport default Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["/Users/mac/Documents/SingHealthAuditApp/frontend/src/pages/Chat.js"],"names":["React","useEffect","useContext","Link","Typography","Button","axios","Context","Navbar","useStyles","FormGroup","Chat","allChatsOfUserState","getAllChatsOfUser","username","sessionStorage","getItem","getResponse","reportIdArray","getAudits","then","response","console","log","data","CLOSED","completed_audits","OPEN","outstanding_audits","reportInfoArray","i","length","reportInfo","getReport","push","setAuditsState","err","styles","ChatInfo","props","chat_id","tenant_id","auditor_id","messages","main","buttons"],"mappings":"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","sourcesContent":["import React, { useEffect, useContext } from \"react\";\nimport { Link } from 'react-router-dom';\nimport { Typography, Button } from \"@material-ui/core\";\nimport axios from \"axios\";\n\nimport { Context } from \"../Context\";\nimport Navbar from \"../Navbar\";\nimport useStyles from \"../styles\";\nimport { FormGroup } from \"@material-ui/core\";\n\nfunction Chat() {\n\n  const {\n    allChatsOfUserState,\n    getAllChatsOfUser\n  } = useContext(Context);\n\n  useEffect(() => {\n    getAllChatsOfUser();\n  }, []);\n  \n  useEffect(() => {\n    const username = sessionStorage.getItem(\"authenticatedUser\");\n\n    async function getResponse() {\n      try {\n        const reportIdArray = await getAudits(username).then((response) => {\n          console.log(response);\n          return [\n            ...response.data.CLOSED.completed_audits,\n            ...response.data.OPEN.outstanding_audits,\n          ];\n        });\n        //initialize array to store all objects of report info\n        let reportInfoArray = [];\n\n        for (let i = 0; i < reportIdArray.length; i++) {\n          let reportInfo = await getReport(reportIdArray[i]).then(\n            (response) => {\n              console.log(response);\n              return response.data;\n            }\n          );\n          reportInfoArray.push(reportInfo);\n        }\n\n        //set state of audits to be an array of report info objects\n        setAuditsState(reportInfoArray);\n      } catch (err) {\n        console.log(err);\n      }\n    }\n    getResponse();\n  }, []);\n\n  const styles = useStyles();\n\n  const ChatInfo = (props) => {\n    return (\n      <div>\n        <div>Chat ID: {props.chat_id}</div>\n        <div>Tenant ID: {props.tenant_id}</div>\n        <div>Auditor ID: {props.auditor_id}</div>\n        <div>Messages: {props.messages}</div>\n      </div>   \n    );\n  };\n\n  return (\n    <main className={styles.main}>\n      <Navbar />\n      <br />\n      <Typography variant=\"h3\" align=\"center\">Chat</Typography>\n      <Button\n        className={styles.buttons}\n        align=\"center\"\n        variant=\"outlined\"\n        color=\"primary\"\n        fullWidth\n        // onClick={() => {\n        //   console.log(\"chatState: \" + allChatsOfUserState);\n        //   console.log(\"firstChat: \" + allChatsOfUserState[0]);\n        //   console.log(\"firstChatID: \" + allChatsOfUserState[0].chat_id);\n        // }}\n      >\n        Get All Chats of User\n      </Button>\n\n      {/* <div>\n        {allChatsOfUserState.map((chat, index) => {\n          console.log(\"Chats in chat page: \" + chat.chat_id);\n          console.log(\"Chat info: \" + chat);\n          return (\n            <ChatInfo key={index}\n              chat_id={chat.chat_id}\n              tenant_id={chat.tenant_id}\n              auditor_id={chat.auditor_id}\n              messages={chat.messages}\n            />\n          )\n        })}\n      </div> */}\n\n      {/* <ChatInfo \n        chat_id={allChatsOfUserState[0].chat_id}\n        tenant_id={allChatsOfUserState[0].tenant_id}\n        auditor_id={allChatsOfUserState[0].auditor_id}\n        messages={allChatsOfUserState[0].messages}\n      /> */}\n\n    </main>\n  )\n}\n\nexport default Chat;"]},"metadata":{},"sourceType":"module"}