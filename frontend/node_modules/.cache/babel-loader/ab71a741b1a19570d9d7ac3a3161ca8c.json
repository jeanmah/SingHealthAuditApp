{"ast":null,"code":"var _jsxFileName = \"/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/pages/Institution.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { tenants, institutions } from \"../data\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { FaAngleRight } from \"react-icons/fa\";\nimport Navbar from \"../Navbar\";\nimport { Context } from \"../Context\";\nimport Loading from \"./Loading\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Institution = /*#__PURE__*/React.memo(_c = _s(() => {\n  _s();\n\n  //obtain id which is indicated in the url\n  const {\n    institutionName\n  } = useParams();\n  const {\n    getInstitutionTenants\n  } = useContext(Context);\n  const [institutionState, setInstitutionState] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    getInstitutionTenants(institutionName).then(response => {\n      //update state of institution tenants\n      console.log(response.data);\n      setInstitutionState({\n        institutionState: response.data\n      }, () => {\n        setIsLoading(false);\n      });\n    }).catch(() => {\n      console.log(\"Failed to get tenants in the institution\");\n    });\n  }, []);\n  useEffect(() => {}); // array of one object which is the selected institution\n\n  const selectedInstitution = institutions.filter(institution => {\n    const {\n      name\n    } = institution;\n    return institutionName === name;\n  }); //filter the tenants based on the selected institution\n  // const selectedTenants = tenants.filter((tenant) => {\n  //   const { institution } = tenant;\n  //   return institutionName === institution;\n  // });\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 21\n    }, this), !isLoading && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [selectedInstitution.map((institution, index) => {\n        const {\n          id,\n          name,\n          imageUrl\n        } = institution;\n        return /*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"institution-header\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: imageUrl,\n            className: \"institution-logo\",\n            alt: \"logo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 17\n          }, this)\n        }, id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 15\n        }, this);\n      }), institutionState.map((tenant, index) => {\n        const {\n          store_name,\n          acc_id\n        } = tenant;\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: `/tenant/${acc_id}`,\n            children: /*#__PURE__*/_jsxDEV(\"section\", {\n              className: \"institution-tenant-resolved\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: store_name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"institution-tenantbtn\",\n                children: /*#__PURE__*/_jsxDEV(FaAngleRight, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 69,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 19\n            }, this)\n          }, acc_id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 17\n          }, this)\n        }, void 0, false);\n      })]\n    }, void 0, true)]\n  }, void 0, true);\n}, \"Mp+K8Go+06Kf6ijw/zMZ1s9tKl4=\", false, function () {\n  return [useParams];\n}));\n_c2 = Institution;\nexport default Institution;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Institution$React.memo\");\n$RefreshReg$(_c2, \"Institution\");","map":{"version":3,"sources":["/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/pages/Institution.js"],"names":["React","useContext","useEffect","useState","tenants","institutions","Link","useParams","FaAngleRight","Navbar","Context","Loading","Institution","memo","institutionName","getInstitutionTenants","institutionState","setInstitutionState","isLoading","setIsLoading","then","response","console","log","data","catch","selectedInstitution","filter","institution","name","map","index","id","imageUrl","tenant","store_name","acc_id"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\nimport { tenants, institutions } from \"../data\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { FaAngleRight } from \"react-icons/fa\";\nimport Navbar from \"../Navbar\";\nimport { Context } from \"../Context\";\nimport Loading from \"./Loading\";\n\nconst Institution = React.memo(() => {\n  //obtain id which is indicated in the url\n  const { institutionName } = useParams();\n  const { getInstitutionTenants } = useContext(Context);\n  const [institutionState, setInstitutionState] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    getInstitutionTenants(institutionName)\n      .then((response) => {\n        //update state of institution tenants\n        console.log(response.data);\n        setInstitutionState({ institutionState: response.data }, () => {\n          setIsLoading(false);\n        });\n      })\n      .catch(() => {\n        console.log(\"Failed to get tenants in the institution\");\n      });\n  }, []);\n\n  useEffect(() => {});\n\n  // array of one object which is the selected institution\n  const selectedInstitution = institutions.filter((institution) => {\n    const { name } = institution;\n    return institutionName === name;\n  });\n  //filter the tenants based on the selected institution\n  // const selectedTenants = tenants.filter((tenant) => {\n  //   const { institution } = tenant;\n  //   return institutionName === institution;\n  // });\n\n  return (\n    <>\n      <Navbar />\n      {isLoading && <Loading />}\n      {!isLoading && (\n        <>\n          {selectedInstitution.map((institution, index) => {\n            const { id, name, imageUrl } = institution;\n            return (\n              <section key={id} className=\"institution-header\">\n                <img\n                  src={imageUrl}\n                  className=\"institution-logo\"\n                  alt=\"logo\"\n                ></img>\n              </section>\n            );\n          })}\n          {institutionState.map((tenant, index) => {\n            const { store_name, acc_id } = tenant;\n            return (\n              <>\n                <Link key={acc_id} to={`/tenant/${acc_id}`}>\n                  <section className=\"institution-tenant-resolved\">\n                    <div>{store_name}</div>\n                    <div className=\"institution-tenantbtn\">\n                      <FaAngleRight />\n                    </div>\n                  </section>\n                </Link>\n              </>\n            );\n          })}\n        </>\n      )}\n    </>\n  );\n});\n\nexport default Institution;\n"]},"metadata":{},"sourceType":"module"}