{"ast":null,"code":"var _jsxFileName = \"/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/components/testJwt/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport AuthenticationService from \"../../AuthenticationService\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Login() {\n  _s();\n\n  const [loginState, setLoginState] = useState({\n    username: \"\",\n    password: \"\",\n    hasLoginFailed: false,\n    showSuccessMessage: false\n  });\n\n  const handleChange = event => {\n    setState({\n      [event.target.name]: event.target.value\n    });\n  };\n\n  const loginClicked = () => {\n    AuthenticationService.executeJwtAuthenticationService(loginState.username, loginState.password).then(response => {\n      AuthenticationService.registerSuccessfulLoginForJwt(loginState.username, response.data.token);\n\n      if (response.data.accountType == \"Auditor\") {\n        return /*#__PURE__*/_jsxDEV(Redirect, {\n          to: `/`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 18\n        }, this);\n      }\n    }).catch(() => {\n      setState({\n        showSuccessMessage: false\n      });\n      setState({\n        hasLoginFailed: true\n      });\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [loginState.hasLoginFailed && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-warning\",\n        children: \"Invalid Credentials\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), loginState.showSuccessMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Login Sucessful\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 43\n      }, this), \"User Name:\", \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"username\",\n        value: loginState.username,\n        onChange: () => {\n          handleChange();\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), \"Password:\", \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        value: loginState.password,\n        onChange: () => {\n          handleChange();\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-success\",\n        onClick: () => {\n          loginClicked();\n        },\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Login, \"AVftgZODktl8itb356YdU6z75hU=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/components/testJwt/Login.js"],"names":["React","useState","AuthenticationService","Route","Redirect","Login","loginState","setLoginState","username","password","hasLoginFailed","showSuccessMessage","handleChange","event","setState","target","name","value","loginClicked","executeJwtAuthenticationService","then","response","registerSuccessfulLoginForJwt","data","token","accountType","catch"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,qBAAP,MAAkC,6BAAlC;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;;;AAEA,SAASC,KAAT,GAAiB;AAAA;;AACf,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BN,QAAQ,CAAC;AAC3CO,IAAAA,QAAQ,EAAE,EADiC;AAE3CC,IAAAA,QAAQ,EAAE,EAFiC;AAG3CC,IAAAA,cAAc,EAAE,KAH2B;AAI3CC,IAAAA,kBAAkB,EAAE;AAJuB,GAAD,CAA5C;;AAOA,QAAMC,YAAY,GAAIC,KAAD,IAAW;AAC9BC,IAAAA,QAAQ,CAAC;AACP,OAACD,KAAK,CAACE,MAAN,CAAaC,IAAd,GAAqBH,KAAK,CAACE,MAAN,CAAaE;AAD3B,KAAD,CAAR;AAGD,GAJD;;AAKA,QAAMC,YAAY,GAAG,MAAM;AACzBhB,IAAAA,qBAAqB,CAACiB,+BAAtB,CACEb,UAAU,CAACE,QADb,EAEEF,UAAU,CAACG,QAFb,EAIGW,IAJH,CAISC,QAAD,IAAc;AAClBnB,MAAAA,qBAAqB,CAACoB,6BAAtB,CACEhB,UAAU,CAACE,QADb,EAEEa,QAAQ,CAACE,IAAT,CAAcC,KAFhB;;AAIA,UAAIH,QAAQ,CAACE,IAAT,CAAcE,WAAd,IAA6B,SAAjC,EAA4C;AAC1C,4BAAO,QAAC,QAAD;AAAU,UAAA,EAAE,EAAG;AAAf;AAAA;AAAA;AAAA;AAAA,gBAAP;AACD;AACF,KAZH,EAaGC,KAbH,CAaS,MAAM;AACXZ,MAAAA,QAAQ,CAAC;AAAEH,QAAAA,kBAAkB,EAAE;AAAtB,OAAD,CAAR;AACAG,MAAAA,QAAQ,CAAC;AAAEJ,QAAAA,cAAc,EAAE;AAAlB,OAAD,CAAR;AACD,KAhBH;AAiBD,GAlBD;;AAmBA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,iBAEGJ,UAAU,CAACI,cAAX,iBACC;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,EAKGJ,UAAU,CAACK,kBAAX,iBAAiC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALpC,gBAOa,GAPb,eAQE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,IAAI,EAAC,UAFP;AAGE,QAAA,KAAK,EAAEL,UAAU,CAACE,QAHpB;AAIE,QAAA,QAAQ,EAAE,MAAM;AACdI,UAAAA,YAAY;AACb;AANH;AAAA;AAAA;AAAA;AAAA,cARF,eAgBY,GAhBZ,eAiBE;AACE,QAAA,IAAI,EAAC,UADP;AAEE,QAAA,IAAI,EAAC,UAFP;AAGE,QAAA,KAAK,EAAEN,UAAU,CAACG,QAHpB;AAIE,QAAA,QAAQ,EAAE,MAAM;AACdG,UAAAA,YAAY;AACb;AANH;AAAA;AAAA;AAAA;AAAA,cAjBF,eAyBE;AACE,QAAA,SAAS,EAAC,iBADZ;AAEE,QAAA,OAAO,EAAE,MAAM;AACbM,UAAAA,YAAY;AACb,SAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAzBF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAuCD;;GAvEQb,K;;KAAAA,K;AAyET,eAAeA,KAAf","sourcesContent":["import React, { useState } from \"react\";\nimport AuthenticationService from \"../../AuthenticationService\";\nimport { Route, Redirect } from \"react-router-dom\";\n\nfunction Login() {\n  const [loginState, setLoginState] = useState({\n    username: \"\",\n    password: \"\",\n    hasLoginFailed: false,\n    showSuccessMessage: false,\n  });\n\n  const handleChange = (event) => {\n    setState({\n      [event.target.name]: event.target.value,\n    });\n  };\n  const loginClicked = () => {\n    AuthenticationService.executeJwtAuthenticationService(\n      loginState.username,\n      loginState.password\n    )\n      .then((response) => {\n        AuthenticationService.registerSuccessfulLoginForJwt(\n          loginState.username,\n          response.data.token\n        );\n        if (response.data.accountType == \"Auditor\") {\n          return <Redirect to={`/`} />;\n        }\n      })\n      .catch(() => {\n        setState({ showSuccessMessage: false });\n        setState({ hasLoginFailed: true });\n      });\n  };\n  return (\n    <div>\n      <h1>Login</h1>\n      <div className=\"container\">\n        {/*<ShowInvalidCredentials hasLoginFailed={this.state.hasLoginFailed}/>*/}\n        {loginState.hasLoginFailed && (\n          <div className=\"alert alert-warning\">Invalid Credentials</div>\n        )}\n        {loginState.showSuccessMessage && <div>Login Sucessful</div>}\n        {/*<ShowLoginSuccessMessage showSuccessMessage={this.state.showSuccessMessage}/>*/}\n        User Name:{\" \"}\n        <input\n          type=\"text\"\n          name=\"username\"\n          value={loginState.username}\n          onChange={() => {\n            handleChange();\n          }}\n        />\n        Password:{\" \"}\n        <input\n          type=\"password\"\n          name=\"password\"\n          value={loginState.password}\n          onChange={() => {\n            handleChange();\n          }}\n        />\n        <button\n          className=\"btn btn-success\"\n          onClick={() => {\n            loginClicked();\n          }}\n        >\n          Login\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}