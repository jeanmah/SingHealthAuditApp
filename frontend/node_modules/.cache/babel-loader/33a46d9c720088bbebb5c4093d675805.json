{"ast":null,"code":"var _jsxFileName = \"/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/pages/FbChecklist.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext, useEffect, useCallback } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Question from \"../components/Question\";\nimport { Context } from \"../Context\";\nimport Loading from \"./Loading\";\nimport Navbar from \"../Navbar\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport Accordion from \"@material-ui/core/Accordion\";\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\"; //styling for the fbchecklist page\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    padding: theme.spacing(5, 0, 5, 0)\n  },\n  list: {\n    width: \"100%\",\n    maxWidth: 800,\n    backgroundColor: theme.palette.background.paper,\n    display: \"flex\",\n    flexDirection: \"column\" // alignItems: \"center\",\n\n  },\n  button: {\n    width: \"100%\",\n    height: 50,\n    maxWidth: 800,\n    color: \"#F15A22\",\n    fontWeight: \"medium\",\n    backgroundColor: theme.palette.background.paper\n  },\n  listItem: {\n    padding: theme.spacing(2, 5, 2, 5)\n  },\n  checkbox: {// padding: theme.spacing(0, 2, 0, 3),\n  },\n  commentBox: {\n    padding: theme.spacing(2, 5, 2, 5)\n  },\n  dialog: {\n    backgroundColor: \"transparent\"\n  }\n}));\n\nfunction FbChecklist() {\n  _s();\n\n  //use styles from function declared above\n  const classes = useStyles(); //get tenant id from url\n\n  const {\n    tenantId\n  } = useParams(); //Context\n\n  const {\n    getFbChecklistQuestions,\n    createFbReportState,\n    setFbReportState\n  } = useContext(Context); //state to update fb checklist questions\n\n  const [fbChecklistState, setFbChecklistState] = useState(); //state to update number of checked boxes\n\n  const [checked, setChecked] = useState([]); //state to update comments\n\n  const [comments, setComments] = useState([]); //state for dialog modal\n\n  const [open, setOpen] = useState(false);\n  const [value, setValue] = useState(\"Controlled\");\n  useEffect(() => {\n    //function to retrieve questions\n    getFbChecklistQuestions().then(response => {\n      setFbChecklistState(response.data);\n      createFbReportState(response.data);\n    }).catch(() => {\n      console.log(\"fb checklist retrieval failed\");\n    });\n  }, []);\n\n  const handleChange = event => {\n    setValue(event.target.value);\n  }; //handle the checkbox changes\n\n\n  const handleToggle = question_id => () => {\n    //current question id\n    const currentIndex = checked.indexOf(question_id);\n    const newChecked = [...checked];\n\n    if (currentIndex === -1) {\n      newChecked.push(question_id);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    } //update the checked state\n\n\n    setChecked(newChecked); //update fb report state\n\n    setFbReportState(prevState => {\n      return prevState.map(question => question.qn_id === question_id ? { ...question,\n        status: !question.status\n      } : question);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: fbChecklistState ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        className: classes.root,\n        children: [/*#__PURE__*/_jsxDEV(List, {\n          dense: true,\n          className: classes.list,\n          children: fbChecklistState.map((question, index) => {\n            const {\n              fb_qn_id,\n              requirement\n            } = question;\n            const labelId = `checkbox-list-secondary-label-${fb_qn_id}`;\n            return /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: /*#__PURE__*/_jsxDEV(Accordion, {\n                children: [/*#__PURE__*/_jsxDEV(AccordionSummary, {\n                  expandIcon: /*#__PURE__*/_jsxDEV(ExpandMoreIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 146,\n                    columnNumber: 37\n                  }, this),\n                  \"aria-label\": \"Expand\",\n                  \"aria-controls\": \"additional-actions1-content\",\n                  id: \"additional-actions1-header\",\n                  children: /*#__PURE__*/_jsxDEV(ListItem, {\n                    button: true,\n                    children: [/*#__PURE__*/_jsxDEV(ListItemText, {\n                      id: fb_qn_id,\n                      primary: `${requirement}`\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 152,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(Checkbox // edge=\"end\"\n                    , {\n                      onChange: handleToggle(fb_qn_id),\n                      checked: checked.indexOf(fb_qn_id) !== -1,\n                      inputProps: {\n                        \"aria-labelledby\": labelId\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 156,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 151,\n                    columnNumber: 25\n                  }, this)\n                }, fb_qn_id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 144,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(AccordionDetails, {\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    id: \"filled-multiline-flexible\",\n                    label: \"Multiline\",\n                    multiline: true,\n                    rowsMax: 4 // value={value}\n                    ,\n                    onChange: handleChange,\n                    variant: \"filled\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 165,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 164,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 21\n              }, this)\n            }, void 0, false);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: classes.button,\n          size: \"small\" // color=\"secondary\"\n          ,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 9\n    }, this)\n  }, void 0, false) // <div>\n  //   {fbChecklistState ? (\n  //     <>\n  //       <Navbar />\n  //       <div className=\"category-head\">\n  //         <h2>FB Checklist</h2>\n  //         {fbChecklistState.map((question, index) => {\n  //           const { fb_qn_id, requirement } = question;\n  //           return (\n  //             <Question\n  //               key={index}\n  //               fb_qn_id={fb_qn_id}\n  //               requirement={requirement}\n  //               tenantId={tenantId}\n  //             />\n  //           );\n  //         })}\n  //         <br />\n  //         {/* <Link to={`/tenant/${tenantId}`}> */}\n  //         <button\n  //           // onClick={() => {\n  //           //   updateAudit(tenantId, \"FB\", tenantName, \"unresolved\");\n  //           //   resetTenantFbChecklist(tenantId);\n  //           // }}\n  //           onClick={() => submitFbReport(1006, fbReportState)}\n  //         >\n  //           Submit\n  //         </button>\n  //         {/* </Link> */}\n  //       </div>\n  //     </>\n  //   ) : (\n  //     <Loading />\n  //   )}\n  // </div>\n  ;\n}\n\n_s(FbChecklist, \"SjAVhi7UbtA6x/9N/Qzl3yRrPg4=\", false, function () {\n  return [useStyles, useParams];\n});\n\n_c = FbChecklist;\nexport default FbChecklist;\n\nvar _c;\n\n$RefreshReg$(_c, \"FbChecklist\");","map":{"version":3,"sources":["/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/pages/FbChecklist.js"],"names":["React","useState","useContext","useEffect","useCallback","useParams","Question","Context","Loading","Navbar","makeStyles","List","ListItem","ListItemSecondaryAction","ListItemText","ListItemAvatar","Checkbox","Avatar","Button","Grid","TextField","AccountCircle","InputAdornment","Accordion","AccordionSummary","AccordionDetails","FormControlLabel","Typography","ExpandMoreIcon","useStyles","theme","root","display","flexDirection","alignItems","padding","spacing","list","width","maxWidth","backgroundColor","palette","background","paper","button","height","color","fontWeight","listItem","checkbox","commentBox","dialog","FbChecklist","classes","tenantId","getFbChecklistQuestions","createFbReportState","setFbReportState","fbChecklistState","setFbChecklistState","checked","setChecked","comments","setComments","open","setOpen","value","setValue","then","response","data","catch","console","log","handleChange","event","target","handleToggle","question_id","currentIndex","indexOf","newChecked","push","splice","prevState","map","question","qn_id","status","index","fb_qn_id","requirement","labelId"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect, useCallback } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Question from \"../components/Question\";\nimport { Context } from \"../Context\";\nimport Loading from \"./Loading\";\nimport Navbar from \"../Navbar\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport Accordion from \"@material-ui/core/Accordion\";\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\n\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\n\n//styling for the fbchecklist page\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    padding: theme.spacing(5, 0, 5, 0),\n  },\n  list: {\n    width: \"100%\",\n    maxWidth: 800,\n    backgroundColor: theme.palette.background.paper,\n    display: \"flex\",\n    flexDirection: \"column\",\n\n    // alignItems: \"center\",\n  },\n  button: {\n    width: \"100%\",\n    height: 50,\n    maxWidth: 800,\n    color: \"#F15A22\",\n    fontWeight: \"medium\",\n    backgroundColor: theme.palette.background.paper,\n  },\n  listItem: {\n    padding: theme.spacing(2, 5, 2, 5),\n  },\n  checkbox: {\n    // padding: theme.spacing(0, 2, 0, 3),\n  },\n  commentBox: {\n    padding: theme.spacing(2, 5, 2, 5),\n  },\n  dialog: {\n    backgroundColor: \"transparent\",\n  },\n}));\n\nfunction FbChecklist() {\n  //use styles from function declared above\n  const classes = useStyles();\n  //get tenant id from url\n  const { tenantId } = useParams();\n\n  //Context\n  const {\n    getFbChecklistQuestions,\n    createFbReportState,\n    setFbReportState,\n  } = useContext(Context);\n\n  //state to update fb checklist questions\n  const [fbChecklistState, setFbChecklistState] = useState();\n  //state to update number of checked boxes\n  const [checked, setChecked] = useState([]);\n  //state to update comments\n  const [comments, setComments] = useState([]);\n  //state for dialog modal\n  const [open, setOpen] = useState(false);\n\n  const [value, setValue] = useState(\"Controlled\");\n\n  useEffect(() => {\n    //function to retrieve questions\n    getFbChecklistQuestions()\n      .then((response) => {\n        setFbChecklistState(response.data);\n        createFbReportState(response.data);\n      })\n      .catch(() => {\n        console.log(\"fb checklist retrieval failed\");\n      });\n  }, []);\n\n  const handleChange = (event) => {\n    setValue(event.target.value);\n  };\n\n  //handle the checkbox changes\n  const handleToggle = (question_id) => () => {\n    //current question id\n    const currentIndex = checked.indexOf(question_id);\n\n    const newChecked = [...checked];\n\n    if (currentIndex === -1) {\n      newChecked.push(question_id);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n    //update the checked state\n    setChecked(newChecked);\n    //update fb report state\n    setFbReportState((prevState) => {\n      return prevState.map((question) =>\n        question.qn_id === question_id\n          ? { ...question, status: !question.status }\n          : question\n      );\n    });\n  };\n\n  return (\n    <>\n      {fbChecklistState ? (\n        <>\n          <Navbar />\n          <Grid container className={classes.root}>\n            <List dense className={classes.list}>\n              {fbChecklistState.map((question, index) => {\n                const { fb_qn_id, requirement } = question;\n                const labelId = `checkbox-list-secondary-label-${fb_qn_id}`;\n                return (\n                  <>\n                    <Accordion>\n                      <AccordionSummary\n                        key={fb_qn_id}\n                        expandIcon={<ExpandMoreIcon />}\n                        aria-label=\"Expand\"\n                        aria-controls=\"additional-actions1-content\"\n                        id=\"additional-actions1-header\"\n                      >\n                        <ListItem button>\n                          <ListItemText\n                            id={fb_qn_id}\n                            primary={`${requirement}`}\n                          />\n                          <Checkbox\n                            // edge=\"end\"\n                            onChange={handleToggle(fb_qn_id)}\n                            checked={checked.indexOf(fb_qn_id) !== -1}\n                            inputProps={{ \"aria-labelledby\": labelId }}\n                          />\n                        </ListItem>\n                      </AccordionSummary>\n                      <AccordionDetails>\n                        <TextField\n                          id=\"filled-multiline-flexible\"\n                          label=\"Multiline\"\n                          multiline\n                          rowsMax={4}\n                          // value={value}\n                          onChange={handleChange}\n                          variant=\"filled\"\n                        />\n                      </AccordionDetails>\n                    </Accordion>\n                  </>\n                );\n              })}\n            </List>\n            <Button\n              className={classes.button}\n              size=\"small\"\n              // color=\"secondary\"\n            >\n              Submit\n            </Button>\n          </Grid>\n        </>\n      ) : (\n        <Loading />\n      )}\n    </>\n    // <div>\n    //   {fbChecklistState ? (\n    //     <>\n    //       <Navbar />\n    //       <div className=\"category-head\">\n    //         <h2>FB Checklist</h2>\n    //         {fbChecklistState.map((question, index) => {\n    //           const { fb_qn_id, requirement } = question;\n    //           return (\n    //             <Question\n    //               key={index}\n    //               fb_qn_id={fb_qn_id}\n    //               requirement={requirement}\n    //               tenantId={tenantId}\n    //             />\n    //           );\n    //         })}\n    //         <br />\n    //         {/* <Link to={`/tenant/${tenantId}`}> */}\n    //         <button\n    //           // onClick={() => {\n    //           //   updateAudit(tenantId, \"FB\", tenantName, \"unresolved\");\n    //           //   resetTenantFbChecklist(tenantId);\n    //           // }}\n    //           onClick={() => submitFbReport(1006, fbReportState)}\n    //         >\n    //           Submit\n    //         </button>\n    //         {/* </Link> */}\n    //       </div>\n    //     </>\n    //   ) : (\n    //     <Loading />\n    //   )}\n    // </div>\n  );\n}\n\nexport default FbChecklist;\n"]},"metadata":{},"sourceType":"module"}