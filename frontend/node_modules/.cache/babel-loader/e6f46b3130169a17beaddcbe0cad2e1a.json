{"ast":null,"code":"var _jsxFileName = \"/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/pages/AuditReport.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useContext } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport Navbar from \"../Navbar\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Context } from \"../Context\";\nimport Loading from \"./Loading\";\nimport AuditReportCard from \"../components/AuditReportCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  header: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(2, 0, 2, 0)\n  },\n  root: {\n    width: \"100%\",\n    padding: theme.spacing(4, 0, 10, 0)\n  }\n}));\n\nfunction AuditReport() {\n  _s();\n\n  const {\n    reportId\n  } = useParams();\n  const {\n    getReportStats,\n    getReportEntry,\n    getUserInfoNoParams\n  } = useContext(Context);\n  const classes = useStyles();\n  const [failedEntries, setFailedEntries] = useState();\n  const [auditorid, setAuditorId] = useState();\n  useEffect(() => {\n    async function getResponse() {\n      try {\n        getUserInfoNoParams().then(response => {\n          setAuditorId(response.data.acc_id);\n        });\n        const entryArray = await getReportStats(reportId).then(response => {\n          console.log(response);\n          return response.data.Failed_Entries;\n        }); // console.log(entryArray);\n\n        let entryInfoArray = [];\n\n        for (let i = 0; i < entryArray.length; i++) {\n          // console.log(entryArray[i]);\n          // console.log(reportId);\n          let info = await getReportEntry(reportId, entryArray[i]).then(response => {\n            // console.log(response);\n            return response;\n          });\n          entryInfoArray.push(info);\n        }\n\n        if (entryInfoArray.length === entryArray.length) {\n          console.log(entryInfoArray);\n          setFailedEntries(entryInfoArray);\n        }\n      } catch (err) {\n        console.error(err);\n      }\n    }\n\n    getResponse();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: failedEntries ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        className: classes.header,\n        textAlign: \"center\",\n        boxShadow: 1,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          children: \"Report Non-Compliance Overview\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        className: classes.reportBasicInfo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.root,\n        children: failedEntries.map(entry => {\n          const {\n            data\n          } = entry;\n          let severity = data.severity / 1000000;\n          severity = Math.floor(severity);\n          let timeframe = \"\";\n\n          switch (severity) {\n            case 1:\n              timeframe = \"3 weeks\";\n              break;\n\n            case 2:\n              timeframe = \"2 weeks\";\n              break;\n\n            case 3:\n              timeframe = \"1 week\";\n              break;\n\n            case 4:\n              timeframe = \"4 days\";\n              break;\n\n            case 5:\n              timeframe = \"1 day\";\n              break;\n          }\n\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: data.from_account_id !== auditorid && /*#__PURE__*/_jsxDEV(AuditReportCard, {\n              entry_id: data.entry_id,\n              requirement: data.Requirement,\n              remarks: data.remarks,\n              timeframe: timeframe,\n              report_id: reportId,\n              tenant_id: data.from_account_id,\n              qn_id: data.qn_id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 21\n            }, this)\n          }, void 0, false);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AuditReport, \"m6w2mOp+1a9xgXEepIHbagLrTyk=\", false, function () {\n  return [useParams, useStyles];\n});\n\n_c = AuditReport;\nexport default AuditReport;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuditReport\");","map":{"version":3,"sources":["/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/pages/AuditReport.js"],"names":["React","useEffect","useState","useContext","useParams","Typography","Box","Navbar","makeStyles","Context","Loading","AuditReportCard","useStyles","theme","header","backgroundColor","palette","background","paper","padding","spacing","root","width","AuditReport","reportId","getReportStats","getReportEntry","getUserInfoNoParams","classes","failedEntries","setFailedEntries","auditorid","setAuditorId","getResponse","then","response","data","acc_id","entryArray","console","log","Failed_Entries","entryInfoArray","i","length","info","push","err","error","reportBasicInfo","map","entry","severity","Math","floor","timeframe","from_account_id","entry_id","Requirement","remarks","qn_id"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport Navbar from \"../Navbar\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Context } from \"../Context\";\nimport Loading from \"./Loading\";\nimport AuditReportCard from \"../components/AuditReportCard\";\n\nconst useStyles = makeStyles((theme) => ({\n  header: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(2, 0, 2, 0),\n  },\n  root: {\n    width: \"100%\",\n    padding: theme.spacing(4, 0, 10, 0),\n  },\n}));\n\nfunction AuditReport() {\n  const { reportId } = useParams();\n  const { getReportStats, getReportEntry, getUserInfoNoParams } = useContext(\n    Context\n  );\n  const classes = useStyles();\n  const [failedEntries, setFailedEntries] = useState();\n  const [auditorid, setAuditorId] = useState();\n\n  useEffect(() => {\n    async function getResponse() {\n      try {\n        getUserInfoNoParams().then((response) => {\n          setAuditorId(response.data.acc_id);\n        });\n\n        const entryArray = await getReportStats(reportId).then((response) => {\n          console.log(response);\n          return response.data.Failed_Entries;\n        });\n        // console.log(entryArray);\n\n        let entryInfoArray = [];\n\n        for (let i = 0; i < entryArray.length; i++) {\n          // console.log(entryArray[i]);\n          // console.log(reportId);\n          let info = await getReportEntry(reportId, entryArray[i]).then(\n            (response) => {\n              // console.log(response);\n              return response;\n            }\n          );\n          entryInfoArray.push(info);\n        }\n        if (entryInfoArray.length === entryArray.length) {\n          console.log(entryInfoArray);\n          setFailedEntries(entryInfoArray);\n        }\n      } catch (err) {\n        console.error(err);\n      }\n    }\n    getResponse();\n  }, []);\n\n  return (\n    <div>\n      {failedEntries ? (\n        <>\n          <Navbar />\n          <Box className={classes.header} textAlign=\"center\" boxShadow={1}>\n            <Typography variant=\"h5\">Report Non-Compliance Overview</Typography>\n          </Box>\n          <Box className={classes.reportBasicInfo}></Box>\n          <div className={classes.root}>\n            {failedEntries.map((entry) => {\n              const { data } = entry;\n              let severity = data.severity / 1000000;\n              severity = Math.floor(severity);\n              let timeframe = \"\";\n              switch (severity) {\n                case 1:\n                  timeframe = \"3 weeks\";\n                  break;\n                case 2:\n                  timeframe = \"2 weeks\";\n                  break;\n                case 3:\n                  timeframe = \"1 week\";\n                  break;\n                case 4:\n                  timeframe = \"4 days\";\n                  break;\n                case 5:\n                  timeframe = \"1 day\";\n                  break;\n              }\n              return (\n                <>\n                  {data.from_account_id !== auditorid && (\n                    <AuditReportCard\n                      entry_id={data.entry_id}\n                      requirement={data.Requirement}\n                      remarks={data.remarks}\n                      timeframe={timeframe}\n                      report_id={reportId}\n                      tenant_id={data.from_account_id}\n                      qn_id={data.qn_id}\n                    />\n                  )}\n                </>\n              );\n            })}\n          </div>\n        </>\n      ) : (\n        <Loading />\n      )}\n    </div>\n  );\n}\n\nexport default AuditReport;\n"]},"metadata":{},"sourceType":"module"}