{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Documents/SingHealthAuditApp/frontend/src/components/ChatEntriesCard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { Context } from '../Context';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Chat from \"../pages/Chat\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ChatEntriesCards = () => {\n  _s();\n\n  const {\n    chatEntriesOfUserState,\n    setChatEntriesOfUserState\n  } = useContext(Context);\n  console.log(\"chatEntries: \" + chatEntriesOfUserState);\n  console.log(\"dict: \" + chatEntriesOfUserState[2]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: () => {\n      for (var key in Object.keys(chatEntriesOfUserState)) {\n        console.log(\"key: \" + key);\n\n        if (chatEntriesOfUserState[key].length === 0) {\n          return /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: /*#__PURE__*/_jsxDEV(AccordionDetails, {\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                children: \"No message.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 23,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 22,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 15\n          }, this);\n        } else {\n          chatEntriesOfUserState.map((entry, index) => {\n            //console.log(\"chatEntry1: \" + chatEntriesOfUserState[0]);\n            return /*#__PURE__*/_jsxDEV(React.Fragment, {\n              children: /*#__PURE__*/_jsxDEV(AccordionDetails, {\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [\"Chat Entry ID: \", entry.chat_entry_id]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 36,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [\"Date: \", entry.date]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 37,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [\"Message Body: \", entry.messageBody]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 38,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [\"Sender ID: \", entry.sender_id]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 39,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [\"Subject:\", entry.subject]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 40,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [\"Time: \", entry.time]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 41,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [\"Attachments: \", entry.attachments]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 42,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 43,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 35,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 34,\n                columnNumber: 19\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 17\n            }, this);\n          });\n        }\n      }\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ChatEntriesCards, \"whZ+qeWAD3NiwUWIw186Vjo8r/8=\");\n\n_c = ChatEntriesCards;\nexport default ChatEntriesCards;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatEntriesCards\");","map":{"version":3,"sources":["/Users/mac/Documents/SingHealthAuditApp/frontend/src/components/ChatEntriesCard.js"],"names":["React","useContext","useEffect","useState","Context","Accordion","AccordionSummary","AccordionDetails","Typography","ExpandMoreIcon","Chat","ChatEntriesCards","chatEntriesOfUserState","setChatEntriesOfUserState","console","log","key","Object","keys","length","map","entry","index","chat_entry_id","date","messageBody","sender_id","subject","time","attachments"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,SAASC,OAAT,QAAwB,YAAxB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,cAAP,MAA2B,+BAA3B;AACA,OAAOC,IAAP,MAAiB,eAAjB;;;AAEA,MAAMC,gBAAgB,GAAG,MAAM;AAAA;;AAC7B,QAAM;AAAEC,IAAAA,sBAAF;AAA0BC,IAAAA;AAA1B,MAAwDZ,UAAU,CAACG,OAAD,CAAxE;AACAU,EAAAA,OAAO,CAACC,GAAR,CAAY,kBAAkBH,sBAA9B;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAY,WAAWH,sBAAsB,CAAC,CAAD,CAA7C;AACA,sBACE;AAAA,cACG,MAAM;AACL,WAAK,IAAII,GAAT,IAAgBC,MAAM,CAACC,IAAP,CAAYN,sBAAZ,CAAhB,EAAqD;AACnDE,QAAAA,OAAO,CAACC,GAAR,CAAY,UAAUC,GAAtB;;AACA,YAAIJ,sBAAsB,CAACI,GAAD,CAAtB,CAA4BG,MAA5B,KAAuC,CAA3C,EAA8C;AAC5C,8BACE,QAAC,KAAD,CAAO,QAAP;AAAA,mCACE,QAAC,gBAAD;AAAA,qCACE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF;AASD,SAVD,MAUO;AACLP,UAAAA,sBAAsB,CAACQ,GAAvB,CAA2B,CAACC,KAAD,EAAQC,KAAR,KAAkB;AAC7C;AACE,gCACE,QAAC,KAAD,CAAO,QAAP;AAAA,qCACE,QAAC,gBAAD;AAAA,uCACE,QAAC,UAAD;AAAA,0CACE;AAAA,kDAAqBD,KAAK,CAACE,aAA3B;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,eAEE;AAAA,yCAAYF,KAAK,CAACG,IAAlB;AAAA;AAAA;AAAA;AAAA;AAAA,0BAFF,eAGE;AAAA,iDAAoBH,KAAK,CAACI,WAA1B;AAAA;AAAA;AAAA;AAAA;AAAA,0BAHF,eAIE;AAAA,8CAAiBJ,KAAK,CAACK,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA,0BAJF,eAKE;AAAA,2CAAcL,KAAK,CAACM,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA,0BALF,eAME;AAAA,yCAAYN,KAAK,CAACO,IAAlB;AAAA;AAAA;AAAA;AAAA;AAAA,0BANF,eAOE;AAAA,gDAAmBP,KAAK,CAACQ,WAAzB;AAAA;AAAA;AAAA;AAAA;AAAA,0BAPF,eAQE;AAAA;AAAA;AAAA;AAAA,0BARF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF,eAAqBP,KAArB;AAAA;AAAA;AAAA;AAAA,oBADF;AAeG,WAjBL;AAmBD;AACF;AACF;AApCH;AAAA;AAAA;AAAA;AAAA,UADF;AAwCD,CA5CD;;GAAMX,gB;;KAAAA,gB;AA8CN,eAAeA,gBAAf","sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\nimport { Context } from '../Context';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Chat from \"../pages/Chat\";\n\nconst ChatEntriesCards = () => {\n  const { chatEntriesOfUserState, setChatEntriesOfUserState } = useContext(Context);\n  console.log(\"chatEntries: \" + chatEntriesOfUserState);\n  console.log(\"dict: \" + chatEntriesOfUserState[2]);\n  return (\n    <div>\n      {() => {\n        for (var key in Object.keys(chatEntriesOfUserState)) {\n          console.log(\"key: \" + key);\n          if (chatEntriesOfUserState[key].length === 0) {\n            return (\n              <React.Fragment>\n                <AccordionDetails>\n                  <Typography>\n                    No message.\n                  </Typography>\n                </AccordionDetails>\n              </React.Fragment>\n            )\n          } else {\n            chatEntriesOfUserState.map((entry, index) => {\n            //console.log(\"chatEntry1: \" + chatEntriesOfUserState[0]);\n              return (\n                <React.Fragment key={index}>\n                  <AccordionDetails>\n                    <Typography>\n                      <div>Chat Entry ID: {entry.chat_entry_id}</div>\n                      <div>Date: {entry.date}</div>\n                      <div>Message Body: {entry.messageBody}</div>\n                      <div>Sender ID: {entry.sender_id}</div>\n                      <div>Subject:{entry.subject}</div>\n                      <div>Time: {entry.time}</div>\n                      <div>Attachments: {entry.attachments}</div>\n                      <br />\n                    </Typography>\n                  </AccordionDetails>\n                </React.Fragment>\n              );}\n            )\n          }\n        }\n      }}\n    </div>\n  )\n}\n\nexport default ChatEntriesCards;"]},"metadata":{},"sourceType":"module"}