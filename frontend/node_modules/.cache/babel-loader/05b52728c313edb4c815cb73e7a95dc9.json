{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Documents/SingHealthAuditApp/frontend/src/pages/Chat.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useContext } from \"react\";\nimport { Link } from 'react-router-dom';\nimport { Typography, Button } from \"@material-ui/core\";\nimport axios from \"axios\";\nimport { Context } from \"../Context\";\nimport Navbar from \"../Navbar\";\nimport useStyles from \"../styles\";\nimport { FormGroup } from \"@material-ui/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Chat() {\n  _s();\n\n  const {\n    allChatsOfUserState,\n    getAllChatsOfUser\n  } = useContext(Context);\n  useEffect(() => {\n    getAllChatsOfUser();\n  }, []);\n  const styles = useStyles();\n  const allChatsOfUser = allChatsOfUserState;\n\n  function mapAllChatsOfUser(chats) {\n    // console.log(\"mapAllChatsOfUser is called.\");\n    // console.log(\"This is allChatsOfUser: \" + chats);\n    // console.log(\"This is allChatsOfUser state: \" + allChatsOfUserState);\n    // console.log(\"Type of allChatsOfUserState: \" + typeof allChatsOfUserState);\n    return chats.map((chat, index) => {\n      const {\n        chat_id,\n        tenant_id,\n        auditor_id,\n        messages\n      } = chat;\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Chat ID: \", chat_id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Tenant ID: \", tenant_id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Auditor ID: \", auditor_id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Messages: \", messages]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: styles.main,\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h3\",\n      align: \"center\",\n      children: \"Chat\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      className: styles.buttons,\n      align: \"center\",\n      variant: \"outlined\",\n      color: \"primary\",\n      fullWidth: true,\n      children: \"Get All Chats of User\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: mapAllChatsOfUser(allChatsOfUser)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Chat, \"OydrPMnnOyEwLsUspUYsi+lsDNA=\", false, function () {\n  return [useStyles];\n});\n\n_c = Chat;\nexport default Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["/Users/mac/Documents/SingHealthAuditApp/frontend/src/pages/Chat.js"],"names":["React","useEffect","useContext","Link","Typography","Button","axios","Context","Navbar","useStyles","FormGroup","Chat","allChatsOfUserState","getAllChatsOfUser","styles","allChatsOfUser","mapAllChatsOfUser","chats","map","chat","index","chat_id","tenant_id","auditor_id","messages","main","buttons"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,UAA3B,QAA6C,OAA7C;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,UAAT,EAAqBC,MAArB,QAAmC,mBAAnC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SAASC,OAAT,QAAwB,YAAxB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,SAAP,MAAsB,WAAtB;AACA,SAASC,SAAT,QAA0B,mBAA1B;;;AAEA,SAASC,IAAT,GAAgB;AAAA;;AAEd,QAAM;AACJC,IAAAA,mBADI;AAEJC,IAAAA;AAFI,MAGFX,UAAU,CAACK,OAAD,CAHd;AAKAN,EAAAA,SAAS,CAAC,MAAM;AACdY,IAAAA,iBAAiB;AAClB,GAFQ,EAEN,EAFM,CAAT;AAIA,QAAMC,MAAM,GAAGL,SAAS,EAAxB;AAEA,QAAMM,cAAc,GAAGH,mBAAvB;;AAEA,WAASI,iBAAT,CAA2BC,KAA3B,EAAkC;AAChC;AACA;AACA;AACA;AAEA,WACEA,KAAK,CAACC,GAAN,CAAU,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACzB,YAAM;AAAEC,QAAAA,OAAF;AAAWC,QAAAA,SAAX;AAAsBC,QAAAA,UAAtB;AAAkCC,QAAAA;AAAlC,UAA+CL,IAArD;AACA,0BACE;AAAA,gCACE;AAAA,kCAAeE,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,oCAAiBC,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAA,qCAAkBC,UAAlB;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF,eAIE;AAAA,mCAAgBC,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA,SAASJ,KAAT;AAAA;AAAA;AAAA;AAAA,cADF;AAQD,KAVD,CADF;AAaD;;AAED,sBACE;AAAM,IAAA,SAAS,EAAEN,MAAM,CAACW,IAAxB;AAAA,4BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,UAAD;AAAY,MAAA,OAAO,EAAC,IAApB;AAAyB,MAAA,KAAK,EAAC,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE,QAAC,MAAD;AACE,MAAA,SAAS,EAAEX,MAAM,CAACY,OADpB;AAEE,MAAA,KAAK,EAAC,QAFR;AAGE,MAAA,OAAO,EAAC,UAHV;AAIE,MAAA,KAAK,EAAC,SAJR;AAKE,MAAA,SAAS,MALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,eAaE;AAAA,gBACGV,iBAAiB,CAACD,cAAD;AADpB;AAAA;AAAA;AAAA;AAAA,YAbF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD;;GAvDQJ,I;UAWQF,S;;;KAXRE,I;AAyDT,eAAeA,IAAf","sourcesContent":["import React, { useEffect, useContext } from \"react\";\nimport { Link } from 'react-router-dom';\nimport { Typography, Button } from \"@material-ui/core\";\nimport axios from \"axios\";\n\nimport { Context } from \"../Context\";\nimport Navbar from \"../Navbar\";\nimport useStyles from \"../styles\";\nimport { FormGroup } from \"@material-ui/core\";\n\nfunction Chat() {\n\n  const {\n    allChatsOfUserState,\n    getAllChatsOfUser\n  } = useContext(Context);\n\n  useEffect(() => {\n    getAllChatsOfUser();\n  }, []);\n\n  const styles = useStyles();\n\n  const allChatsOfUser = allChatsOfUserState;\n\n  function mapAllChatsOfUser(chats) {\n    // console.log(\"mapAllChatsOfUser is called.\");\n    // console.log(\"This is allChatsOfUser: \" + chats);\n    // console.log(\"This is allChatsOfUser state: \" + allChatsOfUserState);\n    // console.log(\"Type of allChatsOfUserState: \" + typeof allChatsOfUserState);\n\n    return (\n      chats.map((chat, index) => {\n        const { chat_id, tenant_id, auditor_id, messages } = chat;\n        return (\n          <li key={index}>\n            <div>Chat ID: {chat_id}</div>\n            <div>Tenant ID: {tenant_id}</div>\n            <div>Auditor ID: {auditor_id}</div>\n            <div>Messages: {messages}</div>\n          </li>\n        );\n      })\n    )\n  }\n\n  return (\n    <main className={styles.main}>\n      <Navbar />\n      <br />\n      <Typography variant=\"h3\" align=\"center\">Chat</Typography>\n      <Button\n        className={styles.buttons}\n        align=\"center\"\n        variant=\"outlined\"\n        color=\"primary\"\n        fullWidth\n      >\n        Get All Chats of User\n      </Button>\n      <div>\n        {mapAllChatsOfUser(allChatsOfUser)}\n      </div>\n    </main>\n  )\n}\n\nexport default Chat;"]},"metadata":{},"sourceType":"module"}