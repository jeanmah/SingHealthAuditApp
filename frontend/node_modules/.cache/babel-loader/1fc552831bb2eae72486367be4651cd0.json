{"ast":null,"code":"var _jsxFileName = \"F:\\\\Space\\\\LunarHaven\\\\eclipse-workspace\\\\[GIT] SingHealthWebApp\\\\frontend\\\\src\\\\components\\\\testJwt\\\\Login.jsx\";\nimport React, { Component } from \"react\";\nimport AuthenticationService from \"../../AuthenticationService\";\nimport { Redirect, withRouter, BrowserRouter } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass LoginComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: \"\",\n      password: \"\",\n      hasLoginFailed: false,\n      showSuccessMessage: false\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.loginClicked = this.loginClicked.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  loginClicked() {\n    AuthenticationService.executeJwtAuthenticationService(this.state.username, this.state.password).then(response => {\n      AuthenticationService.registerSuccessfulLoginForJwt(this.state.username, response.data.token);\n      console.log(response.data.accountType);\n\n      if (response.data.accountType == \"Auditor\") {//this.props.history.push(`/home`);\n        //console.log(this.props);\n        //this.props.history.push('/');\n      } else if (response.data.accountType == \"Tenant\") {\n        this.props.history.push(`/home/t`);\n      } else if (response.data.accountType == \"Manager\") {\n        this.props.history.push(`/home/m`);\n      }\n    }).catch(() => {\n      this.setState({\n        showSuccessMessage: false\n      });\n      this.setState({\n        hasLoginFailed: true\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [this.state.hasLoginFailed && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"alert alert-warning\",\n          children: \"Invalid Credentials\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this), this.state.showSuccessMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Login Sucessful\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 45\n        }, this), \"User Name:\", \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"username\",\n          value: this.state.username,\n          onChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), \"Password:\", \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          value: this.state.password,\n          onChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-success\",\n          onClick: this.loginClicked,\n          children: [\"if(!this.state.hasLoginFailed)\", /*#__PURE__*/_jsxDEV(Redirect, {\n            to: \"/\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this), \"Login\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default LoginComponent;","map":{"version":3,"sources":["F:/Space/LunarHaven/eclipse-workspace/[GIT] SingHealthWebApp/frontend/src/components/testJwt/Login.jsx"],"names":["React","Component","AuthenticationService","Redirect","withRouter","BrowserRouter","LoginComponent","constructor","props","state","username","password","hasLoginFailed","showSuccessMessage","handleChange","bind","loginClicked","event","setState","target","name","value","executeJwtAuthenticationService","then","response","registerSuccessfulLoginForJwt","data","token","console","log","accountType","history","push","catch","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,qBAAP,MAAkC,6BAAlC;AACA,SAAQC,QAAR,EAAkBC,UAAlB,EAA8BC,aAA9B,QAAkD,kBAAlD;;;AAEA,MAAMC,cAAN,SAA6BL,SAA7B,CAAuC;AACrCM,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE,EADC;AAEXC,MAAAA,QAAQ,EAAE,EAFC;AAGXC,MAAAA,cAAc,EAAE,KAHL;AAIXC,MAAAA,kBAAkB,EAAE;AAJT,KAAb;AAOA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAApB;AACD;;AAEDD,EAAAA,YAAY,CAACG,KAAD,EAAQ;AAClB,SAAKC,QAAL,CAAc;AACZ,OAACD,KAAK,CAACE,MAAN,CAAaC,IAAd,GAAqBH,KAAK,CAACE,MAAN,CAAaE;AADtB,KAAd;AAGD;;AAEDL,EAAAA,YAAY,GAAG;AACbd,IAAAA,qBAAqB,CAACoB,+BAAtB,CACE,KAAKb,KAAL,CAAWC,QADb,EAEE,KAAKD,KAAL,CAAWE,QAFb,EAIGY,IAJH,CAISC,QAAD,IAAc;AAClBtB,MAAAA,qBAAqB,CAACuB,6BAAtB,CACE,KAAKhB,KAAL,CAAWC,QADb,EAEEc,QAAQ,CAACE,IAAT,CAAcC,KAFhB;AAIAC,MAAAA,OAAO,CAACC,GAAR,CAAYL,QAAQ,CAACE,IAAT,CAAcI,WAA1B;;AACA,UAAIN,QAAQ,CAACE,IAAT,CAAcI,WAAd,IAA6B,SAAjC,EAA4C,CAC1C;AACA;AACA;AACD,OAJD,MAIO,IAAIN,QAAQ,CAACE,IAAT,CAAcI,WAAd,IAA6B,QAAjC,EAA2C;AAChD,aAAKtB,KAAL,CAAWuB,OAAX,CAAmBC,IAAnB,CAAyB,SAAzB;AACD,OAFM,MAEA,IAAIR,QAAQ,CAACE,IAAT,CAAcI,WAAd,IAA6B,SAAjC,EAA4C;AACjD,aAAKtB,KAAL,CAAWuB,OAAX,CAAmBC,IAAnB,CAAyB,SAAzB;AACD;AACF,KAnBH,EAoBGC,KApBH,CAoBS,MAAM;AACX,WAAKf,QAAL,CAAc;AAAEL,QAAAA,kBAAkB,EAAE;AAAtB,OAAd;AACA,WAAKK,QAAL,CAAc;AAAEN,QAAAA,cAAc,EAAE;AAAlB,OAAd;AACD,KAvBH;AAwBD;;AAEDsB,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,mBAEG,KAAKzB,KAAL,CAAWG,cAAX,iBACC;AAAK,UAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,EAKG,KAAKH,KAAL,CAAWI,kBAAX,iBAAiC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALpC,gBAOa,GAPb,eAQE;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,IAAI,EAAC,UAFP;AAGE,UAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWC,QAHpB;AAIE,UAAA,QAAQ,EAAE,KAAKI;AAJjB;AAAA;AAAA;AAAA;AAAA,gBARF,eAcY,GAdZ,eAeE;AACE,UAAA,IAAI,EAAC,UADP;AAEE,UAAA,IAAI,EAAC,UAFP;AAGE,UAAA,KAAK,EAAE,KAAKL,KAAL,CAAWE,QAHpB;AAIE,UAAA,QAAQ,EAAE,KAAKG;AAJjB;AAAA;AAAA;AAAA;AAAA,gBAfF,eAqBE;AAAQ,UAAA,SAAS,EAAC,iBAAlB;AAAoC,UAAA,OAAO,EAAE,KAAKE,YAAlD;AAAA,oEAEI,QAAC,QAAD;AAAU,YAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBArBF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAiCD;;AAlFoC;;AAqFvC,eAAeV,cAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport AuthenticationService from \"../../AuthenticationService\";\r\nimport {Redirect, withRouter, BrowserRouter} from 'react-router-dom';\r\n\r\nclass LoginComponent extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      username: \"\",\r\n      password: \"\",\r\n      hasLoginFailed: false,\r\n      showSuccessMessage: false,\r\n    };\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.loginClicked = this.loginClicked.bind(this);\r\n  }\r\n\r\n  handleChange(event) {\r\n    this.setState({\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  }\r\n\r\n  loginClicked() {\r\n    AuthenticationService.executeJwtAuthenticationService(\r\n      this.state.username,\r\n      this.state.password\r\n    )\r\n      .then((response) => {\r\n        AuthenticationService.registerSuccessfulLoginForJwt(\r\n          this.state.username,\r\n          response.data.token\r\n        );\r\n        console.log(response.data.accountType);\r\n        if (response.data.accountType == \"Auditor\") {\r\n          //this.props.history.push(`/home`);\r\n          //console.log(this.props);\r\n          //this.props.history.push('/');\r\n        } else if (response.data.accountType == \"Tenant\") {\r\n          this.props.history.push(`/home/t`);\r\n        } else if (response.data.accountType == \"Manager\") {\r\n          this.props.history.push(`/home/m`);\r\n        }\r\n      })\r\n      .catch(() => {\r\n        this.setState({ showSuccessMessage: false });\r\n        this.setState({ hasLoginFailed: true });\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Login</h1>\r\n        <div className=\"container\">\r\n          {/*<ShowInvalidCredentials hasLoginFailed={this.state.hasLoginFailed}/>*/}\r\n          {this.state.hasLoginFailed && (\r\n            <div className=\"alert alert-warning\">Invalid Credentials</div>\r\n          )}\r\n          {this.state.showSuccessMessage && <div>Login Sucessful</div>}\r\n          {/*<ShowLoginSuccessMessage showSuccessMessage={this.state.showSuccessMessage}/>*/}\r\n          User Name:{\" \"}\r\n          <input\r\n            type=\"text\"\r\n            name=\"username\"\r\n            value={this.state.username}\r\n            onChange={this.handleChange}\r\n          />\r\n          Password:{\" \"}\r\n          <input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            value={this.state.password}\r\n            onChange={this.handleChange}\r\n          />\r\n          <button className=\"btn btn-success\" onClick={this.loginClicked}>\r\n            if(!this.state.hasLoginFailed){\r\n              <Redirect to='/' />\r\n            }\r\n            Login\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoginComponent;\r\n"]},"metadata":{},"sourceType":"module"}