{"ast":null,"code":"var _jsxFileName = \"/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/pages/HomeAuditor.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useContext } from \"react\";\nimport HomeAuditorCards from \"../components/HomeAuditorCards\";\nimport HomeAuditorTabs from \"../components/HomeAuditorTabs\";\nimport Navbar from \"../Navbar\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { Context } from \"../Context\";\nimport Loading from \"./Loading\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction HomeAuditor() {\n  _s();\n\n  const {\n    getAudits,\n    auditsState,\n    setAuditsState,\n    getReport\n  } = useContext(Context);\n  useEffect(() => {\n    const username = sessionStorage.getItem(\"authenticatedUser\");\n\n    async function getResponse() {\n      try {\n        const reportIdArray = await getAudits(username).then(response => {\n          console.log(response);\n          return [...response.data.CLOSED.completed_audits, ...response.data.OPEN.outstanding_audits];\n        }); //initialize array to store all objects of report info\n\n        let reportInfoArray = [];\n\n        for (let i = 0; i < reportIdArray.length; i++) {\n          let reportInfo = await getReport(reportIdArray[i]).then(response => {\n            console.log(response);\n            return response.data;\n          });\n          reportInfoArray.push(reportInfo);\n        } //set state of audits to be an array of report info objects\n\n\n        setAuditsState(reportInfoArray);\n      } catch (err) {\n        console.log(err);\n      }\n    }\n\n    getResponse();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: auditsState ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(HomeAuditorTabs, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(HomeAuditorCards, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n\n_s(HomeAuditor, \"FZArThi1zUYkMIRL5UWfmUR6at4=\");\n\n_c = HomeAuditor;\nexport default HomeAuditor;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomeAuditor\");","map":{"version":3,"sources":["/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/pages/HomeAuditor.js"],"names":["React","useEffect","useContext","HomeAuditorCards","HomeAuditorTabs","Navbar","CssBaseline","Context","Loading","HomeAuditor","getAudits","auditsState","setAuditsState","getReport","username","sessionStorage","getItem","getResponse","reportIdArray","then","response","console","log","data","CLOSED","completed_audits","OPEN","outstanding_audits","reportInfoArray","i","length","reportInfo","push","err"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,UAA3B,QAA6C,OAA7C;AACA,OAAOC,gBAAP,MAA6B,gCAA7B;AACA,OAAOC,eAAP,MAA4B,+BAA5B;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,SAASC,OAAT,QAAwB,YAAxB;AACA,OAAOC,OAAP,MAAoB,WAApB;;;;AAEA,SAASC,WAAT,GAAuB;AAAA;;AACrB,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA,WAAb;AAA0BC,IAAAA,cAA1B;AAA0CC,IAAAA;AAA1C,MAAwDX,UAAU,CACtEK,OADsE,CAAxE;AAIAN,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMa,QAAQ,GAAGC,cAAc,CAACC,OAAf,CAAuB,mBAAvB,CAAjB;;AAEA,mBAAeC,WAAf,GAA6B;AAC3B,UAAI;AACF,cAAMC,aAAa,GAAG,MAAMR,SAAS,CAACI,QAAD,CAAT,CAAoBK,IAApB,CAA0BC,QAAD,IAAc;AACjEC,UAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACA,iBAAO,CACL,GAAGA,QAAQ,CAACG,IAAT,CAAcC,MAAd,CAAqBC,gBADnB,EAEL,GAAGL,QAAQ,CAACG,IAAT,CAAcG,IAAd,CAAmBC,kBAFjB,CAAP;AAID,SAN2B,CAA5B,CADE,CAQF;;AACA,YAAIC,eAAe,GAAG,EAAtB;;AAEA,aAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGX,aAAa,CAACY,MAAlC,EAA0CD,CAAC,EAA3C,EAA+C;AAC7C,cAAIE,UAAU,GAAG,MAAMlB,SAAS,CAACK,aAAa,CAACW,CAAD,CAAd,CAAT,CAA4BV,IAA5B,CACpBC,QAAD,IAAc;AACZC,YAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACA,mBAAOA,QAAQ,CAACG,IAAhB;AACD,WAJoB,CAAvB;AAMAK,UAAAA,eAAe,CAACI,IAAhB,CAAqBD,UAArB;AACD,SAnBC,CAqBF;;;AACAnB,QAAAA,cAAc,CAACgB,eAAD,CAAd;AACD,OAvBD,CAuBE,OAAOK,GAAP,EAAY;AACZZ,QAAAA,OAAO,CAACC,GAAR,CAAYW,GAAZ;AACD;AACF;;AACDhB,IAAAA,WAAW;AACZ,GAhCQ,EAgCN,EAhCM,CAAT;AAkCA,sBACE;AAAA,cACGN,WAAW,gBACV;AAAA,8BACE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA,oBADU,gBAQV,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AATJ;AAAA;AAAA;AAAA;AAAA,UADF;AAcD;;GArDQF,W;;KAAAA,W;AAuDT,eAAeA,WAAf","sourcesContent":["import React, { useEffect, useContext } from \"react\";\nimport HomeAuditorCards from \"../components/HomeAuditorCards\";\nimport HomeAuditorTabs from \"../components/HomeAuditorTabs\";\nimport Navbar from \"../Navbar\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { Context } from \"../Context\";\nimport Loading from \"./Loading\";\n\nfunction HomeAuditor() {\n  const { getAudits, auditsState, setAuditsState, getReport } = useContext(\n    Context\n  );\n\n  useEffect(() => {\n    const username = sessionStorage.getItem(\"authenticatedUser\");\n\n    async function getResponse() {\n      try {\n        const reportIdArray = await getAudits(username).then((response) => {\n          console.log(response);\n          return [\n            ...response.data.CLOSED.completed_audits,\n            ...response.data.OPEN.outstanding_audits,\n          ];\n        });\n        //initialize array to store all objects of report info\n        let reportInfoArray = [];\n\n        for (let i = 0; i < reportIdArray.length; i++) {\n          let reportInfo = await getReport(reportIdArray[i]).then(\n            (response) => {\n              console.log(response);\n              return response.data;\n            }\n          );\n          reportInfoArray.push(reportInfo);\n        }\n\n        //set state of audits to be an array of report info objects\n        setAuditsState(reportInfoArray);\n      } catch (err) {\n        console.log(err);\n      }\n    }\n    getResponse();\n  }, []);\n\n  return (\n    <div>\n      {auditsState ? (\n        <>\n          <CssBaseline />\n          <Navbar />\n          <HomeAuditorTabs />\n          <HomeAuditorCards />\n        </>\n      ) : (\n        <Loading />\n      )}\n    </div>\n  );\n}\n\nexport default HomeAuditor;\n"]},"metadata":{},"sourceType":"module"}