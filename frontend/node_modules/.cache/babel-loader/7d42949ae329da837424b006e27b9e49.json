{"ast":null,"code":"var _jsxFileName = \"/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/components/HomeAuditorTabs.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from \"react\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport { Context } from \"../Context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({//   root: { },\n}));\nconst StyledTabs = withStyles({\n  indicator: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    backgroundColor: \"transparent\",\n    \"& > span\": {\n      maxWidth: 40,\n      width: \"100%\",\n      backgroundColor: \"#F15A22\"\n    }\n  }\n})(props => /*#__PURE__*/_jsxDEV(Tabs, { ...props,\n  TabIndicatorProps: {\n    children: /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 63\n    }, this)\n  }\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 23,\n  columnNumber: 15\n}, this));\nconst StyledTab = withStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    textTransform: \"none\",\n    color: \"#000000\",\n    fontWeight: theme.typography.fontWeightBold,\n    fontSize: theme.typography.pxToRem(16),\n    margin: theme.spacing(2, 0, 2, 0),\n    \"&:focus\": {\n      opacity: 1\n    }\n  }\n}))(props => /*#__PURE__*/_jsxDEV(Tab, {\n  disableRipple: true,\n  ...props\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 37,\n  columnNumber: 16\n}, this));\nexport default function CenteredTabs() {\n  _s();\n\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  const filterAudits = category => {\n    async function getResponse() {\n      try {\n        if (category === \"COMPLETED\") {\n          const reportIdArray = await getAudits(username).then(response => {\n            console.log(response);\n            return [...response.data.CLOSED.completed_audits, ...response.data.OPEN.outstanding_audits];\n          }); //initialize array to store all objects of report info\n\n          let reportInfoArray = [];\n\n          for (let i = 0; i < reportIdArray.length; i++) {\n            let reportInfo = await getReport(reportIdArray[i]).then(response => {\n              return response.data;\n            });\n            reportInfoArray.push(reportInfo);\n          } //set state of audits to be an array of report info objects\n\n\n          setAuditsState(reportInfoArray);\n        }\n\n        if (category === \"UNRESOLVED\") {\n          const reportIdArray = await getAudits(username).then(response => {\n            console.log(response);\n            return [...response.data.OPEN.outstanding_audits];\n          }); //initialize array to store all objects of report info\n\n          let reportInfoArray = [];\n\n          for (let i = 0; i < reportIdArray.length; i++) {\n            let reportInfo = await getReport(reportIdArray[i]).then(response => {\n              return response.data;\n            });\n            reportInfoArray.push(reportInfo);\n          } //set state of audits to be an array of report info objects\n\n\n          setAuditsState(reportInfoArray);\n        }\n\n        if (category === \"OVERDUE\") {\n          const reportIdArray = await getAudits(username).then(response => {\n            console.log(response);\n            return [...response.data.OVERDUE.outstanding_audits];\n          }); //initialize array to store all objects of report info\n\n          let reportInfoArray = [];\n\n          for (let i = 0; i < reportIdArray.length; i++) {\n            let reportInfo = await getReport(reportIdArray[i]).then(response => {\n              return response.data;\n            });\n            reportInfoArray.push(reportInfo);\n          } //set state of audits to be an array of report info objects\n\n\n          setAuditsState(reportInfoArray);\n        }\n      } catch (err) {\n        console.log(err);\n      }\n    }\n\n    getResponse();\n  };\n\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(StyledTabs, {\n      value: value,\n      onChange: handleChange,\n      centered: true,\n      children: [/*#__PURE__*/_jsxDEV(StyledTab, {\n        onClick: filterAudits(\"COMPLETED\"),\n        label: \"COMPLETED\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StyledTab, {\n        onClick: filterAudits(\"UNRESOLVED\"),\n        label: \"UNRESOLVED\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StyledTab, {\n        onClick: filterAudits(\"OVERDUE\"),\n        label: \"OVERDUE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CenteredTabs, \"BDkWVlEh8+DaKPHysXJ2gpEmtFI=\", false, function () {\n  return [useStyles];\n});\n\n_c = CenteredTabs;\n\nvar _c;\n\n$RefreshReg$(_c, \"CenteredTabs\");","map":{"version":3,"sources":["/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/components/HomeAuditorTabs.js"],"names":["React","useContext","makeStyles","withStyles","Paper","Tabs","Tab","Context","useStyles","theme","StyledTabs","indicator","display","justifyContent","backgroundColor","maxWidth","width","props","children","StyledTab","root","flexGrow","textTransform","color","fontWeight","typography","fontWeightBold","fontSize","pxToRem","margin","spacing","opacity","CenteredTabs","classes","value","setValue","useState","handleChange","event","newValue","filterAudits","category","getResponse","reportIdArray","getAudits","username","then","response","console","log","data","CLOSED","completed_audits","OPEN","outstanding_audits","reportInfoArray","i","length","reportInfo","getReport","push","setAuditsState","OVERDUE","err"],"mappings":"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","sourcesContent":["import React, { useContext } from \"react\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport { Context } from \"../Context\";\n\nconst useStyles = makeStyles((theme) => ({\n  //   root: { },\n}));\n\nconst StyledTabs = withStyles({\n  indicator: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    backgroundColor: \"transparent\",\n    \"& > span\": {\n      maxWidth: 40,\n      width: \"100%\",\n      backgroundColor: \"#F15A22\",\n    },\n  },\n})((props) => <Tabs {...props} TabIndicatorProps={{ children: <span /> }} />);\n\nconst StyledTab = withStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    textTransform: \"none\",\n    color: \"#000000\",\n    fontWeight: theme.typography.fontWeightBold,\n    fontSize: theme.typography.pxToRem(16),\n    margin: theme.spacing(2, 0, 2, 0),\n    \"&:focus\": {\n      opacity: 1,\n    },\n  },\n}))((props) => <Tab disableRipple {...props} />);\n\nexport default function CenteredTabs() {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  const filterAudits = (category) => {\n    async function getResponse() {\n      try {\n        if (category === \"COMPLETED\") {\n          const reportIdArray = await getAudits(username).then((response) => {\n            console.log(response);\n            return [\n              ...response.data.CLOSED.completed_audits,\n              ...response.data.OPEN.outstanding_audits,\n            ];\n          });\n          //initialize array to store all objects of report info\n          let reportInfoArray = [];\n\n          for (let i = 0; i < reportIdArray.length; i++) {\n            let reportInfo = await getReport(reportIdArray[i]).then(\n              (response) => {\n                return response.data;\n              }\n            );\n            reportInfoArray.push(reportInfo);\n          }\n\n          //set state of audits to be an array of report info objects\n          setAuditsState(reportInfoArray);\n        }\n        if (category === \"UNRESOLVED\") {\n          const reportIdArray = await getAudits(username).then((response) => {\n            console.log(response);\n            return [...response.data.OPEN.outstanding_audits];\n          });\n          //initialize array to store all objects of report info\n          let reportInfoArray = [];\n\n          for (let i = 0; i < reportIdArray.length; i++) {\n            let reportInfo = await getReport(reportIdArray[i]).then(\n              (response) => {\n                return response.data;\n              }\n            );\n            reportInfoArray.push(reportInfo);\n          }\n\n          //set state of audits to be an array of report info objects\n          setAuditsState(reportInfoArray);\n        }\n        if (category === \"OVERDUE\") {\n          const reportIdArray = await getAudits(username).then((response) => {\n            console.log(response);\n            return [...response.data.OVERDUE.outstanding_audits];\n          });\n          //initialize array to store all objects of report info\n          let reportInfoArray = [];\n\n          for (let i = 0; i < reportIdArray.length; i++) {\n            let reportInfo = await getReport(reportIdArray[i]).then(\n              (response) => {\n                return response.data;\n              }\n            );\n            reportInfoArray.push(reportInfo);\n          }\n\n          //set state of audits to be an array of report info objects\n          setAuditsState(reportInfoArray);\n        }\n      } catch (err) {\n        console.log(err);\n      }\n    }\n    getResponse();\n  };\n\n  return (\n    <Paper className={classes.root}>\n      <StyledTabs value={value} onChange={handleChange} centered>\n        <StyledTab onClick={filterAudits(\"COMPLETED\")} label=\"COMPLETED\" />\n        <StyledTab onClick={filterAudits(\"UNRESOLVED\")} label=\"UNRESOLVED\" />\n        <StyledTab onClick={filterAudits(\"OVERDUE\")} label=\"OVERDUE\" />\n      </StyledTabs>\n    </Paper>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}