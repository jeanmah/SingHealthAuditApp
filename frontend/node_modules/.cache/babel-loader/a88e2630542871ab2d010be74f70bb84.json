{"ast":null,"code":"var _jsxFileName = \"/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/components/Question.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect } from \"react\";\nimport Modal from \"./Modal\";\nimport { FaRegEdit } from \"react-icons/fa\";\nimport { Context } from \"../Context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Question({\n  id,\n  text,\n  tenantId\n}) {\n  _s();\n\n  //Context: state of modal (whether it is open or not)\n  const {\n    setModalOpen,\n    closeModal\n  } = useContext(Context); //Context: Fb Checklist\n\n  const {\n    fbChecklistState\n  } = useContext(Context); //Context: state of tenants to update checklist check\n\n  const {\n    tenantsState,\n    updateFbChecklistChecked\n  } = useContext(Context); //get the array containing this question object\n  //to be used to update it's checked property in handleChange() function\n\n  const thisQuestion = fbChecklistState.find(question => {\n    return question.id === id;\n  }); //function to handle change when checkbox is clicked\n\n  const handleChange = () => {\n    updateFbChecklistChecked(tenantId, id);\n  };\n\n  useEffect(() => {\n    const tenantObject = tenantsState.find(tenant => {\n      return tenant.tenantid === tenantId;\n    });\n    const tenantFbChecklist = tenantObject.fbChecklist;\n    const checklistQuestion = tenantFbChecklist.find(question => {\n      return question.id === id;\n    });\n  }, [tenantsState]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"checkbox\",\n      id: id,\n      name: `Check${id}`,\n      onChange: () => {\n        handleChange();\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FaRegEdit, {\n      onClick: () => {\n        setModalOpen(true);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      id: id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Question, \"CvS1rzT9YOboINJnq6WGAMyWnkA=\");\n\n_c = Question;\nexport default Question;\n\nvar _c;\n\n$RefreshReg$(_c, \"Question\");","map":{"version":3,"sources":["/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/components/Question.js"],"names":["React","useContext","useEffect","Modal","FaRegEdit","Context","Question","id","text","tenantId","setModalOpen","closeModal","fbChecklistState","tenantsState","updateFbChecklistChecked","thisQuestion","find","question","handleChange","tenantObject","tenant","tenantid","tenantFbChecklist","fbChecklist","checklistQuestion"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,QAA6C,OAA7C;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAASC,SAAT,QAA0B,gBAA1B;AACA,SAASC,OAAT,QAAwB,YAAxB;;;AAEA,SAASC,QAAT,CAAkB;AAAEC,EAAAA,EAAF;AAAMC,EAAAA,IAAN;AAAYC,EAAAA;AAAZ,CAAlB,EAA0C;AAAA;;AACxC;AACA,QAAM;AAAEC,IAAAA,YAAF;AAAgBC,IAAAA;AAAhB,MAA+BV,UAAU,CAACI,OAAD,CAA/C,CAFwC,CAGxC;;AACA,QAAM;AAAEO,IAAAA;AAAF,MAAuBX,UAAU,CAACI,OAAD,CAAvC,CAJwC,CAKxC;;AACA,QAAM;AAAEQ,IAAAA,YAAF;AAAgBC,IAAAA;AAAhB,MAA6Cb,UAAU,CAACI,OAAD,CAA7D,CANwC,CAOxC;AACA;;AACA,QAAMU,YAAY,GAAGH,gBAAgB,CAACI,IAAjB,CAAuBC,QAAD,IAAc;AACvD,WAAOA,QAAQ,CAACV,EAAT,KAAgBA,EAAvB;AACD,GAFoB,CAArB,CATwC,CAYxC;;AACA,QAAMW,YAAY,GAAG,MAAM;AACzBJ,IAAAA,wBAAwB,CAACL,QAAD,EAAWF,EAAX,CAAxB;AACD,GAFD;;AAGAL,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMiB,YAAY,GAAGN,YAAY,CAACG,IAAb,CAAmBI,MAAD,IAAY;AACjD,aAAOA,MAAM,CAACC,QAAP,KAAoBZ,QAA3B;AACD,KAFoB,CAArB;AAGA,UAAMa,iBAAiB,GAAGH,YAAY,CAACI,WAAvC;AACA,UAAMC,iBAAiB,GAAGF,iBAAiB,CAACN,IAAlB,CAAwBC,QAAD,IAAc;AAC7D,aAAOA,QAAQ,CAACV,EAAT,KAAgBA,EAAvB;AACD,KAFyB,CAA1B;AAGD,GARQ,EAQN,CAACM,YAAD,CARM,CAAT;AAUA,sBACE;AAAA,4BACE;AAAA,gBAAOL;AAAP;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AACE,MAAA,IAAI,EAAC,UADP;AAEE,MAAA,EAAE,EAAED,EAFN;AAGE,MAAA,IAAI,EAAG,QAAOA,EAAG,EAHnB;AAIE,MAAA,QAAQ,EAAE,MAAM;AACdW,QAAAA,YAAY;AACb;AANH;AAAA;AAAA;AAAA;AAAA,YAFF,eAUE,QAAC,SAAD;AACE,MAAA,OAAO,EAAE,MAAM;AACbR,QAAAA,YAAY,CAAC,IAAD,CAAZ;AACD;AAHH;AAAA;AAAA;AAAA;AAAA,YAVF,eAeE,QAAC,KAAD;AAAO,MAAA,EAAE,EAAEH;AAAX;AAAA;AAAA;AAAA;AAAA,YAfF,eAgBE;AAAA;AAAA;AAAA;AAAA,YAhBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD;;GA9CQD,Q;;KAAAA,Q;AAgDT,eAAeA,QAAf","sourcesContent":["import React, { useContext, useEffect } from \"react\";\nimport Modal from \"./Modal\";\nimport { FaRegEdit } from \"react-icons/fa\";\nimport { Context } from \"../Context\";\n\nfunction Question({ id, text, tenantId }) {\n  //Context: state of modal (whether it is open or not)\n  const { setModalOpen, closeModal } = useContext(Context);\n  //Context: Fb Checklist\n  const { fbChecklistState } = useContext(Context);\n  //Context: state of tenants to update checklist check\n  const { tenantsState, updateFbChecklistChecked } = useContext(Context);\n  //get the array containing this question object\n  //to be used to update it's checked property in handleChange() function\n  const thisQuestion = fbChecklistState.find((question) => {\n    return question.id === id;\n  });\n  //function to handle change when checkbox is clicked\n  const handleChange = () => {\n    updateFbChecklistChecked(tenantId, id);\n  };\n  useEffect(() => {\n    const tenantObject = tenantsState.find((tenant) => {\n      return tenant.tenantid === tenantId;\n    });\n    const tenantFbChecklist = tenantObject.fbChecklist;\n    const checklistQuestion = tenantFbChecklist.find((question) => {\n      return question.id === id;\n    });\n  }, [tenantsState]);\n\n  return (\n    <div>\n      <span>{text}</span>\n      <input\n        type=\"checkbox\"\n        id={id}\n        name={`Check${id}`}\n        onChange={() => {\n          handleChange();\n        }}\n      />\n      <FaRegEdit\n        onClick={() => {\n          setModalOpen(true);\n        }}\n      />\n      <Modal id={id} />\n      <div></div>\n    </div>\n  );\n}\n\nexport default Question;\n"]},"metadata":{},"sourceType":"module"}