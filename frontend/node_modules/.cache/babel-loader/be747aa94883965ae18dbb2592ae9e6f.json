{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Documents/SingHealthAuditApp/frontend/src/pages/Chat.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { getChatEntriesOfUser } from '../Context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Chat() {\n  _s();\n\n  const {\n    chatId\n  } = useParams();\n  const [chatEntriesState, setChatEntriesState] = useState([]);\n  useEffect(() => {\n    async function getResponse() {\n      try {\n        await getChatEntriesOfUser().then(response => {\n          console.log(\"Chat: allChatsOfUser: \" + response.data);\n          setChatEntriesState(response.data);\n        });\n      } catch {\n        console.log(\"Failed to retrive allChatsOfUser\");\n      }\n    }\n\n    ;\n    getResponse();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Chat Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Chat ID: \", chatId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Chat, \"sM45liWAn4Yi1zkonG97lIjAEBg=\", false, function () {\n  return [useParams];\n});\n\n_c = Chat;\n;\nexport default Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["/Users/mac/Documents/SingHealthAuditApp/frontend/src/pages/Chat.js"],"names":["React","useState","useEffect","useParams","getChatEntriesOfUser","Chat","chatId","chatEntriesState","setChatEntriesState","getResponse","then","response","console","log","data"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,kBAA1B;AAEA,SAASC,oBAAT,QAAqC,YAArC;;;AAEA,SAASC,IAAT,GAAgB;AAAA;;AACd,QAAM;AAAEC,IAAAA;AAAF,MAAaH,SAAS,EAA5B;AACA,QAAM,CAACI,gBAAD,EAAmBC,mBAAnB,IAA0CP,QAAQ,CAAC,EAAD,CAAxD;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAeO,WAAf,GAA6B;AAC3B,UAAG;AACD,cAAML,oBAAoB,GAAGM,IAAvB,CAA6BC,QAAD,IAAc;AAC9CC,UAAAA,OAAO,CAACC,GAAR,CAAY,2BAA2BF,QAAQ,CAACG,IAAhD;AACAN,UAAAA,mBAAmB,CAACG,QAAQ,CAACG,IAAV,CAAnB;AACD,SAHK,CAAN;AAID,OALD,CAKE,MAAM;AACNF,QAAAA,OAAO,CAACC,GAAR,CAAY,kCAAZ;AACD;AACF;;AAAA;AACDJ,IAAAA,WAAW;AACZ,GAZQ,EAYN,EAZM,CAAT;AAcA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,8BAAeH,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;GAxBQD,I;UACYF,S;;;KADZE,I;AAwBR;AAED,eAAeA,IAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nimport { getChatEntriesOfUser } from '../Context';\n\nfunction Chat() {\n  const { chatId } = useParams();\n  const [chatEntriesState, setChatEntriesState] = useState([]);\n  \n  useEffect(() => {\n    async function getResponse() {\n      try{\n        await getChatEntriesOfUser().then((response) => {\n          console.log(\"Chat: allChatsOfUser: \" + response.data);\n          setChatEntriesState(response.data);\n        })\n      } catch {\n        console.log(\"Failed to retrive allChatsOfUser\");\n      }\n    };\n    getResponse();\n  }, []);\n  \n  return (\n    <main>\n      <div>Chat Page</div>\n      <div>Chat ID: {chatId}</div>\n    </main>\n  )\n};\n\nexport default Chat;"]},"metadata":{},"sourceType":"module"}