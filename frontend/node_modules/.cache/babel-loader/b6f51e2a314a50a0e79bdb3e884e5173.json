{"ast":null,"code":"var _jsxFileName = \"/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/pages/EditAccount.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from \"react\";\nimport { Typography, Button, TextField, FormGroup } from \"@material-ui/core\";\nimport axios from \"axios\";\nimport { Context } from \"../Context\";\nimport Navbar from \"../Navbar\";\nimport useStyles from \"../styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction EditAccount() {\n  _s();\n\n  const {\n    accountState,\n    getAccountInfo\n  } = useContext(Context); // All possible account info categories for 3 types of users\n\n  const {\n    acc_id,\n    branch_id,\n    employee_id,\n    email,\n    username,\n    first_name,\n    last_name,\n    hp,\n    mgr_id,\n    role_id,\n    store_id,\n    type_id\n  } = accountState;\n  const [usernameState, setUsernameState] = useState(username);\n  const [firstnameState, setFirstnameState] = useState(first_name);\n  const [lastnameState, setLastnameState] = useState(last_name);\n  const [emailState, setEmailState] = useState(email);\n  const [hpState, setHpState] = useState(hp);\n  useEffect(() => {\n    getAccountInfo();\n  }, []);\n  const API_URL = \"http://localhost:8080\";\n  const styles = useStyles();\n  const disabledInfo = [\"Role\", \"Account ID\", \"Employee ID\", \"Branch ID\", \"Mgr ID\", \"Store ID\", \"Store Type\"];\n\n  const EditAccountInfo = props => {\n    if (props.info == null) {\n      return null;\n    } else if (disabledInfo.includes(props.category)) {\n      return /*#__PURE__*/_jsxDEV(TextField, {\n        label: props.category,\n        defaultValue: props.info,\n        disabled: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this);\n    } else {\n      console.log(\"You shouldn't use this function.\");\n    }\n  };\n\n  function postAccountChange(newUsername, newFirstName, newLastName, newEmail, newHp) {\n    console.log(\"This is posting account changes\");\n    let payload = {\n      username: newUsername,\n      first_name: newFirstName,\n      last_name: newLastName,\n      email: newEmail,\n      hp: newHp\n    };\n    console.log(payload);\n\n    let FormData = require(\"form-data\");\n\n    let formdata = new FormData();\n    formdata.append(\"changes\", JSON.stringify(payload));\n    return axios.post(`${API_URL}/account/postProfileUpdate`, formdata, {\n      headers: {\n        \"Content-Type\": `multipart/form-data; boundary=${formdata._boundary}`\n      }\n    }).then(response => {\n      console.log(response);\n    }).catch(() => {\n      console.log(\"Failed account change submission\");\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: styles.main,\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h3\",\n      align: \"center\",\n      children: \"Edit Account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n      column: \"true\",\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Username\",\n        onChange: e => setUsernameState(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"First Name\",\n        onChange: e => setFirstnameState(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Last Name\",\n        onChange: e => setLastnameState(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Email\",\n        onChange: e => setEmailState(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Contact Number\",\n        onChange: e => setHpState(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EditAccountInfo, {\n        category: \"Role\",\n        info: role_id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EditAccountInfo, {\n        category: \"Account ID\",\n        info: acc_id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EditAccountInfo, {\n        category: \"Branch ID\",\n        info: branch_id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EditAccountInfo, {\n        category: \"Employee ID\",\n        info: employee_id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EditAccountInfo, {\n        category: \"Mgr ID\",\n        info: mgr_id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EditAccountInfo, {\n        category: \"Store ID\",\n        info: store_id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EditAccountInfo, {\n        category: \"Store Type\",\n        info: type_id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      className: styles.buttons,\n      align: \"center\",\n      variant: \"outlined\",\n      color: \"primary\",\n      fullWidth: true,\n      onClick: () => postAccountChange(usernameState, firstnameState, lastnameState, emailState, hpState),\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n}\n\n_s(EditAccount, \"dmnvTnW2ppP4kpEu2knHYdsqQeY=\", false, function () {\n  return [useStyles];\n});\n\n_c = EditAccount;\nexport default EditAccount;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditAccount\");","map":{"version":3,"sources":["/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/pages/EditAccount.js"],"names":["React","useState","useEffect","useContext","Typography","Button","TextField","FormGroup","axios","Context","Navbar","useStyles","EditAccount","accountState","getAccountInfo","acc_id","branch_id","employee_id","email","username","first_name","last_name","hp","mgr_id","role_id","store_id","type_id","usernameState","setUsernameState","firstnameState","setFirstnameState","lastnameState","setLastnameState","emailState","setEmailState","hpState","setHpState","API_URL","styles","disabledInfo","EditAccountInfo","props","info","includes","category","console","log","postAccountChange","newUsername","newFirstName","newLastName","newEmail","newHp","payload","FormData","require","formdata","append","JSON","stringify","post","headers","_boundary","then","response","catch","main","e","target","value","buttons"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\nimport { Typography, Button, TextField, FormGroup } from \"@material-ui/core\";\nimport axios from \"axios\";\n\nimport { Context } from \"../Context\";\nimport Navbar from \"../Navbar\";\nimport useStyles from \"../styles\";\n\nfunction EditAccount() {\n  const { accountState, getAccountInfo } = useContext(Context);\n\n  // All possible account info categories for 3 types of users\n  const {\n    acc_id,\n    branch_id,\n    employee_id,\n    email,\n    username,\n    first_name,\n    last_name,\n    hp,\n    mgr_id,\n    role_id,\n    store_id,\n    type_id,\n  } = accountState;\n\n  const [usernameState, setUsernameState] = useState(username);\n  const [firstnameState, setFirstnameState] = useState(first_name);\n  const [lastnameState, setLastnameState] = useState(last_name);\n  const [emailState, setEmailState] = useState(email);\n  const [hpState, setHpState] = useState(hp);\n\n  useEffect(() => {\n    getAccountInfo();\n  }, []);\n\n  const API_URL = \"http://localhost:8080\";\n  const styles = useStyles();\n  const disabledInfo = [\n    \"Role\",\n    \"Account ID\",\n    \"Employee ID\",\n    \"Branch ID\",\n    \"Mgr ID\",\n    \"Store ID\",\n    \"Store Type\",\n  ];\n\n  const EditAccountInfo = (props) => {\n    if (props.info == null) {\n      return null;\n    } else if (disabledInfo.includes(props.category)) {\n      return (\n        <TextField\n          label={props.category}\n          defaultValue={props.info}\n          disabled={true}\n        />\n      );\n    } else {\n      console.log(\"You shouldn't use this function.\");\n    }\n  };\n\n  function postAccountChange(\n    newUsername,\n    newFirstName,\n    newLastName,\n    newEmail,\n    newHp\n  ) {\n    console.log(\"This is posting account changes\");\n    let payload = {\n      username: newUsername,\n      first_name: newFirstName,\n      last_name: newLastName,\n      email: newEmail,\n      hp: newHp,\n    };\n    console.log(payload);\n    let FormData = require(\"form-data\");\n    let formdata = new FormData();\n    formdata.append(\"changes\", JSON.stringify(payload));\n\n    return axios\n      .post(`${API_URL}/account/postProfileUpdate`, formdata, {\n        headers: {\n          \"Content-Type\": `multipart/form-data; boundary=${formdata._boundary}`,\n        },\n      })\n      .then((response) => {\n        console.log(response);\n      })\n      .catch(() => {\n        console.log(\"Failed account change submission\");\n      });\n  }\n\n  return (\n    <main className={styles.main}>\n      <Navbar />\n      <br />\n      <Typography variant=\"h3\" align=\"center\">\n        Edit Account\n      </Typography>\n      <FormGroup column=\"true\">\n        <TextField\n          label=\"Username\"\n          onChange={(e) => setUsernameState(e.target.value)}\n        />\n        <TextField\n          label=\"First Name\"\n          onChange={(e) => setFirstnameState(e.target.value)}\n        />\n        <TextField\n          label=\"Last Name\"\n          onChange={(e) => setLastnameState(e.target.value)}\n        />\n        <TextField\n          label=\"Email\"\n          onChange={(e) => setEmailState(e.target.value)}\n        />\n        <TextField\n          label=\"Contact Number\"\n          onChange={(e) => setHpState(e.target.value)}\n        />\n        <br />\n        <EditAccountInfo category=\"Role\" info={role_id} />\n        <EditAccountInfo category=\"Account ID\" info={acc_id} />\n        <EditAccountInfo category=\"Branch ID\" info={branch_id} />\n        <EditAccountInfo category=\"Employee ID\" info={employee_id} />\n        <EditAccountInfo category=\"Mgr ID\" info={mgr_id} />\n        <EditAccountInfo category=\"Store ID\" info={store_id} />\n        <EditAccountInfo category=\"Store Type\" info={type_id} />\n        <br />\n      </FormGroup>\n      <Button\n        className={styles.buttons}\n        align=\"center\"\n        variant=\"outlined\"\n        color=\"primary\"\n        fullWidth\n        onClick={() =>\n          postAccountChange(\n            usernameState,\n            firstnameState,\n            lastnameState,\n            emailState,\n            hpState\n          )\n        }\n      >\n        Submit\n      </Button>\n    </main>\n  );\n}\n\nexport default EditAccount;\n"]},"metadata":{},"sourceType":"module"}