{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Documents/SingHealthAuditApp/frontend/src/pages/Chat.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useContext } from \"react\";\nimport { Link } from 'react-router-dom';\nimport { Typography, Button } from \"@material-ui/core\";\nimport axios from \"axios\";\nimport { Context } from \"../Context\";\nimport Navbar from \"../Navbar\";\nimport useStyles from \"../styles\";\nimport { FormGroup } from \"@material-ui/core\";\nimport ChatCards from \"../components/ChatCards\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Chat() {\n  _s();\n\n  const {\n    setAllChatsOfUserState,\n    allChatsOfUserState,\n    getAllChatsOfUser\n  } = useContext(Context);\n  useEffect(() => {\n    //getAllChatsOfUser();\n    async function getResponse() {\n      try {\n        await getAllChatsOfUser().then(response => {\n          console.log(response.data);\n          setAllChatsOfUserState(response.data);\n          console.log(allChatsOfUserState);\n        });\n      } catch {\n        console.log(\"Failed to retrive allChatsOfUser\");\n      }\n    }\n\n    getResponse();\n  }, []); // useEffect(() => {\n  //   async function getResponse() {\n  //     try{\n  //       const messageIdArray = await getAllChatsOfUser().then((response) => {\n  //         console.log(response);\n  //         return [\n  //           ...response.data.CLOSED.completed_audits,\n  //           ...response.data.OPEN.outstanding_audits,\n  //         ];\n  //       });\n  //       //initialize array to store all objects of report info\n  //       let reportInfoArray = [];\n  //       for (let i = 0; i < reportIdArray.length; i++) {\n  //         let reportInfo = await getReport(reportIdArray[i]).then(\n  //           (response) => {\n  //             console.log(response);\n  //             return response.data;\n  //           }\n  //         );\n  //         reportInfoArray.push(reportInfo);\n  //       }\n  //       //set state of audits to be an array of report info objects\n  //       setAuditsState(reportInfoArray);\n  //     } catch (err) {\n  //       console.log(err);\n  //     }\n  //   }\n  //   getResponse();\n  // }, []);\n\n  const styles = useStyles();\n  const array = [23, 25, 26, 26, 67];\n\n  const ChatInfo = props => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Chat ID: \", props.chat_id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Tenant ID: \", props.tenant_id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Auditor ID: \", props.auditor_id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Messages: \", props.messages]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: styles.main,\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h3\",\n      align: \"center\",\n      children: \"Chat\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      className: styles.buttons,\n      align: \"center\",\n      variant: \"outlined\",\n      color: \"primary\",\n      fullWidth: true // onClick={() => {\n      //   console.log(\"chatState: \" + allChatsOfUserState);\n      //   console.log(\"firstChat: \" + allChatsOfUserState[0]);\n      //   console.log(\"firstChatID: \" + allChatsOfUserState[0].chat_id);\n      // }}\n      ,\n      children: \"Get All Chats of User\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ChatCards, {\n      array: array\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Chat, \"vODkvJjTuQ1DBLOIY/ZR9/hL4Kw=\", false, function () {\n  return [useStyles];\n});\n\n_c = Chat;\nexport default Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["/Users/mac/Documents/SingHealthAuditApp/frontend/src/pages/Chat.js"],"names":["React","useEffect","useContext","Link","Typography","Button","axios","Context","Navbar","useStyles","FormGroup","ChatCards","Chat","setAllChatsOfUserState","allChatsOfUserState","getAllChatsOfUser","getResponse","then","response","console","log","data","styles","array","ChatInfo","props","chat_id","tenant_id","auditor_id","messages","main","buttons"],"mappings":"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","sourcesContent":["import React, { useEffect, useContext } from \"react\";\nimport { Link } from 'react-router-dom';\nimport { Typography, Button } from \"@material-ui/core\";\nimport axios from \"axios\";\n\nimport { Context } from \"../Context\";\nimport Navbar from \"../Navbar\";\nimport useStyles from \"../styles\";\nimport { FormGroup } from \"@material-ui/core\";\nimport ChatCards from \"../components/ChatCards\";\n\nfunction Chat() {\n\n  const {\n    setAllChatsOfUserState,\n    allChatsOfUserState,\n    getAllChatsOfUser\n  } = useContext(Context);\n\n  useEffect(() => {\n    //getAllChatsOfUser();\n    async function getResponse() {\n      try{\n        await getAllChatsOfUser().then((response) => {\n          console.log(response.data);\n          setAllChatsOfUserState(response.data);\n          console.log(allChatsOfUserState);\n        });\n      } catch {\n        console.log(\"Failed to retrive allChatsOfUser\")\n      }\n    }\n    getResponse()\n  }, []);\n\n  // useEffect(() => {\n  //   async function getResponse() {\n  //     try{\n  //       const messageIdArray = await getAllChatsOfUser().then((response) => {\n  //         console.log(response);\n  //         return [\n  //           ...response.data.CLOSED.completed_audits,\n  //           ...response.data.OPEN.outstanding_audits,\n  //         ];\n  //       });\n  //       //initialize array to store all objects of report info\n  //       let reportInfoArray = [];\n\n  //       for (let i = 0; i < reportIdArray.length; i++) {\n  //         let reportInfo = await getReport(reportIdArray[i]).then(\n  //           (response) => {\n  //             console.log(response);\n  //             return response.data;\n  //           }\n  //         );\n  //         reportInfoArray.push(reportInfo);\n  //       }\n\n  //       //set state of audits to be an array of report info objects\n  //       setAuditsState(reportInfoArray);\n  //     } catch (err) {\n  //       console.log(err);\n  //     }\n  //   }\n  //   getResponse();\n  // }, []);\n\n  const styles = useStyles();\n\n  const array = [23,25,26,26,67];\n\n  const ChatInfo = (props) => {\n    return (\n      <div>\n        <div>Chat ID: {props.chat_id}</div>\n        <div>Tenant ID: {props.tenant_id}</div>\n        <div>Auditor ID: {props.auditor_id}</div>\n        <div>Messages: {props.messages}</div>\n      </div>   \n    );\n  };\n\n  return (\n    <main className={styles.main}>\n      <Navbar />\n      <br />\n      <Typography variant=\"h3\" align=\"center\">Chat</Typography>\n      <Button\n        className={styles.buttons}\n        align=\"center\"\n        variant=\"outlined\"\n        color=\"primary\"\n        fullWidth\n        // onClick={() => {\n        //   console.log(\"chatState: \" + allChatsOfUserState);\n        //   console.log(\"firstChat: \" + allChatsOfUserState[0]);\n        //   console.log(\"firstChatID: \" + allChatsOfUserState[0].chat_id);\n        // }}\n      >\n        Get All Chats of User\n      </Button>\n      <ChatCards array={array}/>\n\n    </main>\n  )\n}\n\nexport default Chat;"]},"metadata":{},"sourceType":"module"}