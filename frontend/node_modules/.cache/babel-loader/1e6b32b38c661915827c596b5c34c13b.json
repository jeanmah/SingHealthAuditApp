{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Documents/SingHealthAuditApp/frontend/src/components/ChatEntriesCard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { Context } from '../Context';\nimport { Typography } from \"@material-ui/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ChatEntriesCards = () => {\n  _s();\n\n  const {\n    chatEntriesOfUserState,\n    setChatEntriesOfUserState\n  } = useContext(Context);\n  console.log(\"chatEntries: \" + chatEntriesOfUserState);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"All Entries of Chat:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), props.chatEntriesOfUserArray.map((entry, index) => {\n      //console.log(\"chatEntry1: \" + chatEntriesOfUserState[0]);\n      return /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Chat Entry ID: \", entry.chat_entry_id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Date: \", entry.date]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Message Body: \", entry.messageBody]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Sender ID: \", entry.sender_id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Subject:\", entry.subject]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: entry.time\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: entry.attachments\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ChatEntriesCards, \"whZ+qeWAD3NiwUWIw186Vjo8r/8=\");\n\n_c = ChatEntriesCards;\nexport default ChatEntriesCards;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatEntriesCards\");","map":{"version":3,"sources":["/Users/mac/Documents/SingHealthAuditApp/frontend/src/components/ChatEntriesCard.js"],"names":["React","useContext","useEffect","useState","Context","Typography","ChatEntriesCards","chatEntriesOfUserState","setChatEntriesOfUserState","console","log","props","chatEntriesOfUserArray","map","entry","index","chat_entry_id","date","messageBody","sender_id","subject","time","attachments"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,SAASC,OAAT,QAAwB,YAAxB;AACA,SAASC,UAAT,QAA2B,mBAA3B;;;AAEA,MAAMC,gBAAgB,GAAG,MAAM;AAAA;;AAC7B,QAAM;AAAEC,IAAAA,sBAAF;AAA0BC,IAAAA;AAA1B,MAAwDP,UAAU,CAACG,OAAD,CAAxE;AACAK,EAAAA,OAAO,CAACC,GAAR,CAAY,kBAAkBH,sBAA9B;AACA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEGI,KAAK,CAACC,sBAAN,CAA6BC,GAA7B,CAAiC,CAACC,KAAD,EAAQC,KAAR,KAAkB;AAClD;AACA,0BACE,QAAC,KAAD,CAAO,QAAP;AAAA,gCACE;AAAA,wCAAqBD,KAAK,CAACE,aAA3B;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,+BAAYF,KAAK,CAACG,IAAlB;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAA,uCAAoBH,KAAK,CAACI,WAA1B;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF,eAIE;AAAA,oCAAiBJ,KAAK,CAACK,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF,eAKE;AAAA,iCAAcL,KAAK,CAACM,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF,eAME;AAAA,oBAAMN,KAAK,CAACO;AAAZ;AAAA;AAAA;AAAA;AAAA,gBANF,eAOE;AAAA,oBAAMP,KAAK,CAACQ;AAAZ;AAAA;AAAA;AAAA;AAAA,gBAPF,eAQE;AAAA;AAAA;AAAA;AAAA,gBARF;AAAA,SAAqBP,KAArB;AAAA;AAAA;AAAA;AAAA,cADF;AAYD,KAdA,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD,CAvBD;;GAAMT,gB;;KAAAA,gB;AAyBN,eAAeA,gBAAf","sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\nimport { Context } from '../Context';\nimport { Typography } from \"@material-ui/core\";\n\nconst ChatEntriesCards = () => {\n  const { chatEntriesOfUserState, setChatEntriesOfUserState } = useContext(Context);\n  console.log(\"chatEntries: \" + chatEntriesOfUserState);\n  return (\n    <div>\n      <h3>All Entries of Chat:</h3>\n      {props.chatEntriesOfUserArray.map((entry, index) => {\n        //console.log(\"chatEntry1: \" + chatEntriesOfUserState[0]);\n        return (\n          <React.Fragment key={index}>\n            <div>Chat Entry ID: {entry.chat_entry_id}</div>\n            <div>Date: {entry.date}</div>\n            <div>Message Body: {entry.messageBody}</div>\n            <div>Sender ID: {entry.sender_id}</div>\n            <div>Subject:{entry.subject}</div>\n            <div>{entry.time}</div>\n            <div>{entry.attachments}</div>\n            <br />\n          </React.Fragment>\n        );\n      })}\n    </div>\n  )\n}\n\nexport default ChatEntriesCards;"]},"metadata":{},"sourceType":"module"}