{"ast":null,"code":"var _jsxFileName = \"/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/pages/FbChecklist.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext, useEffect } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport Question from \"../components/Question\";\nimport { Context } from \"../Context\";\nimport Modal from \"../components/Modal\";\nimport Navbar from \"../Navbar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction FbCategory() {\n  _s();\n\n  //get tenant id from url\n  const {\n    tenantId\n  } = useParams(); //Context: Fb Checklist\n\n  const {\n    fbChecklistState,\n    getFbChecklistQuestions,\n    fbReportState,\n    createFbReportState\n  } = useContext(Context); //Context: to call update audits function and reset checked values after clicking submit\n  // const { updateAudit, resetTenantFbChecklist } = useContext(Context);\n  // //Context: tenants state\n  // const { tenantsState } = useContext(Context);\n\n  useEffect(async () => {\n    //callback function to retrieve questions\n    const response = await getFbChecklistQuestions(); //prepare reportState\n\n    createFbReportState(fbChecklistState, response);\n  }, []);\n  console.log(fbChecklistState);\n  console.log(fbReportState); //retrieve fbchecklist questions from backend\n  // getFbChecklistQuestions(\"FB\")\n  //   .then((response) => {\n  //     setFbChecklistState(response.data);\n  //   })\n  //   .catch(() => {\n  //     console.log(\"failed to retrieve fbchecklist\");\n  //   });\n  //create new array of questions with status to allow checking of pass/fail\n  // const fbChecklistReport = prepareFbChecklistReport(fbChecklistState);\n  // console.log(fbChecklistReport);\n  // const tenantObject = tenantsState.find(\n  //   (tenant) => tenant.tenantid === tenantId\n  // );\n  //destructure tenantObject\n  // const { tenantid, tenantName, status, institution } = tenantObject;\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: fbReportState && fbReportState.length ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"category-head\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"FB Checklist\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this), fbChecklistState.map((question, index) => {\n          const {\n            fb_qn_id,\n            requirement\n          } = question;\n          return /*#__PURE__*/_jsxDEV(Question, {\n            fb_qn_id: fb_qn_id,\n            requirement: requirement,\n            tenantId: tenantId\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 17\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: `/tenant/${tenantId}`,\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n\n_s(FbCategory, \"B2vs2vqzUYiu7+G/DCFhdiocrOM=\", false, function () {\n  return [useParams];\n});\n\n_c = FbCategory;\nexport default FbCategory;\n\nvar _c;\n\n$RefreshReg$(_c, \"FbCategory\");","map":{"version":3,"sources":["/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/pages/FbChecklist.js"],"names":["React","useState","useContext","useEffect","Link","useParams","Question","Context","Modal","Navbar","FbCategory","tenantId","fbChecklistState","getFbChecklistQuestions","fbReportState","createFbReportState","response","console","log","length","map","question","index","fb_qn_id","requirement"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,EAAsCC,SAAtC,QAAuD,OAAvD;AACA,SAASC,IAAT,EAAeC,SAAf,QAAgC,kBAAhC;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAASC,OAAT,QAAwB,YAAxB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,MAAP,MAAmB,WAAnB;;;;AAEA,SAASC,UAAT,GAAsB;AAAA;;AACpB;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAeN,SAAS,EAA9B,CAFoB,CAGpB;;AACA,QAAM;AACJO,IAAAA,gBADI;AAEJC,IAAAA,uBAFI;AAGJC,IAAAA,aAHI;AAIJC,IAAAA;AAJI,MAKFb,UAAU,CAACK,OAAD,CALd,CAJoB,CAWpB;AACA;AACA;AACA;;AACAJ,EAAAA,SAAS,CAAC,YAAY;AACpB;AACA,UAAMa,QAAQ,GAAG,MAAMH,uBAAuB,EAA9C,CAFoB,CAGpB;;AACAE,IAAAA,mBAAmB,CAACH,gBAAD,EAAmBI,QAAnB,CAAnB;AACD,GALQ,EAKN,EALM,CAAT;AAMAC,EAAAA,OAAO,CAACC,GAAR,CAAYN,gBAAZ;AACAK,EAAAA,OAAO,CAACC,GAAR,CAAYJ,aAAZ,EAtBoB,CAwBpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;;AAEA,sBACE;AAAA,cACGA,aAAa,IAAIA,aAAa,CAACK,MAA/B,gBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,gBAGC;AAAA,8BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA,gCAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPF,EAQGP,gBAAgB,CAACQ,GAAjB,CAAqB,CAACC,QAAD,EAAWC,KAAX,KAAqB;AACzC,gBAAM;AAAEC,YAAAA,QAAF;AAAYC,YAAAA;AAAZ,cAA4BH,QAAlC;AACA,8BACE,QAAC,QAAD;AAEE,YAAA,QAAQ,EAAEE,QAFZ;AAGE,YAAA,WAAW,EAAEC,WAHf;AAIE,YAAA,QAAQ,EAAEb;AAJZ,aACOW,KADP;AAAA;AAAA;AAAA;AAAA,kBADF;AAQD,SAVA,CARH,eAmBE;AAAA;AAAA;AAAA;AAAA,gBAnBF,eAoBE,QAAC,IAAD;AAAM,UAAA,EAAE,EAAG,WAAUX,QAAS,EAA9B;AAAA,iCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBApBF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,UADF;AA0CD;;GArFQD,U;UAEcL,S;;;KAFdK,U;AAuFT,eAAeA,UAAf","sourcesContent":["import React, { useState, useContext, useEffect } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport Question from \"../components/Question\";\nimport { Context } from \"../Context\";\nimport Modal from \"../components/Modal\";\nimport Navbar from \"../Navbar\";\n\nfunction FbCategory() {\n  //get tenant id from url\n  const { tenantId } = useParams();\n  //Context: Fb Checklist\n  const {\n    fbChecklistState,\n    getFbChecklistQuestions,\n    fbReportState,\n    createFbReportState,\n  } = useContext(Context);\n\n  //Context: to call update audits function and reset checked values after clicking submit\n  // const { updateAudit, resetTenantFbChecklist } = useContext(Context);\n  // //Context: tenants state\n  // const { tenantsState } = useContext(Context);\n  useEffect(async () => {\n    //callback function to retrieve questions\n    const response = await getFbChecklistQuestions();\n    //prepare reportState\n    createFbReportState(fbChecklistState, response);\n  }, []);\n  console.log(fbChecklistState);\n  console.log(fbReportState);\n\n  //retrieve fbchecklist questions from backend\n  // getFbChecklistQuestions(\"FB\")\n  //   .then((response) => {\n  //     setFbChecklistState(response.data);\n  //   })\n  //   .catch(() => {\n  //     console.log(\"failed to retrieve fbchecklist\");\n  //   });\n  //create new array of questions with status to allow checking of pass/fail\n  // const fbChecklistReport = prepareFbChecklistReport(fbChecklistState);\n\n  // console.log(fbChecklistReport);\n\n  // const tenantObject = tenantsState.find(\n  //   (tenant) => tenant.tenantid === tenantId\n  // );\n  //destructure tenantObject\n  // const { tenantid, tenantName, status, institution } = tenantObject;\n\n  return (\n    <div>\n      {fbReportState && fbReportState.length ? (\n        <div>Loading</div>\n      ) : (\n        <>\n          <Navbar />\n          <div className=\"category-head\">\n            {/* {fbChecklistState.map((question) => {\n          const { fb_qn_id } = question;\n          return (\n            <Modal key={fb_qn_id} questionId={fb_qn_id} tenantId={tenantId} />\n          );\n        })} */}\n            <h2>FB Checklist</h2>\n            {fbChecklistState.map((question, index) => {\n              const { fb_qn_id, requirement } = question;\n              return (\n                <Question\n                  key={index}\n                  fb_qn_id={fb_qn_id}\n                  requirement={requirement}\n                  tenantId={tenantId}\n                />\n              );\n            })}\n            <br />\n            <Link to={`/tenant/${tenantId}`}>\n              <button\n              // onClick={() => {\n              //   updateAudit(tenantId, \"FB\", tenantName, \"unresolved\");\n              //   resetTenantFbChecklist(tenantId);\n              // }}\n              >\n                Submit\n              </button>\n            </Link>\n          </div>\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default FbCategory;\n"]},"metadata":{},"sourceType":"module"}