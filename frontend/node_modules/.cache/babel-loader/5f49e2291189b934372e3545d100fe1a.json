{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Documents/SingHealthAuditApp/frontend/src/pages/EditAccount.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from \"react\";\nimport { Typography, Button, Input, TextField, FormGroup, FormControlLabel } from \"@material-ui/core\";\nimport axios from \"axios\";\nimport { Context } from \"../Context\";\nimport Navbar from \"../Navbar\";\nimport useStyles from \"../styles\";\nimport { Container } from \"@material-ui/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction EditAccount() {\n  _s();\n\n  const {\n    accountState,\n    getAccountInfo\n  } = useContext(Context); // All possible account info categories for 3 types of users\n\n  const {\n    acc_id,\n    branch_id,\n    employee_id,\n    email,\n    username,\n    first_name,\n    last_name,\n    hp,\n    mgr_id,\n    role_id,\n    store_id,\n    type_id\n  } = accountState;\n  const [usernameState, setUsernameState] = useState(\"IamHannah\"); /////\n\n  const [firstnameState, setFirstnameState] = useState(first_name); /////\n\n  const [lastnameState, setLastnameState] = useState(last_name);\n  const [emailState, setEmailState] = useState(email);\n  const [hpState, setHpState] = useState(hp);\n  useEffect(() => {\n    getAccountInfo();\n  }, []);\n  const API_URL = \"http://localhost:8080\";\n  const styles = useStyles();\n  const disabledInfo = [\"Role\", \"Account ID\", \"Employee ID\", \"Branch ID\", \"Mgr ID\", \"Store ID\", \"Store Type\"];\n\n  function setEditAccountState(category, input) {\n    if (category === \"Username\") {\n      setUsernameState(input);\n      console.log(\"Reading username input.\");\n    } else if (category === \"First Name\") {\n      setFirstnameState(input);\n    } else if (category === \"Last Name\") {\n      setLastnameState(input);\n    } else if (category === \"Email\") {\n      setEmailState(input);\n    } else if (category === \"Contact Number\") {\n      setHpState(input);\n    } else {\n      console.log(\"Failed to read user input.\");\n    }\n  }\n\n  const EditAccountInfo = props => {\n    if (props.info == null) {\n      return null;\n    } else if (disabledInfo.includes(props.category)) {\n      return /*#__PURE__*/_jsxDEV(TextField, {\n        label: props.category,\n        defaultValue: props.info,\n        disabled: \"true\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 14\n      }, this);\n    } else {\n      console.log(\"You shouldn't use this function.\");\n    }\n  };\n\n  function postAccountChange(newUsername, newFirstName, newLastName, newEmail, newHp) {\n    console.log(\"This is posting account changes\");\n    let payload = {\n      username: newUsername,\n      first_name: newFirstName,\n      last_name: newLastName,\n      email: newEmail,\n      hp: newHp\n    };\n\n    let FormData = require(\"form-data\");\n\n    let formdata = new FormData();\n    formdata.append(\"changes\", JSON.stringify(payload));\n    return axios.post(`${API_URL}/account/postProfileUpdate`, formdata, {\n      headers: {\n        \"Content-Type\": `multipart/form-data; boundary=${formdata._boundary}`\n      }\n    }).then(response => {\n      console.log(response);\n    }).catch(() => {\n      console.log(\"Failed account change submission\");\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: styles.main,\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h3\",\n      align: \"center\",\n      children: \"Edit Account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n      column: \"true\",\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Username\",\n        onChange: e => setUsernameState(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"First Name\",\n        onChange: e => setFirstnameState(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Last Name\",\n        onChange: e => setLastnameState(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Email\",\n        onChange: e => setEmailState(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Contact Number\",\n        onChange: e => setHpState(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EditAccountInfo, {\n        category: \"Role\",\n        info: role_id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EditAccountInfo, {\n        category: \"Account ID\",\n        info: acc_id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EditAccountInfo, {\n        category: \"Branch ID\",\n        info: branch_id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EditAccountInfo, {\n        category: \"Employee ID\",\n        info: employee_id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EditAccountInfo, {\n        category: \"Mgr ID\",\n        info: mgr_id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EditAccountInfo, {\n        category: \"Store ID\",\n        info: store_id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EditAccountInfo, {\n        category: \"Store Type\",\n        info: type_id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      className: styles.buttons,\n      align: \"center\",\n      variant: \"outlined\",\n      color: \"primary\",\n      onClick: console.log(usernameState),\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 5\n  }, this);\n}\n\n_s(EditAccount, \"DuPZp73uqpFBXdvOSB0tS48W5ME=\", false, function () {\n  return [useStyles];\n});\n\n_c = EditAccount;\nexport default EditAccount;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditAccount\");","map":{"version":3,"sources":["/Users/mac/Documents/SingHealthAuditApp/frontend/src/pages/EditAccount.js"],"names":["React","useState","useEffect","useContext","Typography","Button","Input","TextField","FormGroup","FormControlLabel","axios","Context","Navbar","useStyles","Container","EditAccount","accountState","getAccountInfo","acc_id","branch_id","employee_id","email","username","first_name","last_name","hp","mgr_id","role_id","store_id","type_id","usernameState","setUsernameState","firstnameState","setFirstnameState","lastnameState","setLastnameState","emailState","setEmailState","hpState","setHpState","API_URL","styles","disabledInfo","setEditAccountState","category","input","console","log","EditAccountInfo","props","info","includes","postAccountChange","newUsername","newFirstName","newLastName","newEmail","newHp","payload","FormData","require","formdata","append","JSON","stringify","post","headers","_boundary","then","response","catch","main","e","target","value","buttons"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\nimport { Typography, Button, Input, TextField, FormGroup, FormControlLabel } from \"@material-ui/core\";\nimport axios from \"axios\";\n\nimport { Context } from \"../Context\";\nimport Navbar from \"../Navbar\";\nimport useStyles from \"../styles\";\nimport { Container } from \"@material-ui/core\";\n\nfunction EditAccount() {\n\n  const {\n    accountState,\n    getAccountInfo\n  } = useContext(Context);\n\n  // All possible account info categories for 3 types of users\n  const {\n    acc_id,\n    branch_id,\n    employee_id,\n    email,\n    username,\n    first_name,\n    last_name,\n    hp,\n    mgr_id,\n    role_id,\n    store_id,\n    type_id,\n  } = accountState;\n\n  const [usernameState, setUsernameState] = useState(\"IamHannah\"); /////\n  const [firstnameState, setFirstnameState] = useState(first_name); /////\n  const [lastnameState, setLastnameState] = useState(last_name);\n  const [emailState, setEmailState] = useState(email);\n  const [hpState, setHpState] = useState(hp);\n\n  useEffect(() => {\n    getAccountInfo();\n  }, []);\n\n  const API_URL = \"http://localhost:8080\";\n  const styles = useStyles();\n  const disabledInfo = [\n    \"Role\", \n    \"Account ID\", \n    \"Employee ID\", \n    \"Branch ID\", \n    \"Mgr ID\", \n    \"Store ID\", \n    \"Store Type\"\n  ];\n\n  function setEditAccountState(category, input) {\n    if (category === \"Username\") {\n      setUsernameState(input);\n      console.log(\"Reading username input.\")\n    } else if (category === \"First Name\") {\n      setFirstnameState(input);\n    } else if (category === \"Last Name\") {\n      setLastnameState(input);\n    } else if (category === \"Email\") {\n      setEmailState(input);\n    } else if (category === \"Contact Number\") {\n      setHpState(input);\n    } else {\n      console.log(\"Failed to read user input.\")\n    }\n  }\n\n  const EditAccountInfo = (props) => {\n    if (props.info == null) {\n      return null\n    } else if (disabledInfo.includes(props.category)) {\n      return <TextField \n        label={props.category} \n        defaultValue={props.info} \n        disabled=\"true\"\n      />\n    } else {\n      console.log(\"You shouldn't use this function.\")\n    }\n  }\n\n  function postAccountChange(newUsername, newFirstName, newLastName, newEmail, newHp) {\n    console.log(\"This is posting account changes\");\n    let payload = {\n      username: newUsername,\n      first_name: newFirstName,\n      last_name: newLastName,\n      email: newEmail,\n      hp: newHp,\n    };\n    let FormData = require(\"form-data\");\n    let formdata = new FormData();\n    formdata.append(\"changes\", JSON.stringify(payload));\n    return axios\n      .post(\n        `${API_URL}/account/postProfileUpdate`,\n        formdata,\n        {\n          headers: {\n            \"Content-Type\": `multipart/form-data; boundary=${formdata._boundary}`,\n          },\n        }\n      )\n      .then((response) => {\n        console.log(response);\n      })\n      .catch(() => {\n        console.log(\"Failed account change submission\");\n      });\n  }\n\n  return (\n    <main className={styles.main}>\n      <Typography variant=\"h3\" align=\"center\">Edit Account</Typography>\n      <br />\n      <FormGroup column=\"true\">\n        <TextField label=\"Username\" onChange={(e) => setUsernameState(e.target.value)} />\n        <TextField label=\"First Name\" onChange={(e) => setFirstnameState(e.target.value)} />\n        <TextField label=\"Last Name\" onChange={(e) => setLastnameState(e.target.value)} />\n        <TextField label=\"Email\" onChange={(e) => setEmailState(e.target.value)} />\n        <TextField label=\"Contact Number\" onChange={(e) => setHpState(e.target.value)} />\n        <br />\n        <EditAccountInfo category=\"Role\" info={role_id}/>\n        <EditAccountInfo category=\"Account ID\" info={acc_id}/>\n        <EditAccountInfo category=\"Branch ID\" info={branch_id}/>\n        <EditAccountInfo category=\"Employee ID\" info={employee_id} />\n        <EditAccountInfo category=\"Mgr ID\" info={mgr_id}/>\n        <EditAccountInfo category=\"Store ID\" info={store_id}/>\n        <EditAccountInfo category=\"Store Type\" info={type_id}/>\n        <br />\n      </FormGroup>\n      <Button\n        className={styles.buttons}\n        align=\"center\"\n        variant=\"outlined\"\n        color=\"primary\"\n        onClick={\n          console.log(usernameState)\n        }\n      >\n        Submit\n      </Button>\n    </main>\n  )\n}\n\nexport default EditAccount;"]},"metadata":{},"sourceType":"module"}