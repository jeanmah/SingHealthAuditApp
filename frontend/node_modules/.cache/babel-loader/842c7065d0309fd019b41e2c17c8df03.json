{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Documents/SingHealthAuditApp/frontend/src/Navbar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useEffect, useContext } from \"react\";\nimport { FaBars } from \"react-icons/fa\";\nimport { auditorNavLinks, tenantNavLinks, managerNavLinks, navBarImage } from \"./data\";\nimport auditor from \"./auditor.png\";\nimport { Link } from \"react-router-dom\";\nimport { Context } from './Context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Navbar() {\n  _s();\n\n  const {\n    accountState,\n    getAccountInfo\n  } = useContext(Context);\n  const {\n    role_id,\n    username\n  } = accountState;\n  const [toggleClicked, settoggleClicked] = useState(false);\n  const linksContainerRef = useRef(null);\n  const linksRef = useRef(null);\n\n  const showLinks = () => {\n    settoggleClicked(!toggleClicked);\n  };\n\n  useEffect(() => {\n    getAccountInfo();\n    let linksHeight = linksRef.current.getBoundingClientRect().height;\n\n    if (toggleClicked) {\n      linksContainerRef.current.style.height = `${linksHeight}px`;\n    } else {\n      linksContainerRef.current.style.height = \"0px\";\n    }\n  }, [toggleClicked]);\n\n  function mapLinks(links) {\n    return links.map((link, index) => {\n      const {\n        id,\n        url,\n        text\n      } = link;\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: url,\n          children: text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this);\n    });\n  }\n\n  function getNavLinks(role) {\n    if (role == \"Auditor\") {\n      return mapLinks(auditorNavLinks);\n    } else if (role == \"Tenant\") {\n      return mapLinks(tenantNavLinks);\n    } else if (role == \"Manager\") {\n      return mapLinks(managerNavLinks);\n    }\n\n    ;\n  }\n\n  ;\n  const navLinks = auditorNavLinks;\n  const fakeNavLinks = getNavLinks(role_id);\n  console.log(role_id);\n  console.log(navLinks);\n  console.log(fakeNavLinks);\n  console.log(navLinks === fakeNavLinks);\n  return /*#__PURE__*/_jsxDEV(\"nav\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"nav-pc\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"nav-mobile\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: auditor,\n          className: \"logo\",\n          alt: \"auditor\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"auditor-name\",\n          children: \"Welcome Marcus \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"nav-toggle\",\n          onClick: () => {\n            showLinks();\n          },\n          children: /*#__PURE__*/_jsxDEV(FaBars, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"links-container\",\n        ref: linksContainerRef,\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"links\",\n          ref: linksRef,\n          children: getNavLinks(accountState.role_id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Navbar, \"B9irFSE896pkKLk/dc6sMgvOadc=\");\n\n_c = Navbar;\nexport default Navbar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"sources":["/Users/mac/Documents/SingHealthAuditApp/frontend/src/Navbar.js"],"names":["React","useState","useRef","useEffect","useContext","FaBars","auditorNavLinks","tenantNavLinks","managerNavLinks","navBarImage","auditor","Link","Context","Navbar","accountState","getAccountInfo","role_id","username","toggleClicked","settoggleClicked","linksContainerRef","linksRef","showLinks","linksHeight","current","getBoundingClientRect","height","style","mapLinks","links","map","link","index","id","url","text","getNavLinks","role","navLinks","fakeNavLinks","console","log"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect, useContext } from \"react\";\nimport { FaBars } from \"react-icons/fa\";\nimport { auditorNavLinks, tenantNavLinks, managerNavLinks, navBarImage } from \"./data\";\nimport auditor from \"./auditor.png\";\nimport { Link } from \"react-router-dom\";\n\nimport { Context } from './Context';\n\nfunction Navbar() {\n  const { accountState, getAccountInfo } = useContext(Context);\n  const { role_id, username } = accountState;\n  const [toggleClicked, settoggleClicked] = useState(false);\n  const linksContainerRef = useRef(null);\n  const linksRef = useRef(null);\n  const showLinks = () => {\n    settoggleClicked(!toggleClicked);\n  };\n\n  useEffect(() => {\n    getAccountInfo();\n    let linksHeight = linksRef.current.getBoundingClientRect().height;\n    if (toggleClicked) {\n      linksContainerRef.current.style.height = `${linksHeight}px`;\n    } else {\n      linksContainerRef.current.style.height = \"0px\";\n    }\n  }, [toggleClicked]);\n\n  function mapLinks(links) {\n    return (\n      links.map((link, index) => {\n        const { id, url, text } = link;\n        return (\n          <li key={index}>\n            <Link to={url}>{text}</Link>\n          </li>\n        );\n      })\n    )\n  }\n\n  function getNavLinks(role) {\n    if (role == \"Auditor\") {\n      return mapLinks(auditorNavLinks);\n    } else if (role == \"Tenant\") {\n      return mapLinks(tenantNavLinks);\n    } else if (role == \"Manager\") {\n      return mapLinks(managerNavLinks);\n    };\n  };\n\n  const navLinks = auditorNavLinks;\n\n  const fakeNavLinks = getNavLinks(role_id);\n\n  console.log(role_id);\n  console.log(navLinks);\n  console.log(fakeNavLinks);\n  console.log(navLinks===fakeNavLinks);\n\n  return (\n    <nav>\n      <div className=\"nav-pc\">\n        <div className=\"nav-mobile\">\n          <img src={auditor} className=\"logo\" alt=\"auditor\"></img>\n          <div className=\"auditor-name\">Welcome Marcus {}</div>\n          <button\n            className=\"nav-toggle\"\n            onClick={() => {\n              showLinks();\n            }}\n          >\n            <FaBars />\n          </button>\n        </div>\n        <div className=\"links-container\" ref={linksContainerRef}>\n          <ul className=\"links\" ref={linksRef}>\n            {getNavLinks(accountState.role_id)}\n          </ul>\n        </div>\n      </div>\n    </nav>\n  );\n}\n\nexport default Navbar;\n"]},"metadata":{},"sourceType":"module"}