{"ast":null,"code":"var _jsxFileName = \"/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/components/Question.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from \"react\";\nimport { fbChecklist } from \"../data\";\nimport Modal from \"./Modal\";\nimport { FaRegEdit } from \"react-icons/fa\";\nimport { Context } from \"../Context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Question({\n  id,\n  category,\n  text,\n  checked,\n  comment\n}) {\n  _s();\n\n  //Context: state of modal (whether it is open or not)\n  const {\n    setModalOpen,\n    closeModal\n  } = useContext(Context); //get the array containing this question object\n  //to be used to update it's checked property in handleChange() function\n\n  const thisQuestion = fbChecklist.filter(question => {\n    return question.id === id;\n  });\n\n  const handleChange = () => {\n    //update the property whenever checked is clicked\n    thisQuestion[0].checked = !checked;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"checkbox\",\n      id: id,\n      name: `Check${id}`,\n      onChange: () => {\n        handleChange();\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FaRegEdit, {\n      onClick: () => {\n        setModalOpen(true);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      id: id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Question, \"HnjJvOnTYdscofa4yxtHs0fkemM=\");\n\n_c = Question;\nexport default Question;\n\nvar _c;\n\n$RefreshReg$(_c, \"Question\");","map":{"version":3,"sources":["/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/components/Question.js"],"names":["React","useState","useContext","fbChecklist","Modal","FaRegEdit","Context","Question","id","category","text","checked","comment","setModalOpen","closeModal","thisQuestion","filter","question","handleChange"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,SAASC,WAAT,QAA4B,SAA5B;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAASC,SAAT,QAA0B,gBAA1B;AACA,SAASC,OAAT,QAAwB,YAAxB;;;AAEA,SAASC,QAAT,CAAkB;AAAEC,EAAAA,EAAF;AAAMC,EAAAA,QAAN;AAAgBC,EAAAA,IAAhB;AAAsBC,EAAAA,OAAtB;AAA+BC,EAAAA;AAA/B,CAAlB,EAA4D;AAAA;;AAC1D;AACA,QAAM;AAAEC,IAAAA,YAAF;AAAgBC,IAAAA;AAAhB,MAA+BZ,UAAU,CAACI,OAAD,CAA/C,CAF0D,CAG1D;AACA;;AACA,QAAMS,YAAY,GAAGZ,WAAW,CAACa,MAAZ,CAAoBC,QAAD,IAAc;AACpD,WAAOA,QAAQ,CAACT,EAAT,KAAgBA,EAAvB;AACD,GAFoB,CAArB;;AAGA,QAAMU,YAAY,GAAG,MAAM;AACzB;AACAH,IAAAA,YAAY,CAAC,CAAD,CAAZ,CAAgBJ,OAAhB,GAA0B,CAACA,OAA3B;AACD,GAHD;;AAKA,sBACE;AAAA,4BACE;AAAA,gBAAOD;AAAP;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AACE,MAAA,IAAI,EAAC,UADP;AAEE,MAAA,EAAE,EAAEF,EAFN;AAGE,MAAA,IAAI,EAAG,QAAOA,EAAG,EAHnB;AAIE,MAAA,QAAQ,EAAE,MAAM;AACdU,QAAAA,YAAY;AACb;AANH;AAAA;AAAA;AAAA;AAAA,YAFF,eAUE,QAAC,SAAD;AACE,MAAA,OAAO,EAAE,MAAM;AACbL,QAAAA,YAAY,CAAC,IAAD,CAAZ;AACD;AAHH;AAAA;AAAA;AAAA;AAAA,YAVF,eAeE,QAAC,KAAD;AAAO,MAAA,EAAE,EAAEL;AAAX;AAAA;AAAA;AAAA;AAAA,YAfF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD;;GAhCQD,Q;;KAAAA,Q;AAkCT,eAAeA,QAAf","sourcesContent":["import React, { useState, useContext } from \"react\";\nimport { fbChecklist } from \"../data\";\nimport Modal from \"./Modal\";\nimport { FaRegEdit } from \"react-icons/fa\";\nimport { Context } from \"../Context\";\n\nfunction Question({ id, category, text, checked, comment }) {\n  //Context: state of modal (whether it is open or not)\n  const { setModalOpen, closeModal } = useContext(Context);\n  //get the array containing this question object\n  //to be used to update it's checked property in handleChange() function\n  const thisQuestion = fbChecklist.filter((question) => {\n    return question.id === id;\n  });\n  const handleChange = () => {\n    //update the property whenever checked is clicked\n    thisQuestion[0].checked = !checked;\n  };\n\n  return (\n    <div>\n      <span>{text}</span>\n      <input\n        type=\"checkbox\"\n        id={id}\n        name={`Check${id}`}\n        onChange={() => {\n          handleChange();\n        }}\n      />\n      <FaRegEdit\n        onClick={() => {\n          setModalOpen(true);\n        }}\n      />\n      <Modal id={id} />\n    </div>\n  );\n}\n\nexport default Question;\n"]},"metadata":{},"sourceType":"module"}