{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Documents/SingHealthAuditApp/frontend/src/pages/EditAccount.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from \"react\";\nimport { Typography, Button, Input, TextField, FormGroup, FormControlLabel } from \"@material-ui/core\";\nimport axios from \"axios\";\nimport { Context } from \"../Context\";\nimport Navbar from \"../Navbar\";\nimport useStyles from \"../styles\";\nimport { Container } from \"@material-ui/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction EditAccount() {\n  _s();\n\n  const {\n    accountState,\n    getAccountInfo\n  } = useContext(Context); // All possible account info categories for 3 types of users\n\n  const {\n    acc_id,\n    branch_id,\n    employee_id,\n    email,\n    username,\n    first_name,\n    last_name,\n    hp,\n    mgr_id,\n    role_id,\n    store_id,\n    type_id\n  } = accountState;\n  const [usernameState, setUsernameState] = useState(username);\n  const [firstnameState, setFirstnameState] = useState(first_name);\n  const [lastnameState, setLastnameState] = useState(last_name);\n  const [emailState, setEmailState] = useState(email);\n  const [hpState, setHpState] = useState(hp);\n  useEffect(() => {\n    getAccountInfo();\n  }, []);\n  const API_URL = \"http://localhost:8080\";\n  const styles = useStyles();\n  const disabledInfo = [\"Role\", \"Account ID\", \"Employee ID\", \"Branch ID\", \"Mgr ID\", \"Store ID\", \"Store Type\"];\n\n  const EditAccountInfo = props => {\n    if (props.info == null) {\n      return null;\n    } else if (disabledInfo.includes(props.category)) {\n      return /*#__PURE__*/_jsxDEV(TextField, {\n        label: props.category,\n        defaultValue: props.info,\n        disabled: \"true\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 14\n      }, this);\n    } else {\n      console.log(\"You shouldn't use this function.\");\n    }\n  };\n\n  function postAccountChange(newUsername, newFirstName, newLastName, newEmail, newHp) {\n    console.log(\"This is posting account changes\");\n    let payload = {\n      username: newUsername,\n      first_name: newFirstName,\n      last_name: newLastName,\n      email: newEmail,\n      hp: newHp\n    };\n    console.log(payload); // let FormData = require(\"form-data\");\n    // let formdata = new FormData();\n    // formdata.append(\"changes\", JSON.stringify(payload));\n    // return axios\n    //   .post(\n    //     `${API_URL}/account/postProfileUpdate`,\n    //     formdata,\n    //     {\n    //       headers: {\n    //         \"Content-Type\": `multipart/form-data; boundary=${formdata._boundary}`,\n    //       },\n    //     }\n    //   )\n    //   .then((response) => {\n    //     console.log(response);\n    //   })\n    //   .catch(() => {\n    //     console.log(\"Failed account change submission\");\n    //   });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: styles.main,\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h3\",\n      align: \"center\",\n      children: \"Edit Account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n      column: \"true\",\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Username\",\n        onChange: e => setUsernameState(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"First Name\",\n        onChange: e => setFirstnameState(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Last Name\",\n        onChange: e => setLastnameState(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Email\",\n        onChange: e => setEmailState(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Contact Number\",\n        onChange: e => setHpState(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EditAccountInfo, {\n        category: \"Role\",\n        info: role_id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EditAccountInfo, {\n        category: \"Account ID\",\n        info: acc_id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EditAccountInfo, {\n        category: \"Branch ID\",\n        info: branch_id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EditAccountInfo, {\n        category: \"Employee ID\",\n        info: employee_id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EditAccountInfo, {\n        category: \"Mgr ID\",\n        info: mgr_id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EditAccountInfo, {\n        category: \"Store ID\",\n        info: store_id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EditAccountInfo, {\n        category: \"Store Type\",\n        info: type_id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      className: styles.buttons,\n      align: \"center\",\n      variant: \"outlined\",\n      color: \"primary\",\n      onClick: () => postAccountChange(usernameState, firstnameState, lastnameState, emailState, hpState),\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n}\n\n_s(EditAccount, \"2HsdoKmy/UJCTbEfv+yh3wcwD38=\", false, function () {\n  return [useStyles];\n});\n\n_c = EditAccount;\nexport default EditAccount;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditAccount\");","map":{"version":3,"sources":["/Users/mac/Documents/SingHealthAuditApp/frontend/src/pages/EditAccount.js"],"names":["React","useState","useEffect","useContext","Typography","Button","Input","TextField","FormGroup","FormControlLabel","axios","Context","Navbar","useStyles","Container","EditAccount","accountState","getAccountInfo","acc_id","branch_id","employee_id","email","username","first_name","last_name","hp","mgr_id","role_id","store_id","type_id","usernameState","setUsernameState","firstnameState","setFirstnameState","lastnameState","setLastnameState","emailState","setEmailState","hpState","setHpState","API_URL","styles","disabledInfo","EditAccountInfo","props","info","includes","category","console","log","postAccountChange","newUsername","newFirstName","newLastName","newEmail","newHp","payload","main","e","target","value","buttons"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\nimport { Typography, Button, Input, TextField, FormGroup, FormControlLabel } from \"@material-ui/core\";\nimport axios from \"axios\";\n\nimport { Context } from \"../Context\";\nimport Navbar from \"../Navbar\";\nimport useStyles from \"../styles\";\nimport { Container } from \"@material-ui/core\";\n\nfunction EditAccount() {\n\n  const {\n    accountState,\n    getAccountInfo\n  } = useContext(Context);\n\n  // All possible account info categories for 3 types of users\n  const {\n    acc_id,\n    branch_id,\n    employee_id,\n    email,\n    username,\n    first_name,\n    last_name,\n    hp,\n    mgr_id,\n    role_id,\n    store_id,\n    type_id,\n  } = accountState;\n\n  const [usernameState, setUsernameState] = useState(username);\n  const [firstnameState, setFirstnameState] = useState(first_name);\n  const [lastnameState, setLastnameState] = useState(last_name);\n  const [emailState, setEmailState] = useState(email);\n  const [hpState, setHpState] = useState(hp);\n\n  useEffect(() => {\n    getAccountInfo();\n  }, []);\n\n  const API_URL = \"http://localhost:8080\";\n  const styles = useStyles();\n  const disabledInfo = [\n    \"Role\", \n    \"Account ID\", \n    \"Employee ID\", \n    \"Branch ID\", \n    \"Mgr ID\", \n    \"Store ID\", \n    \"Store Type\"\n  ];\n\n  const EditAccountInfo = (props) => {\n    if (props.info == null) {\n      return null\n    } else if (disabledInfo.includes(props.category)) {\n      return <TextField \n        label={props.category} \n        defaultValue={props.info} \n        disabled=\"true\"\n      />\n    } else {\n      console.log(\"You shouldn't use this function.\")\n    }\n  }\n\n  function postAccountChange(newUsername, newFirstName, newLastName, newEmail, newHp) {\n    console.log(\"This is posting account changes\");\n    let payload = {\n      username: newUsername,\n      first_name: newFirstName,\n      last_name: newLastName,\n      email: newEmail,\n      hp: newHp,\n    };\n    console.log(payload);\n    // let FormData = require(\"form-data\");\n    // let formdata = new FormData();\n    // formdata.append(\"changes\", JSON.stringify(payload));\n    // return axios\n    //   .post(\n    //     `${API_URL}/account/postProfileUpdate`,\n    //     formdata,\n    //     {\n    //       headers: {\n    //         \"Content-Type\": `multipart/form-data; boundary=${formdata._boundary}`,\n    //       },\n    //     }\n    //   )\n    //   .then((response) => {\n    //     console.log(response);\n    //   })\n    //   .catch(() => {\n    //     console.log(\"Failed account change submission\");\n    //   });\n  }\n\n  return (\n    <main className={styles.main}>\n      <Typography variant=\"h3\" align=\"center\">Edit Account</Typography>\n      <br />\n      <FormGroup column=\"true\">\n        <TextField label=\"Username\" onChange={(e) => setUsernameState(e.target.value)} />\n        <TextField label=\"First Name\" onChange={(e) => setFirstnameState(e.target.value)} />\n        <TextField label=\"Last Name\" onChange={(e) => setLastnameState(e.target.value)} />\n        <TextField label=\"Email\" onChange={(e) => setEmailState(e.target.value)} />\n        <TextField label=\"Contact Number\" onChange={(e) => setHpState(e.target.value)} />\n        <br />\n        <EditAccountInfo category=\"Role\" info={role_id}/>\n        <EditAccountInfo category=\"Account ID\" info={acc_id}/>\n        <EditAccountInfo category=\"Branch ID\" info={branch_id}/>\n        <EditAccountInfo category=\"Employee ID\" info={employee_id} />\n        <EditAccountInfo category=\"Mgr ID\" info={mgr_id}/>\n        <EditAccountInfo category=\"Store ID\" info={store_id}/>\n        <EditAccountInfo category=\"Store Type\" info={type_id}/>\n        <br />\n      </FormGroup>\n      <Button\n        className={styles.buttons}\n        align=\"center\"\n        variant=\"outlined\"\n        color=\"primary\"\n        onClick={() => \n          postAccountChange(\n            usernameState,\n            firstnameState,\n            lastnameState,\n            emailState,\n            hpState,\n          )\n        }\n      >\n        Submit\n      </Button>\n    </main>\n  )\n}\n\nexport default EditAccount;"]},"metadata":{},"sourceType":"module"}