{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Documents/SingHealthAuditApp/frontend/src/pages/Account.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useContext } from \"react\";\nimport { Typography } from \"@material-ui/core\";\nimport axios from \"axios\";\nimport { Context } from \"../Context\";\nimport Navbar from \"../Navbar\";\nimport useStyles from \"../styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Account() {\n  _s();\n\n  const {\n    accountState,\n    getAccountInfo\n  } = useContext(Context); // All possible account info categories for 3 types of users\n\n  const {\n    acc_id,\n    branch_id,\n    employee_id,\n    email,\n    username,\n    first_name,\n    last_name,\n    hp,\n    mgr_id,\n    role_id,\n    store_id,\n    type_id\n  } = accountState;\n  useEffect(() => {\n    getAccountInfo();\n  }, []);\n  const styles = useStyles();\n  const API_URL = \"http://localhost:8080\"; // Used to generate one category of account info\n  // Filter out those empty categories\n\n  const AccountInfo = props => {\n    if (props.info != null) {\n      return /*#__PURE__*/_jsxDEV(Typography, {\n        align: \"center\",\n        children: [props.category, \": \", props.info]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 14\n      }, this);\n    } else {\n      return null;\n    }\n\n    ;\n  };\n\n  function postAccountChange(newUsername, newFirstName, newLastName, newEmail, newHp) {\n    console.log(\"This is posting account changes\");\n    let payload = {\n      username: newUsername,\n      first_name: newFirstName,\n      last_name: newLastName,\n      email: newEmail,\n      hp: newHp\n    };\n\n    let FormData = require(\"form-data\");\n\n    let formdata = new FormData();\n    formdata.append(\"changes\", payload);\n    return axios.post(`${API_URL}/account/postProfileUpdate`, formdata).then(response => {\n      console.log(response);\n    }).catch(() => {\n      console.log(\"Failed FB report submission\");\n    });\n  }\n\n  const myNewUsername = \"IamHannah\";\n  const myNewFirstName = \"Hannah\";\n  const myNewLastName = \"Hannah\";\n  const myNewEmail = \"hannahHAHAHA@gmail.com\";\n  const myNewHp = \"99999999\";\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: styles.main,\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h3\",\n      align: \"center\",\n      children: \"Account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AccountInfo, {\n      category: \"Username\",\n      info: username\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AccountInfo, {\n      category: \"First Name\",\n      info: first_name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AccountInfo, {\n      category: \"Last Name\",\n      info: last_name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AccountInfo, {\n      category: \"Email\",\n      info: email\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AccountInfo, {\n      category: \"Contact Number\",\n      info: hp\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AccountInfo, {\n      category: \"Role\",\n      info: role_id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AccountInfo, {\n      category: \"Account ID\",\n      info: acc_id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AccountInfo, {\n      category: \"Branch ID\",\n      info: branch_id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AccountInfo, {\n      category: \"Employee ID\",\n      info: employee_id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AccountInfo, {\n      category: \"Mgr ID\",\n      info: mgr_id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AccountInfo, {\n      category: \"Store ID\",\n      info: store_id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AccountInfo, {\n      category: \"Store Type\",\n      info: type_id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => postAccountChange(myNewUsername, myNewFirstName, myNewLastName, myNewEmail, myNewHp),\n      children: \"Change Email\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Account, \"awawz72Fx01gsjDqigZCsrWijgg=\", false, function () {\n  return [useStyles];\n});\n\n_c = Account;\nexport default Account;\n\nvar _c;\n\n$RefreshReg$(_c, \"Account\");","map":{"version":3,"sources":["/Users/mac/Documents/SingHealthAuditApp/frontend/src/pages/Account.js"],"names":["React","useEffect","useContext","Typography","axios","Context","Navbar","useStyles","Account","accountState","getAccountInfo","acc_id","branch_id","employee_id","email","username","first_name","last_name","hp","mgr_id","role_id","store_id","type_id","styles","API_URL","AccountInfo","props","info","category","postAccountChange","newUsername","newFirstName","newLastName","newEmail","newHp","console","log","payload","FormData","require","formdata","append","post","then","response","catch","myNewUsername","myNewFirstName","myNewLastName","myNewEmail","myNewHp","main"],"mappings":"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","sourcesContent":["import React, { useEffect, useContext } from \"react\";\nimport { Typography } from \"@material-ui/core\";\nimport axios from \"axios\";\n\nimport { Context } from \"../Context\";\nimport Navbar from \"../Navbar\";\nimport useStyles from \"../styles\";\n\nfunction Account() {\n  const {\n    accountState,\n    getAccountInfo\n  } = useContext(Context);\n\n  // All possible account info categories for 3 types of users\n  const {\n    acc_id,\n    branch_id,\n    employee_id,\n    email,\n    username,\n    first_name,\n    last_name,\n    hp,\n    mgr_id,\n    role_id,\n    store_id,\n    type_id,\n  } = accountState;\n\n  useEffect(() => {\n    getAccountInfo();\n  }, []);\n\n  const styles = useStyles();\n  const API_URL = \"http://localhost:8080\";\n\n  // Used to generate one category of account info\n  // Filter out those empty categories\n  const AccountInfo = (props) => {\n    if (props.info != null) {\n      return <Typography align=\"center\">{props.category}: {props.info}</Typography>;\n    } else {\n      return null;\n    };\n  };\n\n  function postAccountChange(newUsername, newFirstName, newLastName, newEmail, newHp) {\n    console.log(\"This is posting account changes\");\n    let payload = {\n      username: newUsername,\n      first_name: newFirstName,\n      last_name: newLastName,\n      email: newEmail,\n      hp: newHp,\n    };\n    let FormData = require(\"form-data\");\n    let formdata = new FormData();\n    formdata.append(\"changes\", payload);\n    return axios\n      .post(\n        `${API_URL}/account/postProfileUpdate`, formdata\n      )\n      .then((response) => {\n        console.log(response);\n      })\n      .catch(() => {\n        console.log(\"Failed FB report submission\");\n      });\n  }\n\n  const myNewUsername = \"IamHannah\";\n  const myNewFirstName = \"Hannah\";\n  const myNewLastName = \"Hannah\";\n  const myNewEmail = \"hannahHAHAHA@gmail.com\";\n  const myNewHp = \"99999999\";\n\n  return (\n    <main className={styles.main}>\n      <Navbar />\n      <br />\n      <Typography variant=\"h3\" align='center'>Account</Typography>\n      <br />\n      <AccountInfo category=\"Username\" info={username}/>\n      <AccountInfo category=\"First Name\" info={first_name}/>\n      <AccountInfo category=\"Last Name\" info={last_name}/>\n      <br />\n      <AccountInfo category=\"Email\" info={email}/> \n      <AccountInfo category=\"Contact Number\" info={hp}/>\n      <AccountInfo category=\"Role\" info={role_id}/>\n      <br />\n      <AccountInfo category=\"Account ID\" info={acc_id}/>\n      <AccountInfo category=\"Branch ID\" info={branch_id}/>\n      <AccountInfo category=\"Employee ID\" info={employee_id} />\n      <AccountInfo category=\"Mgr ID\" info={mgr_id}/>\n      <AccountInfo category=\"Store ID\" info={store_id}/>\n      <AccountInfo category=\"Store Type\" info={type_id}/>\n      <br />\n\n      <button onClick={() => postAccountChange(\n        myNewUsername,\n        myNewFirstName,\n        myNewLastName,\n        myNewEmail,\n        myNewHp\n      )}>Change Email</button>\n    </main>\n  );\n}\n\nexport default Account;\n"]},"metadata":{},"sourceType":"module"}