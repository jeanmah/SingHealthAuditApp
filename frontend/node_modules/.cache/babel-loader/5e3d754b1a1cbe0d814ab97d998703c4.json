{"ast":null,"code":"var _jsxFileName = \"/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/pages/NonFbChecklist.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext, useEffect, useCallback } from \"react\";\nimport { useParams, Link } from \"react-router-dom\";\nimport Question from \"../components/Question\";\nimport { Context } from \"../Context\";\nimport Loading from \"./Loading\";\nimport Navbar from \"../Navbar\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport Box from \"@material-ui/core/Box\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\"; //styling for the fbchecklist page\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    padding: theme.spacing(4, 0, 10, 0)\n  },\n  list: {\n    width: \"100%\",\n    maxWidth: 800,\n    backgroundColor: theme.palette.background.paper,\n    display: \"flex\",\n    flexDirection: \"column\" // alignItems: \"center\",\n\n  },\n  button: {\n    color: \"#F15A22\",\n    fontWeight: \"medium\",\n    width: \"100%\",\n    // maxWidth: 800,\n    backgroundColor: theme.palette.background.paper,\n    height: 50\n  },\n  header: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(2, 2, 2, 2)\n  },\n  link: {\n    width: \"100%\",\n    maxWidth: 800,\n    backgroundColor: theme.palette.background.paper\n  }\n}));\n\nfunction NonFbChecklist() {\n  _s();\n\n  //use styles from function declared above\n  const classes = useStyles(); //get tenant id from url\n\n  const {\n    tenantId\n  } = useParams(); //Context\n\n  const {\n    getNonFbChecklistQuestions,\n    createNonFbReportState,\n    getUserInfo,\n    nfbReportState,\n    submitNonFbReport\n  } = useContext(Context); //state to update nfb checklist questions\n\n  const [nfbChecklistState, setNonFbChecklistState] = useState();\n  const [tenantName, setTenantName] = useState();\n  useEffect(() => {\n    //function to retrieve questions\n    async function getTenantName() {\n      try {\n        const tenant_name = await getUserInfo(tenantId).then(response => {\n          return response.data.store_name;\n        });\n        console.log(tenant_name);\n        setTenantName(tenant_name);\n      } catch (err) {\n        console.log(err);\n      }\n    }\n\n    getTenantName();\n    getNonFbChecklistQuestions().then(response => {\n      setNonFbChecklistState(response.data);\n      createNonFbReportState(response.data);\n    }).catch(() => {\n      console.log(\"fb checklist retrieval failed\");\n    });\n  }, []);\n\n  const handleSubmit = (tenantid, report) => {\n    submitNonFbReport(tenantid, report);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: nfbChecklistState && tenantName ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        className: classes.header,\n        textAlign: \"center\",\n        boxShadow: 1,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          children: [tenantName, \" F&B Checklist\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        className: classes.root,\n        children: [/*#__PURE__*/_jsxDEV(List, {\n          dense: true,\n          className: classes.list,\n          children: nfbChecklistState.map((question, index) => {\n            const {\n              nfb_qn_id,\n              requirement\n            } = question;\n            const labelId = `checkbox-list-secondary-label-${nfb_qn_id}`;\n            return /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: /*#__PURE__*/_jsxDEV(Question, {\n                fb_qn_id: nfb_qn_id,\n                requirement: requirement,\n                labelId: labelId\n              }, nfb_qn_id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 21\n              }, this)\n            }, void 0, false);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: `/tenant/${tenantId}`,\n          className: classes.link,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            className: classes.button,\n            size: \"small\",\n            onClick: () => {\n              handleSubmit(tenantId, nfbReportState);\n            } // color=\"secondary\"\n            ,\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s(NonFbChecklist, \"08T6IWPDYQdemLtsvchGcfdw7ag=\", false, function () {\n  return [useStyles, useParams];\n});\n\n_c = NonFbChecklist;\nexport default NonFbChecklist;\n\nvar _c;\n\n$RefreshReg$(_c, \"NonFbChecklist\");","map":{"version":3,"sources":["/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/pages/NonFbChecklist.js"],"names":["React","useState","useContext","useEffect","useCallback","useParams","Link","Question","Context","Loading","Navbar","makeStyles","List","Box","Button","Grid","Typography","useStyles","theme","root","display","flexDirection","alignItems","padding","spacing","list","width","maxWidth","backgroundColor","palette","background","paper","button","color","fontWeight","height","header","link","NonFbChecklist","classes","tenantId","getNonFbChecklistQuestions","createNonFbReportState","getUserInfo","nfbReportState","submitNonFbReport","nfbChecklistState","setNonFbChecklistState","tenantName","setTenantName","getTenantName","tenant_name","then","response","data","store_name","console","log","err","catch","handleSubmit","tenantid","report","map","question","index","nfb_qn_id","requirement","labelId"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect, useCallback } from \"react\";\nimport { useParams, Link } from \"react-router-dom\";\nimport Question from \"../components/Question\";\nimport { Context } from \"../Context\";\nimport Loading from \"./Loading\";\nimport Navbar from \"../Navbar\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport Box from \"@material-ui/core/Box\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\n\nimport Typography from \"@material-ui/core/Typography\";\n\n//styling for the fbchecklist page\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    padding: theme.spacing(4, 0, 10, 0),\n  },\n  list: {\n    width: \"100%\",\n    maxWidth: 800,\n    backgroundColor: theme.palette.background.paper,\n    display: \"flex\",\n    flexDirection: \"column\",\n\n    // alignItems: \"center\",\n  },\n  button: {\n    color: \"#F15A22\",\n    fontWeight: \"medium\",\n    width: \"100%\",\n    // maxWidth: 800,\n    backgroundColor: theme.palette.background.paper,\n    height: 50,\n  },\n  header: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(2, 2, 2, 2),\n  },\n  link: {\n    width: \"100%\",\n    maxWidth: 800,\n    backgroundColor: theme.palette.background.paper,\n  },\n}));\n\nfunction NonFbChecklist() {\n  //use styles from function declared above\n  const classes = useStyles();\n  //get tenant id from url\n  const { tenantId } = useParams();\n\n  //Context\n  const {\n    getNonFbChecklistQuestions,\n    createNonFbReportState,\n    getUserInfo,\n    nfbReportState,\n    submitNonFbReport,\n  } = useContext(Context);\n\n  //state to update nfb checklist questions\n  const [nfbChecklistState, setNonFbChecklistState] = useState();\n  const [tenantName, setTenantName] = useState();\n\n  useEffect(() => {\n    //function to retrieve questions\n    async function getTenantName() {\n      try {\n        const tenant_name = await getUserInfo(tenantId).then((response) => {\n          return response.data.store_name;\n        });\n        console.log(tenant_name);\n        setTenantName(tenant_name);\n      } catch (err) {\n        console.log(err);\n      }\n    }\n    getTenantName();\n    getNonFbChecklistQuestions()\n      .then((response) => {\n        setNonFbChecklistState(response.data);\n        createNonFbReportState(response.data);\n      })\n      .catch(() => {\n        console.log(\"fb checklist retrieval failed\");\n      });\n  }, []);\n\n  const handleSubmit = (tenantid, report) => {\n    submitNonFbReport(tenantid, report);\n  };\n\n  return (\n    <>\n      {nfbChecklistState && tenantName ? (\n        <>\n          <Navbar />\n          <Box className={classes.header} textAlign=\"center\" boxShadow={1}>\n            <Typography variant=\"h5\">{tenantName} F&B Checklist</Typography>\n          </Box>\n\n          <Grid container className={classes.root}>\n            <List dense className={classes.list}>\n              {nfbChecklistState.map((question, index) => {\n                const { nfb_qn_id, requirement } = question;\n                const labelId = `checkbox-list-secondary-label-${nfb_qn_id}`;\n                return (\n                  <>\n                    <Question\n                      key={nfb_qn_id}\n                      fb_qn_id={nfb_qn_id}\n                      requirement={requirement}\n                      labelId={labelId}\n                    />\n                  </>\n                );\n              })}\n            </List>\n            <Link to={`/tenant/${tenantId}`} className={classes.link}>\n              <Button\n                className={classes.button}\n                size=\"small\"\n                onClick={() => {\n                  handleSubmit(tenantId, nfbReportState);\n                }}\n                // color=\"secondary\"\n              >\n                Submit\n              </Button>\n            </Link>\n          </Grid>\n        </>\n      ) : (\n        <Loading />\n      )}\n    </>\n  );\n}\n\nexport default NonFbChecklist;\n"]},"metadata":{},"sourceType":"module"}