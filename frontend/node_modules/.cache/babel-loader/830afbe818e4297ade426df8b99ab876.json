{"ast":null,"code":"var _jsxFileName = \"/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/pages/FbChecklist.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport Question from \"../components/Question\";\nimport { Context } from \"../Context\";\nimport Modal from \"../components/Modal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction FbCategory() {\n  _s();\n\n  //get tenant id from url\n  const {\n    tenantId\n  } = useParams(); //Context: Fb Checklist\n\n  const {\n    fbChecklistState\n  } = useContext(Context); //Context: to call update audits function and reset checked values after clicking submit\n\n  const {\n    updateAudit,\n    resetTenantFbChecklist\n  } = useContext(Context); //Context: tenants state\n\n  const {\n    tenantsState\n  } = useContext(Context);\n  const tenantObject = tenantsState.find(tenant => tenant.tenantid === tenantId); //destructure tenantObject\n\n  const {\n    tenantid,\n    tenantName,\n    status,\n    institution\n  } = tenantObject;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"category-head\",\n    children: [fbChecklistState.map((question, index) => {\n      const {\n        id,\n        text\n      } = question;\n      return /*#__PURE__*/_jsxDEV(Modal, {\n        questionId: id,\n        tenantId: tenantId\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 16\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"FB Checklist\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), fbChecklistState.map((question, index) => {\n      const {\n        id,\n        text\n      } = question;\n      return /*#__PURE__*/_jsxDEV(Question, {\n        id: id,\n        text: text,\n        tenantId: tenantId\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 16\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: `/tenant/${tenantId}`,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          updateAudit(tenantId, \"FB\", tenantName, \"unresolved\");\n          resetTenantFbChecklist(tenantId);\n        },\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n\n_s(FbCategory, \"W8auEO4OgfDW4TxcTyhItNe/bp8=\", false, function () {\n  return [useParams];\n});\n\n_c = FbCategory;\nexport default FbCategory;\n\nvar _c;\n\n$RefreshReg$(_c, \"FbCategory\");","map":{"version":3,"sources":["/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/pages/FbChecklist.js"],"names":["React","useState","useContext","Link","useParams","Question","Context","Modal","FbCategory","tenantId","fbChecklistState","updateAudit","resetTenantFbChecklist","tenantsState","tenantObject","find","tenant","tenantid","tenantName","status","institution","map","question","index","id","text"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,SAASC,IAAT,EAAeC,SAAf,QAAgC,kBAAhC;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAASC,OAAT,QAAwB,YAAxB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;;;AAEA,SAASC,UAAT,GAAsB;AAAA;;AACpB;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAeL,SAAS,EAA9B,CAFoB,CAGpB;;AACA,QAAM;AAAEM,IAAAA;AAAF,MAAuBR,UAAU,CAACI,OAAD,CAAvC,CAJoB,CAKpB;;AACA,QAAM;AAAEK,IAAAA,WAAF;AAAeC,IAAAA;AAAf,MAA0CV,UAAU,CAACI,OAAD,CAA1D,CANoB,CAOpB;;AACA,QAAM;AAAEO,IAAAA;AAAF,MAAmBX,UAAU,CAACI,OAAD,CAAnC;AAEA,QAAMQ,YAAY,GAAGD,YAAY,CAACE,IAAb,CAClBC,MAAD,IAAYA,MAAM,CAACC,QAAP,KAAoBR,QADb,CAArB,CAVoB,CAapB;;AACA,QAAM;AAAEQ,IAAAA,QAAF;AAAYC,IAAAA,UAAZ;AAAwBC,IAAAA,MAAxB;AAAgCC,IAAAA;AAAhC,MAAgDN,YAAtD;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA,eACGJ,gBAAgB,CAACW,GAAjB,CAAqB,CAACC,QAAD,EAAWC,KAAX,KAAqB;AACzC,YAAM;AAAEC,QAAAA,EAAF;AAAMC,QAAAA;AAAN,UAAeH,QAArB;AACA,0BAAO,QAAC,KAAD;AAAgB,QAAA,UAAU,EAAEE,EAA5B;AAAgC,QAAA,QAAQ,EAAEf;AAA1C,SAAYe,EAAZ;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAHA,CADH,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANF,EAOGd,gBAAgB,CAACW,GAAjB,CAAqB,CAACC,QAAD,EAAWC,KAAX,KAAqB;AACzC,YAAM;AAAEC,QAAAA,EAAF;AAAMC,QAAAA;AAAN,UAAeH,QAArB;AACA,0BAAO,QAAC,QAAD;AAAsB,QAAA,EAAE,EAAEE,EAA1B;AAA8B,QAAA,IAAI,EAAEC,IAApC;AAA0C,QAAA,QAAQ,EAAEhB;AAApD,SAAec,KAAf;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAHA,CAPH,eAWE;AAAA;AAAA;AAAA;AAAA,YAXF,eAaE,QAAC,IAAD;AAAM,MAAA,EAAE,EAAG,WAAUd,QAAS,EAA9B;AAAA,6BACE;AACE,QAAA,OAAO,EAAE,MAAM;AACbE,UAAAA,WAAW,CAACF,QAAD,EAAW,IAAX,EAAiBS,UAAjB,EAA6B,YAA7B,CAAX;AACAN,UAAAA,sBAAsB,CAACH,QAAD,CAAtB;AACD,SAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAbF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA0BD;;GA1CQD,U;UAEcJ,S;;;KAFdI,U;AA4CT,eAAeA,UAAf","sourcesContent":["import React, { useState, useContext } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport Question from \"../components/Question\";\nimport { Context } from \"../Context\";\nimport Modal from \"../components/Modal\";\n\nfunction FbCategory() {\n  //get tenant id from url\n  const { tenantId } = useParams();\n  //Context: Fb Checklist\n  const { fbChecklistState } = useContext(Context);\n  //Context: to call update audits function and reset checked values after clicking submit\n  const { updateAudit, resetTenantFbChecklist } = useContext(Context);\n  //Context: tenants state\n  const { tenantsState } = useContext(Context);\n\n  const tenantObject = tenantsState.find(\n    (tenant) => tenant.tenantid === tenantId\n  );\n  //destructure tenantObject\n  const { tenantid, tenantName, status, institution } = tenantObject;\n\n  return (\n    <div className=\"category-head\">\n      {fbChecklistState.map((question, index) => {\n        const { id, text } = question;\n        return <Modal key={id} questionId={id} tenantId={tenantId} />;\n      })}\n\n      <h2>FB Checklist</h2>\n      {fbChecklistState.map((question, index) => {\n        const { id, text } = question;\n        return <Question key={index} id={id} text={text} tenantId={tenantId} />;\n      })}\n      <br />\n\n      <Link to={`/tenant/${tenantId}`}>\n        <button\n          onClick={() => {\n            updateAudit(tenantId, \"FB\", tenantName, \"unresolved\");\n            resetTenantFbChecklist(tenantId);\n          }}\n        >\n          Submit\n        </button>\n      </Link>\n    </div>\n  );\n}\n\nexport default FbCategory;\n"]},"metadata":{},"sourceType":"module"}