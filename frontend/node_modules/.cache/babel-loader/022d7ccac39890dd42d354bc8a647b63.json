{"ast":null,"code":"var _jsxFileName = \"/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/pages/AuditReport.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useContext } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport Navbar from \"../Navbar\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Context } from \"../Context\";\nimport Loading from \"./Loading\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  header: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(2, 0, 2, 0)\n  }\n}));\n\nfunction AuditReport() {\n  _s();\n\n  const {\n    reportId\n  } = useParams();\n  const {\n    getReportStats,\n    getReportEntry\n  } = useContext(Context);\n  const classes = useStyles();\n  const [failedEntries, setFailedEntries] = useState();\n  useEffect(() => {\n    async function getResponse() {\n      try {\n        const entryArray = await getReportStats(reportId).then(response => {\n          return response.data.Failed_Entries;\n        }); // console.log(entryArray);\n\n        let entryInfoArray = [];\n\n        for (let i = 0; i < entryArray.length; i++) {\n          // console.log(entryArray[i]);\n          // console.log(reportId);\n          let info = await getReportEntry(reportId, entryArray[i]).then(response => {\n            // console.log(response);\n            return response;\n          });\n          entryInfoArray.push(info);\n        }\n\n        if (entryInfoArray.length === entryArray.length) {\n          console.log(entryInfoArray);\n          setFailedEntries(entryInfoArray);\n        }\n      } catch (err) {\n        console.error(err);\n      }\n    }\n\n    getResponse();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: failedEntries ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        className: classes.header,\n        textAlign: \"center\",\n        boxShadow: 1,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          children: \"Report Non-Compliance Overview\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        className: classes.reportBasicInfo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AuditReport, \"swnb5CoK5K8FgW5XuiceTUC2yxg=\", false, function () {\n  return [useParams, useStyles];\n});\n\n_c = AuditReport;\nexport default AuditReport;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuditReport\");","map":{"version":3,"sources":["/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/pages/AuditReport.js"],"names":["React","useEffect","useState","useContext","useParams","Typography","Box","Navbar","makeStyles","Context","Loading","useStyles","theme","header","backgroundColor","palette","background","paper","padding","spacing","AuditReport","reportId","getReportStats","getReportEntry","classes","failedEntries","setFailedEntries","getResponse","entryArray","then","response","data","Failed_Entries","entryInfoArray","i","length","info","push","console","log","err","error","reportBasicInfo"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport Navbar from \"../Navbar\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Context } from \"../Context\";\nimport Loading from \"./Loading\";\n\nconst useStyles = makeStyles((theme) => ({\n  header: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(2, 0, 2, 0),\n  },\n}));\n\nfunction AuditReport() {\n  const { reportId } = useParams();\n  const { getReportStats, getReportEntry } = useContext(Context);\n  const classes = useStyles();\n  const [failedEntries, setFailedEntries] = useState();\n\n  useEffect(() => {\n    async function getResponse() {\n      try {\n        const entryArray = await getReportStats(reportId).then((response) => {\n          return response.data.Failed_Entries;\n        });\n        // console.log(entryArray);\n\n        let entryInfoArray = [];\n\n        for (let i = 0; i < entryArray.length; i++) {\n          // console.log(entryArray[i]);\n          // console.log(reportId);\n          let info = await getReportEntry(reportId, entryArray[i]).then(\n            (response) => {\n              // console.log(response);\n              return response;\n            }\n          );\n          entryInfoArray.push(info);\n        }\n        if (entryInfoArray.length === entryArray.length) {\n          console.log(entryInfoArray);\n          setFailedEntries(entryInfoArray);\n        }\n      } catch (err) {\n        console.error(err);\n      }\n    }\n    getResponse();\n  }, []);\n\n  return (\n    <div>\n      {failedEntries ? (\n        <>\n          <Navbar />\n          <Box className={classes.header} textAlign=\"center\" boxShadow={1}>\n            <Typography variant=\"h5\">Report Non-Compliance Overview</Typography>\n          </Box>\n          <Box className={classes.reportBasicInfo}></Box>\n        </>\n      ) : (\n        <Loading />\n      )}\n    </div>\n  );\n}\n\nexport default AuditReport;\n"]},"metadata":{},"sourceType":"module"}