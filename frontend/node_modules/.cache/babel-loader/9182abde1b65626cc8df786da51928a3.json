{"ast":null,"code":"var _jsxFileName = \"/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/components/Modal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Context } from \"../Context\";\nimport { FaRegTimesCircle } from \"react-icons/fa\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Modal({\n  questionId,\n  tenantId\n}) {\n  _s();\n\n  //Context: state of modal (whether it is open or not)\n  const {\n    fbChecklistState,\n    closeQuestionModal\n  } = useContext(Context); //state for comments and updating comments\n\n  const {\n    comment,\n    setComment,\n    updateTenantComment\n  } = useContext(Context); //state of displayedComments\n\n  const {\n    tenantsState\n  } = useContext(Context); //handle change in textbox by updating comment state\n\n  const handleChange = event => {\n    console.log(questionId);\n    setComment(event.target.value);\n  }; //handle submit\n\n\n  const handleSubmit = event => {\n    updateTenantComment(tenantId, questionId);\n  };\n\n  const checklistQuestion = fbChecklistState.find(question => {\n    return question.id === questionId;\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      className: `${checklistQuestion.modalOpen ? \"modal-overlay show-modal\" : \"modal-overlay\"}`,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-container\",\n        children: [/*#__PURE__*/_jsxDEV(FaRegTimesCircle, {\n          className: \"modal-closebtn\",\n          onClick: () => {\n            closeQuestionModal(questionId);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Write a Comment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"modal-commentbox\",\n          value: comment,\n          onChange: event => {\n            handleChange(event);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            handleSubmit();\n          },\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false); // document.getElementById(\"portal\")\n}\n\n_s(Modal, \"wnfxOq4KDTyVe7Y6Mj6SP4obVps=\");\n\n_c = Modal;\nexport default Modal;\n\nvar _c;\n\n$RefreshReg$(_c, \"Modal\");","map":{"version":3,"sources":["/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/components/Modal.js"],"names":["React","useState","useContext","ReactDOM","Context","FaRegTimesCircle","Modal","questionId","tenantId","fbChecklistState","closeQuestionModal","comment","setComment","updateTenantComment","tenantsState","handleChange","event","console","log","target","value","handleSubmit","checklistQuestion","find","question","id","modalOpen"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,OAAT,QAAwB,YAAxB;AACA,SAASC,gBAAT,QAAiC,gBAAjC;;;;AAEA,SAASC,KAAT,CAAe;AAAEC,EAAAA,UAAF;AAAcC,EAAAA;AAAd,CAAf,EAAyC;AAAA;;AACvC;AACA,QAAM;AAAEC,IAAAA,gBAAF;AAAoBC,IAAAA;AAApB,MAA2CR,UAAU,CAACE,OAAD,CAA3D,CAFuC,CAGvC;;AACA,QAAM;AAAEO,IAAAA,OAAF;AAAWC,IAAAA,UAAX;AAAuBC,IAAAA;AAAvB,MAA+CX,UAAU,CAACE,OAAD,CAA/D,CAJuC,CAKvC;;AACA,QAAM;AAAEU,IAAAA;AAAF,MAAmBZ,UAAU,CAACE,OAAD,CAAnC,CANuC,CAQvC;;AACA,QAAMW,YAAY,GAAIC,KAAD,IAAW;AAC9BC,IAAAA,OAAO,CAACC,GAAR,CAAYX,UAAZ;AACAK,IAAAA,UAAU,CAACI,KAAK,CAACG,MAAN,CAAaC,KAAd,CAAV;AACD,GAHD,CATuC,CAavC;;;AACA,QAAMC,YAAY,GAAIL,KAAD,IAAW;AAC9BH,IAAAA,mBAAmB,CAACL,QAAD,EAAWD,UAAX,CAAnB;AACD,GAFD;;AAIA,QAAMe,iBAAiB,GAAGb,gBAAgB,CAACc,IAAjB,CAAuBC,QAAD,IAAc;AAC5D,WAAOA,QAAQ,CAACC,EAAT,KAAgBlB,UAAvB;AACD,GAFyB,CAA1B;AAIA,sBACE;AAAA,2BACE;AACE,MAAA,SAAS,EAAG,GACVe,iBAAiB,CAACI,SAAlB,GACI,0BADJ,GAEI,eACL,EALH;AAAA,6BAOE;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA,gCACE,QAAC,gBAAD;AACE,UAAA,SAAS,EAAC,gBADZ;AAEE,UAAA,OAAO,EAAE,MAAM;AACbhB,YAAAA,kBAAkB,CAACH,UAAD,CAAlB;AACD;AAJH;AAAA;AAAA;AAAA;AAAA,gBADF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPF,eAQE;AACE,UAAA,SAAS,EAAC,kBADZ;AAEE,UAAA,KAAK,EAAEI,OAFT;AAGE,UAAA,QAAQ,EAAGK,KAAD,IAAW;AACnBD,YAAAA,YAAY,CAACC,KAAD,CAAZ;AACD;AALH;AAAA;AAAA;AAAA;AAAA,gBARF,eAeE;AACE,UAAA,OAAO,EAAE,MAAM;AACbK,YAAAA,YAAY;AACb,WAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAfF;AAAA;AAAA;AAAA;AAAA;AAAA;AAPF;AAAA;AAAA;AAAA;AAAA;AADF,mBADF,CAtBuC,CA0DvC;AACD;;GA3DQf,K;;KAAAA,K;AA6DT,eAAeA,KAAf","sourcesContent":["import React, { useState, useContext } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Context } from \"../Context\";\nimport { FaRegTimesCircle } from \"react-icons/fa\";\n\nfunction Modal({ questionId, tenantId }) {\n  //Context: state of modal (whether it is open or not)\n  const { fbChecklistState, closeQuestionModal } = useContext(Context);\n  //state for comments and updating comments\n  const { comment, setComment, updateTenantComment } = useContext(Context);\n  //state of displayedComments\n  const { tenantsState } = useContext(Context);\n\n  //handle change in textbox by updating comment state\n  const handleChange = (event) => {\n    console.log(questionId);\n    setComment(event.target.value);\n  };\n  //handle submit\n  const handleSubmit = (event) => {\n    updateTenantComment(tenantId, questionId);\n  };\n\n  const checklistQuestion = fbChecklistState.find((question) => {\n    return question.id === questionId;\n  });\n\n  return (\n    <>\n      <section\n        className={`${\n          checklistQuestion.modalOpen\n            ? \"modal-overlay show-modal\"\n            : \"modal-overlay\"\n        }`}\n      >\n        <div className=\"modal-container\">\n          <FaRegTimesCircle\n            className=\"modal-closebtn\"\n            onClick={() => {\n              closeQuestionModal(questionId);\n            }}\n          />\n          <div>Write a Comment</div>\n          <textarea\n            className=\"modal-commentbox\"\n            value={comment}\n            onChange={(event) => {\n              handleChange(event);\n            }}\n          />\n          <button\n            onClick={() => {\n              handleSubmit();\n            }}\n          >\n            Submit\n          </button>\n        </div>\n      </section>\n    </>\n  );\n\n  // document.getElementById(\"portal\")\n}\n\nexport default Modal;\n"]},"metadata":{},"sourceType":"module"}