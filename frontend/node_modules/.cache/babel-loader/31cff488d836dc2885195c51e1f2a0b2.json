{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Documents/SingHealthAuditApp/frontend/src/pages/Account.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from \"react\";\nimport { Typography, Button, FormGroup, FormControlLabel, Checkbox } from '@material-ui/core';\nimport { Context } from '../Context';\nimport Navbar from \"../Navbar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Account() {\n  _s();\n\n  const {\n    accountState,\n    setAccountState,\n    getAccountInfo\n  } = useContext(Context);\n  const {\n    employee_id,\n    username,\n    first_name,\n    last_name,\n    email\n  } = accountState;\n  useEffect(() => {\n    //function to retrieve questions\n    getAccountInfo();\n  }, []);\n  const [checkboxState, setCheckboxState] = React.useState({\n    checkedA: true,\n    checkedB: true,\n    checkedF: true,\n    checkedG: true\n  });\n\n  const handleCheckboxChange = event => {\n    setCheckboxState({ ...checkboxState,\n      [event.target.name]: event.target.checked\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Employee ID: \", employee_id]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Username: \", username]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"First Name: \", first_name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Second Name: \", last_name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Email: \", email]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h1\",\n      children: \"Hello Material UI!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h2\",\n      children: \"Hello Material UI!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h3\",\n      children: \"Hello Material UI!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"outlined\",\n      children: \"Outlined Button\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"outlined\",\n      color: \"primary\",\n      children: \"Primary Outlined Button\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"outlined\",\n      color: \"secondary\",\n      children: \"Secondary Outlined Button\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"outlined\",\n      disabled: true,\n      children: \"Disabled Outlined Button\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n      row: true,\n      children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n        control: /*#__PURE__*/_jsxDEV(Checkbox, {\n          checked: checkboxState.checkedA,\n          onChange: handleCheckboxChange,\n          name: \"checkedA\",\n          color: \"primary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this),\n        label: \"primary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n        control: /*#__PURE__*/_jsxDEV(Checkbox, {\n          checked: checkboxState.checkedB,\n          onChange: handleCheckboxChange,\n          name: \"checkedB\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this),\n        label: \"secondary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Account, \"SXVnaY1ZUlFNcCeRlOmQyGtjdsc=\");\n\n_c = Account;\nexport default Account;\n\nvar _c;\n\n$RefreshReg$(_c, \"Account\");","map":{"version":3,"sources":["/Users/mac/Documents/SingHealthAuditApp/frontend/src/pages/Account.js"],"names":["React","useState","useEffect","useContext","Typography","Button","FormGroup","FormControlLabel","Checkbox","Context","Navbar","Account","accountState","setAccountState","getAccountInfo","employee_id","username","first_name","last_name","email","checkboxState","setCheckboxState","checkedA","checkedB","checkedF","checkedG","handleCheckboxChange","event","target","name","checked"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\nimport { Typography, Button, FormGroup, FormControlLabel, Checkbox } from '@material-ui/core';\n\nimport { Context } from '../Context';\nimport Navbar from \"../Navbar\";\n\nfunction Account() {\n  const {\n    accountState,\n    setAccountState,\n    getAccountInfo\n  } = useContext(Context);\n\n  const {\n    employee_id,\n    username,\n    first_name,\n    last_name,\n    email,\n  } = accountState;\n\n  useEffect(() => {\n    //function to retrieve questions\n    getAccountInfo();\n  }, []);\n\n  const [checkboxState, setCheckboxState] = React.useState({\n    checkedA: true,\n    checkedB: true,\n    checkedF: true,\n    checkedG: true,\n  });\n\n  const handleCheckboxChange = (event) => {\n    setCheckboxState({ ...checkboxState, [event.target.name]: event.target.checked });\n  };\n\n  return (\n    <main>\n      <Navbar />\n      <h2>Account</h2>\n      <div>Employee ID: {employee_id}</div>\n      <div>Username: {username}</div>\n      <div>First Name: {first_name}</div>\n      <div>Second Name: {last_name}</div>\n      <div>Email: {email}</div>\n\n      <Typography variant=\"h1\">Hello Material UI!</Typography>\n      <Typography variant=\"h2\">Hello Material UI!</Typography>\n      <Typography variant=\"h3\">Hello Material UI!</Typography>\n\n      <Button variant=\"outlined\">Outlined Button</Button>\n      <Button variant=\"outlined\" color=\"primary\">Primary Outlined Button</Button>\n      <Button variant=\"outlined\" color=\"secondary\">Secondary Outlined Button</Button>\n      <Button variant=\"outlined\" disabled>Disabled Outlined Button</Button>\n\n      <FormGroup row>\n        <FormControlLabel\n          control={\n            <Checkbox \n              checked={checkboxState.checkedA} \n              onChange={handleCheckboxChange}\n              name='checkedA'\n              color='primary'\n            />\n          }\n          label='primary'\n        />\n        <FormControlLabel\n          control={\n            <Checkbox \n              checked={checkboxState.checkedB} \n              onChange={handleCheckboxChange}\n              name='checkedB'\n            />\n          }\n          label='secondary'\n        />\n      </FormGroup>\n\n    </main>\n  );\n}\n\nexport default Account;\n"]},"metadata":{},"sourceType":"module"}