{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Documents/SingHealthAuditApp/frontend/src/components/ChatEntriesCard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { Context } from '../Context';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Chat from \"../pages/Chat\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ChatEntriesCards = () => {\n  _s();\n\n  const {\n    chatEntriesOfUserState,\n    setChatEntriesOfUserState\n  } = useContext(Context);\n  console.log(\"chatEntries: \" + chatEntriesOfUserState);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: () => {\n      if (Object.keys(chatEntriesOfUserState).length === 0) {\n        return /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: /*#__PURE__*/_jsxDEV(AccordionDetails, {\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              children: \"No message.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 20,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 13\n        }, this);\n      } else {\n        chatEntriesOfUserState.map((entry, index) => {\n          //console.log(\"chatEntry1: \" + chatEntriesOfUserState[0]);\n          return /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: /*#__PURE__*/_jsxDEV(AccordionDetails, {\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [\"Chat Entry ID: \", entry.chat_entry_id]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 33,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [\"Date: \", entry.date]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 34,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [\"Message Body: \", entry.messageBody]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 35,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [\"Sender ID: \", entry.sender_id]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 36,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [\"Subject:\", entry.subject]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 37,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [\"Time: \", entry.time]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 38,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [\"Attachments: \", entry.attachments]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 39,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 40,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 32,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 15\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, this);\n        });\n      }\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ChatEntriesCards, \"whZ+qeWAD3NiwUWIw186Vjo8r/8=\");\n\n_c = ChatEntriesCards;\nexport default ChatEntriesCards;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatEntriesCards\");","map":{"version":3,"sources":["/Users/mac/Documents/SingHealthAuditApp/frontend/src/components/ChatEntriesCard.js"],"names":["React","useContext","useEffect","useState","Context","Accordion","AccordionSummary","AccordionDetails","Typography","ExpandMoreIcon","Chat","ChatEntriesCards","chatEntriesOfUserState","setChatEntriesOfUserState","console","log","Object","keys","length","map","entry","index","chat_entry_id","date","messageBody","sender_id","subject","time","attachments"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,SAASC,OAAT,QAAwB,YAAxB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,cAAP,MAA2B,+BAA3B;AACA,OAAOC,IAAP,MAAiB,eAAjB;;;AAEA,MAAMC,gBAAgB,GAAG,MAAM;AAAA;;AAC7B,QAAM;AAAEC,IAAAA,sBAAF;AAA0BC,IAAAA;AAA1B,MAAwDZ,UAAU,CAACG,OAAD,CAAxE;AACAU,EAAAA,OAAO,CAACC,GAAR,CAAY,kBAAkBH,sBAA9B;AACA,sBACE;AAAA,cACG,MAAM;AACL,UAAII,MAAM,CAACC,IAAP,CAAYL,sBAAZ,EAAoCM,MAApC,KAA+C,CAAnD,EAAsD;AACpD,4BACE,QAAC,KAAD,CAAO,QAAP;AAAA,iCACE,QAAC,gBAAD;AAAA,mCACE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF;AASD,OAVD,MAUO;AACLN,QAAAA,sBAAsB,CAACO,GAAvB,CAA2B,CAACC,KAAD,EAAQC,KAAR,KAAkB;AAC7C;AACA,8BACE,QAAC,KAAD,CAAO,QAAP;AAAA,mCACE,QAAC,gBAAD;AAAA,qCACI,QAAC,UAAD;AAAA,wCACE;AAAA,gDAAqBD,KAAK,CAACE,aAA3B;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE;AAAA,uCAAYF,KAAK,CAACG,IAAlB;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFF,eAGE;AAAA,+CAAoBH,KAAK,CAACI,WAA1B;AAAA;AAAA;AAAA;AAAA;AAAA,wBAHF,eAIE;AAAA,4CAAiBJ,KAAK,CAACK,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA,wBAJF,eAKE;AAAA,yCAAcL,KAAK,CAACM,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA,wBALF,eAME;AAAA,uCAAYN,KAAK,CAACO,IAAlB;AAAA;AAAA;AAAA;AAAA;AAAA,wBANF,eAOE;AAAA,8CAAmBP,KAAK,CAACQ,WAAzB;AAAA;AAAA;AAAA;AAAA;AAAA,wBAPF,eAQE;AAAA;AAAA;AAAA;AAAA,wBARF;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADF,aAAqBP,KAArB;AAAA;AAAA;AAAA;AAAA,kBADF;AAgBH,SAlBG;AAkBD;AAAC;AA/BN;AAAA;AAAA;AAAA;AAAA,UADF;AAmCD,CAtCD;;GAAMV,gB;;KAAAA,gB;AAwCN,eAAeA,gBAAf","sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\nimport { Context } from '../Context';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Chat from \"../pages/Chat\";\n\nconst ChatEntriesCards = () => {\n  const { chatEntriesOfUserState, setChatEntriesOfUserState } = useContext(Context);\n  console.log(\"chatEntries: \" + chatEntriesOfUserState);\n  return (\n    <div>\n      {() => {\n        if (Object.keys(chatEntriesOfUserState).length === 0) {\n          return (\n            <React.Fragment>\n              <AccordionDetails>\n                <Typography>\n                  No message.\n                </Typography>\n              </AccordionDetails>\n            </React.Fragment>\n          )\n        } else {\n          chatEntriesOfUserState.map((entry, index) => {\n          //console.log(\"chatEntry1: \" + chatEntriesOfUserState[0]);\n          return (\n            <React.Fragment key={index}>\n              <AccordionDetails>\n                  <Typography>\n                    <div>Chat Entry ID: {entry.chat_entry_id}</div>\n                    <div>Date: {entry.date}</div>\n                    <div>Message Body: {entry.messageBody}</div>\n                    <div>Sender ID: {entry.sender_id}</div>\n                    <div>Subject:{entry.subject}</div>\n                    <div>Time: {entry.time}</div>\n                    <div>Attachments: {entry.attachments}</div>\n                    <br />\n                  </Typography>\n                </AccordionDetails>\n            </React.Fragment>\n        );\n      })}}}\n    </div>\n  )\n}\n\nexport default ChatEntriesCards;"]},"metadata":{},"sourceType":"module"}