{"ast":null,"code":"var _jsxFileName = \"/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/Context.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, createContext } from \"react\";\nimport { fbChecklist } from \"./data\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Context = /*#__PURE__*/createContext();\nexport const ContextProvider = props => {\n  _s();\n\n  const [checklist, setChecklist] = useState(fbChecklist); //state to keep track of tenant score\n\n  const [score, setScore] = useState(0); //state to check if modal is open\n\n  const [modalOpen, setModalOpen] = useState(false); //function to increase score state\n\n  const increaseScore = () => {\n    setScore(prevScore => {\n      return prevScore + 1;\n    });\n  }; //functions to change modalOpen state\n\n\n  const openModal = () => {\n    setModalOpen(true);\n  };\n\n  const closeModal = () => {\n    setModalOpen(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Context.Provider, {\n    value: {\n      score,\n      setScore,\n      increaseScore,\n      modalOpen,\n      setModalOpen,\n      openModal,\n      closeModal\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ContextProvider, \"I+gbZtCDlsCWm09eZBirWQsyXts=\");\n\n_c = ContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContextProvider\");","map":{"version":3,"sources":["/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/Context.js"],"names":["React","useState","createContext","fbChecklist","Context","ContextProvider","props","checklist","setChecklist","score","setScore","modalOpen","setModalOpen","increaseScore","prevScore","openModal","closeModal","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,aAA1B,QAA+C,OAA/C;AACA,SAASC,WAAT,QAA4B,QAA5B;;AAEA,OAAO,MAAMC,OAAO,gBAAGF,aAAa,EAA7B;AAEP,OAAO,MAAMG,eAAe,GAAIC,KAAD,IAAW;AAAA;;AACxC,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAACE,WAAD,CAA1C,CADwC,CAExC;;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,CAAD,CAAlC,CAHwC,CAIxC;;AACA,QAAM,CAACU,SAAD,EAAYC,YAAZ,IAA4BX,QAAQ,CAAC,KAAD,CAA1C,CALwC,CAMxC;;AACA,QAAMY,aAAa,GAAG,MAAM;AAC1BH,IAAAA,QAAQ,CAAEI,SAAD,IAAe;AACtB,aAAOA,SAAS,GAAG,CAAnB;AACD,KAFO,CAAR;AAGD,GAJD,CAPwC,CAYxC;;;AACA,QAAMC,SAAS,GAAG,MAAM;AACtBH,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACD,GAFD;;AAGA,QAAMI,UAAU,GAAG,MAAM;AACvBJ,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,GAFD;;AAIA,sBACE,QAAC,OAAD,CAAS,QAAT;AACE,IAAA,KAAK,EAAE;AACLH,MAAAA,KADK;AAELC,MAAAA,QAFK;AAGLG,MAAAA,aAHK;AAILF,MAAAA,SAJK;AAKLC,MAAAA,YALK;AAMLG,MAAAA,SANK;AAOLC,MAAAA;AAPK,KADT;AAAA,cAWGV,KAAK,CAACW;AAXT;AAAA;AAAA;AAAA;AAAA,UADF;AAeD,CAnCM;;GAAMZ,e;;KAAAA,e","sourcesContent":["import React, { useState, createContext } from \"react\";\nimport { fbChecklist } from \"./data\";\n\nexport const Context = createContext();\n\nexport const ContextProvider = (props) => {\n  const [checklist, setChecklist] = useState(fbChecklist);\n  //state to keep track of tenant score\n  const [score, setScore] = useState(0);\n  //state to check if modal is open\n  const [modalOpen, setModalOpen] = useState(false);\n  //function to increase score state\n  const increaseScore = () => {\n    setScore((prevScore) => {\n      return prevScore + 1;\n    });\n  };\n  //functions to change modalOpen state\n  const openModal = () => {\n    setModalOpen(true);\n  };\n  const closeModal = () => {\n    setModalOpen(false);\n  };\n\n  return (\n    <Context.Provider\n      value={{\n        score,\n        setScore,\n        increaseScore,\n        modalOpen,\n        setModalOpen,\n        openModal,\n        closeModal,\n      }}\n    >\n      {props.children}\n    </Context.Provider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}