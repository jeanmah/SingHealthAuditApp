{"ast":null,"code":"var _jsxFileName = \"/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/pages/FbChecklist.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport Question from \"../components/Question\";\nimport { Context } from \"../Context\";\nimport Modal from \"../components/Modal\";\nimport Navbar from \"../Navbar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction FbCategory() {\n  _s();\n\n  //get tenant id from url\n  const {\n    tenantId\n  } = useParams(); //Context: Fb Checklist\n\n  const {\n    fbChecklistState,\n    getFbChecklistQuestions\n  } = useContext(Context); //Context: to call update audits function and reset checked values after clicking submit\n\n  const {\n    updateAudit,\n    resetTenantFbChecklist\n  } = useContext(Context); //Context: tenants state\n\n  const {\n    tenantsState\n  } = useContext(Context);\n  console.log(tenantId);\n  getFbChecklistQuestions(\"FB\").then(response => {\n    console.log(response);\n    setFbChecklistState(response.data);\n  }).catch(() => {\n    console.log(\"failed to retrieve fbchecklist\");\n  }); // const tenantObject = tenantsState.find(\n  //   (tenant) => tenant.tenantid === tenantId\n  // );\n  // //destructure tenantObject\n  // const { tenantid, tenantName, status, institution } = tenantObject;\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"category-head\",\n      children: [fbChecklistState.map(question => {\n        const {\n          fb_qn_id\n        } = question;\n        return /*#__PURE__*/_jsxDEV(Modal, {\n          questionId: fb_qn_id,\n          tenantId: tenantId\n        }, fb_qn_id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"FB Checklist\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), fbChecklistState.map((question, index) => {\n        const {\n          fb_qn_id,\n          requirement\n        } = question;\n        return /*#__PURE__*/_jsxDEV(Question, {\n          id: fb_qn_id,\n          requirement: requirement,\n          tenantId: tenantId\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: `/tenant/${tenantId}`,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            updateAudit(tenantId, \"FB\", tenantName, \"unresolved\");\n            resetTenantFbChecklist(tenantId);\n          },\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(FbCategory, \"EhGnL4vYlVCW/ND5xh+0tgoCTp0=\", false, function () {\n  return [useParams];\n});\n\n_c = FbCategory;\nexport default FbCategory;\n\nvar _c;\n\n$RefreshReg$(_c, \"FbCategory\");","map":{"version":3,"sources":["/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/pages/FbChecklist.js"],"names":["React","useState","useContext","Link","useParams","Question","Context","Modal","Navbar","FbCategory","tenantId","fbChecklistState","getFbChecklistQuestions","updateAudit","resetTenantFbChecklist","tenantsState","console","log","then","response","setFbChecklistState","data","catch","map","question","fb_qn_id","index","requirement","tenantName"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,SAASC,IAAT,EAAeC,SAAf,QAAgC,kBAAhC;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAASC,OAAT,QAAwB,YAAxB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,MAAP,MAAmB,WAAnB;;;;AAEA,SAASC,UAAT,GAAsB;AAAA;;AACpB;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAeN,SAAS,EAA9B,CAFoB,CAGpB;;AACA,QAAM;AAAEO,IAAAA,gBAAF;AAAoBC,IAAAA;AAApB,MAAgDV,UAAU,CAACI,OAAD,CAAhE,CAJoB,CAKpB;;AACA,QAAM;AAAEO,IAAAA,WAAF;AAAeC,IAAAA;AAAf,MAA0CZ,UAAU,CAACI,OAAD,CAA1D,CANoB,CAOpB;;AACA,QAAM;AAAES,IAAAA;AAAF,MAAmBb,UAAU,CAACI,OAAD,CAAnC;AAEAU,EAAAA,OAAO,CAACC,GAAR,CAAYP,QAAZ;AAEAE,EAAAA,uBAAuB,CAAC,IAAD,CAAvB,CACGM,IADH,CACSC,QAAD,IAAc;AAClBH,IAAAA,OAAO,CAACC,GAAR,CAAYE,QAAZ;AACAC,IAAAA,mBAAmB,CAACD,QAAQ,CAACE,IAAV,CAAnB;AACD,GAJH,EAKGC,KALH,CAKS,MAAM;AACXN,IAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ;AACD,GAPH,EAZoB,CAqBpB;AACA;AACA;AACA;AACA;;AAEA,sBACE;AAAA,4BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,iBACGN,gBAAgB,CAACY,GAAjB,CAAsBC,QAAD,IAAc;AAClC,cAAM;AAAEC,UAAAA;AAAF,YAAeD,QAArB;AACA,4BACE,QAAC,KAAD;AAAsB,UAAA,UAAU,EAAEC,QAAlC;AAA4C,UAAA,QAAQ,EAAEf;AAAtD,WAAYe,QAAZ;AAAA;AAAA;AAAA;AAAA,gBADF;AAGD,OALA,CADH,eAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARF,EASGd,gBAAgB,CAACY,GAAjB,CAAqB,CAACC,QAAD,EAAWE,KAAX,KAAqB;AACzC,cAAM;AAAED,UAAAA,QAAF;AAAYE,UAAAA;AAAZ,YAA4BH,QAAlC;AACA,4BACE,QAAC,QAAD;AAEE,UAAA,EAAE,EAAEC,QAFN;AAGE,UAAA,WAAW,EAAEE,WAHf;AAIE,UAAA,QAAQ,EAAEjB;AAJZ,WACOgB,KADP;AAAA;AAAA;AAAA;AAAA,gBADF;AAQD,OAVA,CATH,eAoBE;AAAA;AAAA;AAAA;AAAA,cApBF,eAsBE,QAAC,IAAD;AAAM,QAAA,EAAE,EAAG,WAAUhB,QAAS,EAA9B;AAAA,+BACE;AACE,UAAA,OAAO,EAAE,MAAM;AACbG,YAAAA,WAAW,CAACH,QAAD,EAAW,IAAX,EAAiBkB,UAAjB,EAA6B,YAA7B,CAAX;AACAd,YAAAA,sBAAsB,CAACJ,QAAD,CAAtB;AACD,WAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAtBF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAsCD;;GAjEQD,U;UAEcL,S;;;KAFdK,U;AAmET,eAAeA,UAAf","sourcesContent":["import React, { useState, useContext } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport Question from \"../components/Question\";\nimport { Context } from \"../Context\";\nimport Modal from \"../components/Modal\";\nimport Navbar from \"../Navbar\";\n\nfunction FbCategory() {\n  //get tenant id from url\n  const { tenantId } = useParams();\n  //Context: Fb Checklist\n  const { fbChecklistState, getFbChecklistQuestions } = useContext(Context);\n  //Context: to call update audits function and reset checked values after clicking submit\n  const { updateAudit, resetTenantFbChecklist } = useContext(Context);\n  //Context: tenants state\n  const { tenantsState } = useContext(Context);\n\n  console.log(tenantId);\n\n  getFbChecklistQuestions(\"FB\")\n    .then((response) => {\n      console.log(response);\n      setFbChecklistState(response.data);\n    })\n    .catch(() => {\n      console.log(\"failed to retrieve fbchecklist\");\n    });\n\n  // const tenantObject = tenantsState.find(\n  //   (tenant) => tenant.tenantid === tenantId\n  // );\n  // //destructure tenantObject\n  // const { tenantid, tenantName, status, institution } = tenantObject;\n\n  return (\n    <>\n      <Navbar />\n      <div className=\"category-head\">\n        {fbChecklistState.map((question) => {\n          const { fb_qn_id } = question;\n          return (\n            <Modal key={fb_qn_id} questionId={fb_qn_id} tenantId={tenantId} />\n          );\n        })}\n\n        <h2>FB Checklist</h2>\n        {fbChecklistState.map((question, index) => {\n          const { fb_qn_id, requirement } = question;\n          return (\n            <Question\n              key={index}\n              id={fb_qn_id}\n              requirement={requirement}\n              tenantId={tenantId}\n            />\n          );\n        })}\n        <br />\n\n        <Link to={`/tenant/${tenantId}`}>\n          <button\n            onClick={() => {\n              updateAudit(tenantId, \"FB\", tenantName, \"unresolved\");\n              resetTenantFbChecklist(tenantId);\n            }}\n          >\n            Submit\n          </button>\n        </Link>\n      </div>\n    </>\n  );\n}\n\nexport default FbCategory;\n"]},"metadata":{},"sourceType":"module"}