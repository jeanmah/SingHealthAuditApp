{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Documents/SingHealthAuditApp/frontend/src/components/testJwt/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component, useState } from \"react\";\nimport { Grid, Link, Paper, CssBaseline, Box, Typography, Avatar, Button, TextField, FormGroup, FormControlLabel, Checkbox } from \"@material-ui/core\";\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport AuthenticationService from \"../../AuthenticationService\";\nimport useStyles from '../../../src/styles';\nimport { useHistory } from \"react-router\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Login() {\n  _s();\n\n  const [usernameState, setUsernameState] = useState(\"\");\n  const [passwordState, setPasswordState] = useState(\"\");\n  const [hasLoginFailedState, setHasLoginFailedState] = useState(false);\n  const [showSuccessMessageState, setShowSuccessMessageState] = useState(false);\n  const styles = useStyles();\n  const history = useHistory();\n\n  function loginClicked() {\n    console.log(usernameState);\n    console.log(passwordState);\n    AuthenticationService.executeJwtAuthenticationService(usernameState, passwordState).then(response => {\n      console.log(response);\n      console.log(response.data);\n      AuthenticationService.registerSuccessfulLoginForJwt(usernameState, response.data.token);\n\n      if (response.data.accountType == \"Auditor\") {\n        history.push(`/home/a`);\n      } else if (response.data.accountType == \"Tenant\") {\n        history.push(`/home/t`);\n      } else if (response.data.accountType == \"Manager\") {\n        history.push(`/home/m`);\n      }\n    }).catch(() => {\n      setShowSuccessMessageState(false);\n      setHasLoginFailedState(true);\n    });\n  }\n\n  ;\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    component: \"main\",\n    className: styles.root,\n    children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: false,\n      sm: 4,\n      md: 7,\n      className: styles.image\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      sm: 8,\n      md: 5,\n      component: Paper,\n      elevation: 6,\n      square: true,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.paper,\n        children: [/*#__PURE__*/_jsxDEV(Avatar, {\n          className: styles.avatar,\n          children: /*#__PURE__*/_jsxDEV(LockOutlinedIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          component: \"h1\",\n          variant: \"h5\",\n          children: \"Sign in\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: styles.form,\n          noValidate: true,\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            variant: \"outlined\",\n            margin: \"normal\",\n            required: true,\n            fullWidth: true,\n            id: \"email\",\n            label: \"Email Address\",\n            name: \"email\",\n            autoComplete: \"email\",\n            autoFocus: true,\n            value: usernameState,\n            onChange: e => setUsernameState(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            variant: \"outlined\",\n            margin: \"normal\",\n            required: true,\n            fullWidth: true,\n            name: \"password\",\n            label: \"Password\",\n            type: \"password\",\n            id: \"password\",\n            autoComplete: \"current-password\",\n            value: passwordState,\n            onChange: e => setPasswordState(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n            control: /*#__PURE__*/_jsxDEV(Checkbox, {\n              value: \"remember\",\n              color: \"primary\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 24\n            }, this),\n            label: \"Remember me\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            fullWidth: true,\n            variant: \"contained\",\n            color: \"primary\",\n            className: styles.submit,\n            onClick: () => loginClicked(),\n            children: \"Sign In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: true,\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                href: \"#\",\n                variant: \"body2\",\n                children: \"Forgot password?\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                href: \"#\",\n                variant: \"body2\",\n                children: \"Don't have an account? Sign Up\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Login, \"4/L2uVy6mpoMfIdR8qqWaV0JjuU=\", false, function () {\n  return [useStyles, useHistory];\n});\n\n_c = Login;\n\nclass LoginComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: \"\",\n      password: \"\",\n      hasLoginFailed: false,\n      showSuccessMessage: false\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.loginClicked = this.loginClicked.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  loginClicked() {\n    console.log(this.state.username);\n    console.log(this.state.password);\n    AuthenticationService.executeJwtAuthenticationService(this.state.username, this.state.password).then(response => {\n      console.log(response);\n      console.log(response.data);\n      AuthenticationService.registerSuccessfulLoginForJwt(this.state.username, response.data.token);\n\n      if (response.data.accountType == \"Auditor\") {\n        this.props.history.push(`/home/a`);\n      } else if (response.data.accountType == \"Tenant\") {\n        this.props.history.push(`/home/t`);\n      } else if (response.data.accountType == \"Manager\") {\n        this.props.history.push(`/home/m`);\n      }\n    }).catch(() => {\n      this.setState({\n        showSuccessMessage: false\n      });\n      this.setState({\n        hasLoginFailed: true\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [this.state.hasLoginFailed && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"alert alert-warning\",\n          children: \"Invalid Credentials\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 13\n        }, this), this.state.showSuccessMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Login Sucessful\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 45\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          variant: \"outlined\",\n          margin: \"normal\",\n          required: true,\n          fullWidth: true,\n          id: \"email\",\n          label: \"Username\",\n          name: \"username\",\n          autoComplete: \"username\",\n          autoFocus: true,\n          value: this.state.username,\n          onChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          variant: \"outlined\",\n          margin: \"normal\",\n          required: true,\n          fullWidth: true,\n          name: \"password\",\n          label: \"Password\",\n          type: \"password\",\n          id: \"password\",\n          autoComplete: \"current-password\",\n          value: this.state.password,\n          onChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n          control: /*#__PURE__*/_jsxDEV(Checkbox, {\n            value: \"remember\",\n            color: \"primary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 24\n          }, this),\n          label: \"Remember me\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          fullWidth: true,\n          variant: \"contained\",\n          color: \"primary\",\n          className: useStyles.submit,\n          onClick: this.loginClicked,\n          children: \"Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/mac/Documents/SingHealthAuditApp/frontend/src/components/testJwt/Login.js"],"names":["React","Component","useState","Grid","Link","Paper","CssBaseline","Box","Typography","Avatar","Button","TextField","FormGroup","FormControlLabel","Checkbox","LockOutlinedIcon","AuthenticationService","useStyles","useHistory","Login","usernameState","setUsernameState","passwordState","setPasswordState","hasLoginFailedState","setHasLoginFailedState","showSuccessMessageState","setShowSuccessMessageState","styles","history","loginClicked","console","log","executeJwtAuthenticationService","then","response","data","registerSuccessfulLoginForJwt","token","accountType","push","catch","root","image","paper","avatar","form","e","target","value","submit","LoginComponent","constructor","props","state","username","password","hasLoginFailed","showSuccessMessage","handleChange","bind","event","setState","name","render"],"mappings":"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","sourcesContent":["import React, { Component, useState } from \"react\";\nimport { Grid, Link, Paper, CssBaseline, Box, Typography, Avatar, Button, TextField, FormGroup, FormControlLabel, Checkbox } from \"@material-ui/core\";\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\n\nimport AuthenticationService from \"../../AuthenticationService\";\nimport useStyles from '../../../src/styles';\nimport { useHistory } from \"react-router\";\n\nfunction Login() {\n  const [usernameState, setUsernameState] = useState(\"\");\n  const [passwordState, setPasswordState] = useState(\"\");\n  const [hasLoginFailedState, setHasLoginFailedState] = useState(false);\n  const [showSuccessMessageState, setShowSuccessMessageState] = useState(false);\n\n  const styles = useStyles();\n  const history = useHistory();\n\n  function loginClicked() {\n    console.log(usernameState);\n    console.log(passwordState);\n    AuthenticationService.executeJwtAuthenticationService(\n      usernameState,\n      passwordState\n    )\n      .then((response) => {\n        console.log(response);\n        console.log(response.data);\n        AuthenticationService.registerSuccessfulLoginForJwt(\n          usernameState,\n          response.data.token\n        );\n\n        if (response.data.accountType == \"Auditor\") {\n          history.push(`/home/a`);\n        } else if (response.data.accountType == \"Tenant\") {\n          history.push(`/home/t`);\n        } else if (response.data.accountType == \"Manager\") {\n          history.push(`/home/m`);\n        }\n      })\n      .catch(() => {\n        setShowSuccessMessageState(false);\n        setHasLoginFailedState(true);\n      });\n  };\n\n  return (\n    <Grid container component=\"main\" className={styles.root}>\n      <CssBaseline />\n      <Grid item xs={false} sm={4} md={7} className={styles.image} />\n      <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n        <div className={styles.paper}>\n          <Avatar className={styles.avatar}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign in\n          </Typography>\n          <form className={styles.form} noValidate>\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"email\"\n              label=\"Email Address\"\n              name=\"email\"\n              autoComplete=\"email\"\n              autoFocus\n              value={usernameState}\n              onChange={(e) => setUsernameState(e.target.value)}\n            />\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              id=\"password\"\n              autoComplete=\"current-password\"\n              value={passwordState}\n              onChange={(e) => setPasswordState(e.target.value)}\n            />\n            <FormControlLabel\n              control={<Checkbox value=\"remember\" color=\"primary\" />}\n              label=\"Remember me\"\n            />\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={styles.submit}\n              onClick={() => loginClicked()}\n            >\n              Sign In\n            </Button>\n            <Grid container>\n              <Grid item xs>\n                <Link href=\"#\" variant=\"body2\">\n                  Forgot password?\n                </Link>\n              </Grid>\n              <Grid item>\n                <Link href=\"#\" variant=\"body2\">\n                  {\"Don't have an account? Sign Up\"}\n                </Link>\n              </Grid>\n            </Grid>\n            {/* <Box mt={5}>\n              <Copyright />\n            </Box> */}\n          </form>\n        </div>\n      </Grid>\n    </Grid>\n  )\n\n}\n\nclass LoginComponent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      username: \"\",\n      password: \"\",\n      hasLoginFailed: false,\n      showSuccessMessage: false,\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.loginClicked = this.loginClicked.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value,\n    });\n  }\n\n  loginClicked() {\n    console.log(this.state.username);\n    console.log(this.state.password);\n    AuthenticationService.executeJwtAuthenticationService(\n      this.state.username,\n      this.state.password\n    )\n      .then((response) => {\n        console.log(response);\n        console.log(response.data);\n        AuthenticationService.registerSuccessfulLoginForJwt(\n          this.state.username,\n          response.data.token\n        );\n\n        if (response.data.accountType == \"Auditor\") {\n          this.props.history.push(`/home/a`);\n        } else if (response.data.accountType == \"Tenant\") {\n          this.props.history.push(`/home/t`);\n        } else if (response.data.accountType == \"Manager\") {\n          this.props.history.push(`/home/m`);\n        }\n      })\n      .catch(() => {\n        this.setState({ showSuccessMessage: false });\n        this.setState({ hasLoginFailed: true });\n      });\n  }\n\n  render() {\n    return (\n      <div>\n        <h2>Login</h2>\n        <div className=\"container\">\n          {/*<ShowInvalidCredentials hasLoginFailed={this.state.hasLoginFailed}/>*/}\n          {this.state.hasLoginFailed && (\n            <div className=\"alert alert-warning\">Invalid Credentials</div>\n          )}\n          {this.state.showSuccessMessage && <div>Login Sucessful</div>}\n          {/*<ShowLoginSuccessMessage showSuccessMessage={this.state.showSuccessMessage}/>*/}\n          {/* <div>\n            User Name:{\" \"}\n            <input\n              type=\"text\"\n              name=\"username\"\n              value={this.state.username}\n              onChange={this.handleChange}\n            />\n          </div> */}\n          <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"email\"\n              label=\"Username\"\n              name=\"username\"\n              autoComplete=\"username\"\n              autoFocus\n              value={this.state.username}\n              onChange={this.handleChange}\n            />\n          {/* <div>\n            Password:{\" \"}\n            <input\n              type=\"password\"\n              name=\"password\"\n              value={this.state.password}\n              onChange={this.handleChange}\n            />\n          </div> */}\n          <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              id=\"password\"\n              autoComplete=\"current-password\"\n              value={this.state.password}\n              onChange={this.handleChange}\n            />\n          <FormControlLabel\n              control={<Checkbox value=\"remember\" color=\"primary\" />}\n              label=\"Remember me\"\n            />\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={useStyles.submit}\n            onClick={this.loginClicked}\n          >\n            Sign In\n          </Button>\n          {/* <button className=\"btn btn-success\" onClick={this.loginClicked}>\n            Login\n          </button> */}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}