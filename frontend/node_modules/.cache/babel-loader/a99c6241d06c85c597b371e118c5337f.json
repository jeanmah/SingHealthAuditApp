{"ast":null,"code":"var _jsxFileName = \"/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/components/Modal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Context } from \"../Context\";\nimport { fbChecklist } from \"../data\";\nimport { FaRegTimesCircle } from \"react-icons/fa\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Modal({\n  id\n}) {\n  _s();\n\n  //Context: state of modal (whether it is open or not)\n  const {\n    modalOpen,\n    setModalOpen,\n    closeModal\n  } = useContext(Context); //state for comments in modal\n\n  const [comment, setComment] = useState(\"\"); //get question Object from checklist with the specific id\n\n  const modalQuestion = fbChecklist.find(question => {\n    return question.id === id;\n  }); //handle change in textbox by updating comment state\n\n  const handleChange = event => {\n    setComment(event.target.value);\n  };\n\n  return /*#__PURE__*/ReactDOM.createPortal( /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      className: `${modalOpen ? \"modal-overlay show-modal\" : \"modal-overlay\"}`,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Write a Comment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"modal-commentbox\",\n          value: comment,\n          onChange: event => {\n            handleChange(event);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  }, void 0, false), document.getElementById(\"portal\"));\n}\n\n_s(Modal, \"H7bBotfLThlcv4fL4osmpBh7KB4=\");\n\n_c = Modal;\nexport default Modal;\n\nvar _c;\n\n$RefreshReg$(_c, \"Modal\");","map":{"version":3,"sources":["/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/components/Modal.js"],"names":["React","useState","useContext","ReactDOM","Context","fbChecklist","FaRegTimesCircle","Modal","id","modalOpen","setModalOpen","closeModal","comment","setComment","modalQuestion","find","question","handleChange","event","target","value","createPortal","document","getElementById"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,OAAT,QAAwB,YAAxB;AACA,SAASC,WAAT,QAA4B,SAA5B;AACA,SAASC,gBAAT,QAAiC,gBAAjC;;;;AAEA,SAASC,KAAT,CAAe;AAAEC,EAAAA;AAAF,CAAf,EAAuB;AAAA;;AACrB;AACA,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA,YAAb;AAA2BC,IAAAA;AAA3B,MAA0CT,UAAU,CAACE,OAAD,CAA1D,CAFqB,CAGrB;;AACA,QAAM,CAACQ,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC,EAAD,CAAtC,CAJqB,CAKrB;;AACA,QAAMa,aAAa,GAAGT,WAAW,CAACU,IAAZ,CAAkBC,QAAD,IAAc;AACnD,WAAOA,QAAQ,CAACR,EAAT,KAAgBA,EAAvB;AACD,GAFqB,CAAtB,CANqB,CASrB;;AACA,QAAMS,YAAY,GAAIC,KAAD,IAAW;AAC9BL,IAAAA,UAAU,CAACK,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAV;AACD,GAFD;;AAIA,sBAAOjB,QAAQ,CAACkB,YAAT,eACL;AAAA,2BACE;AACE,MAAA,SAAS,EAAG,GACVZ,SAAS,GAAG,0BAAH,GAAgC,eAC1C,EAHH;AAAA,6BAKE;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,UAAA,SAAS,EAAC,kBADZ;AAEE,UAAA,KAAK,EAAEG,OAFT;AAGE,UAAA,QAAQ,EAAGM,KAAD,IAAW;AACnBD,YAAAA,YAAY,CAACC,KAAD,CAAZ;AACD;AALH;AAAA;AAAA;AAAA;AAAA,gBAFF,eASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBATF;AAAA;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA;AADF,mBADK,EAoBLI,QAAQ,CAACC,cAAT,CAAwB,QAAxB,CApBK,CAAP;AAsBD;;GApCQhB,K;;KAAAA,K;AAsCT,eAAeA,KAAf","sourcesContent":["import React, { useState, useContext } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Context } from \"../Context\";\nimport { fbChecklist } from \"../data\";\nimport { FaRegTimesCircle } from \"react-icons/fa\";\n\nfunction Modal({ id }) {\n  //Context: state of modal (whether it is open or not)\n  const { modalOpen, setModalOpen, closeModal } = useContext(Context);\n  //state for comments in modal\n  const [comment, setComment] = useState(\"\");\n  //get question Object from checklist with the specific id\n  const modalQuestion = fbChecklist.find((question) => {\n    return question.id === id;\n  });\n  //handle change in textbox by updating comment state\n  const handleChange = (event) => {\n    setComment(event.target.value);\n  };\n\n  return ReactDOM.createPortal(\n    <>\n      <section\n        className={`${\n          modalOpen ? \"modal-overlay show-modal\" : \"modal-overlay\"\n        }`}\n      >\n        <div className=\"modal-container\">\n          <div>Write a Comment</div>\n          <textarea\n            className=\"modal-commentbox\"\n            value={comment}\n            onChange={(event) => {\n              handleChange(event);\n            }}\n          />\n          <button>Submit</button>\n        </div>\n      </section>\n    </>,\n    document.getElementById(\"portal\")\n  );\n}\n\nexport default Modal;\n"]},"metadata":{},"sourceType":"module"}