{"ast":null,"code":"var _jsxFileName = \"/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/pages/TenantReport.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useContext } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport Navbar from \"../Navbar\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Context } from \"../Context\";\nimport Loading from \"./Loading\";\nimport Accordion from \"@material-ui/core/Accordion\";\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport TenantReportCard from \"../components/TenantReportCard\";\nimport Button from \"@material-ui/core/Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  header: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(2, 0, 2, 0)\n  },\n  root: {\n    width: \"100%\",\n    padding: theme.spacing(4, 0, 10, 0)\n  } // dropdownMain: {\n  //   display: \"flex\",\n  //   flexDirection: \"column\",\n  // },\n  // dropdownContainer: {\n  //   display: \"flex\",\n  //   flexDirection: \"column\",\n  //   margin: theme.spacing(0, 0, 0, 2),\n  // },\n  // textInfo: {\n  //   padding: theme.spacing(2, 0, 2, 0),\n  //   color: \"#F15A22\",\n  // },\n  // topText: {\n  //   color: \"#F15A22\",\n  // },\n  // textTenant: {\n  //   padding: theme.spacing(1, 0, 2, 2),\n  //   fontWeight: \"medium\",\n  // },\n  // tenantInstructions: {\n  //   display: \"flex\",\n  //   padding: theme.spacing(2, 0, 2, 2),\n  // },\n  // tenantResponse: {\n  //   display: \"flex\",\n  //   width: \"100%\",\n  // },\n  // avatar: {},\n  // button: {\n  //   width: \"50%\",\n  //   color: \"#F15A22\",\n  //   fontWeight: \"medium\",\n  //   backgroundColor: theme.palette.background.default,\n  // },\n  // buttonContainer: {\n  //   padding: theme.spacing(4, 0, 2, 0),\n  //   display: \"flex\",\n  //   justifyContent: \"center\",\n  // },\n\n}));\n\nfunction TenantReport() {\n  _s();\n\n  const {\n    reportId\n  } = useParams();\n  const {\n    getReportStats,\n    getReportEntry\n  } = useContext(Context);\n  const classes = useStyles();\n  const [failedEntries, setFailedEntries] = useState();\n  useEffect(() => {\n    async function getResponse() {\n      try {\n        const entryArray = await getReportStats(reportId).then(response => {\n          console.log(response);\n          return response.data.Failed_Entries;\n        }); // console.log(entryArray);\n\n        let entryInfoArray = [];\n\n        for (let i = 0; i < entryArray.length; i++) {\n          // console.log(entryArray[i]);\n          // console.log(reportId);\n          let info = await getReportEntry(reportId, entryArray[i]).then(response => {\n            //   console.log(response);\n            return response;\n          });\n          entryInfoArray.push(info);\n        }\n\n        if (entryInfoArray.length === entryArray.length) {\n          console.log(entryInfoArray);\n          setFailedEntries(entryInfoArray);\n        }\n      } catch (err) {\n        console.error(err);\n      }\n    }\n\n    getResponse();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: failedEntries ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        className: classes.header,\n        textAlign: \"center\",\n        boxShadow: 1,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          children: \"Report Non-Compliance Overview\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        className: classes.reportBasicInfo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.root,\n        children: failedEntries.map(entry => {\n          const {\n            data\n          } = entry;\n          let severity = data.severity / 1000000;\n          severity = Math.floor(severity);\n          let timeframe = \"\";\n\n          switch (severity) {\n            case 1:\n              timeframe = \"3 weeks\";\n              break;\n\n            case 2:\n              timeframe = \"2 weeks\";\n              break;\n\n            case 3:\n              timeframe = \"1 week\";\n              break;\n\n            case 4:\n              timeframe = \"4 days\";\n              break;\n\n            case 5:\n              timeframe = \"1 day\";\n              break;\n          }\n\n          return /*#__PURE__*/_jsxDEV(TenantReportCard, {\n            remarks: data.remarks,\n            entry_id: data.entry_id,\n            requirement: data.Requirement,\n            timeframe: timeframe\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TenantReport, \"swnb5CoK5K8FgW5XuiceTUC2yxg=\", false, function () {\n  return [useParams, useStyles];\n});\n\n_c = TenantReport;\nexport default TenantReport;\n\nvar _c;\n\n$RefreshReg$(_c, \"TenantReport\");","map":{"version":3,"sources":["/Users/marcushjw/mainsinghealth/SingHealthAuditApp/frontend/src/pages/TenantReport.js"],"names":["React","useEffect","useState","useContext","useParams","Typography","Box","Navbar","makeStyles","Context","Loading","Accordion","AccordionSummary","AccordionDetails","Checkbox","FormControlLabel","ExpandMoreIcon","List","ListItem","ListItemText","Avatar","TenantReportCard","Button","useStyles","theme","header","backgroundColor","palette","background","paper","padding","spacing","root","width","TenantReport","reportId","getReportStats","getReportEntry","classes","failedEntries","setFailedEntries","getResponse","entryArray","then","response","console","log","data","Failed_Entries","entryInfoArray","i","length","info","push","err","error","reportBasicInfo","map","entry","severity","Math","floor","timeframe","remarks","entry_id","Requirement"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport Navbar from \"../Navbar\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Context } from \"../Context\";\nimport Loading from \"./Loading\";\nimport Accordion from \"@material-ui/core/Accordion\";\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport TenantReportCard from \"../components/TenantReportCard\";\nimport Button from \"@material-ui/core/Button\";\n\nconst useStyles = makeStyles((theme) => ({\n  header: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(2, 0, 2, 0),\n  },\n  root: {\n    width: \"100%\",\n    padding: theme.spacing(4, 0, 10, 0),\n  },\n  // dropdownMain: {\n  //   display: \"flex\",\n  //   flexDirection: \"column\",\n  // },\n  // dropdownContainer: {\n  //   display: \"flex\",\n  //   flexDirection: \"column\",\n  //   margin: theme.spacing(0, 0, 0, 2),\n  // },\n  // textInfo: {\n  //   padding: theme.spacing(2, 0, 2, 0),\n  //   color: \"#F15A22\",\n  // },\n  // topText: {\n  //   color: \"#F15A22\",\n  // },\n  // textTenant: {\n  //   padding: theme.spacing(1, 0, 2, 2),\n  //   fontWeight: \"medium\",\n  // },\n  // tenantInstructions: {\n  //   display: \"flex\",\n  //   padding: theme.spacing(2, 0, 2, 2),\n  // },\n  // tenantResponse: {\n  //   display: \"flex\",\n  //   width: \"100%\",\n  // },\n  // avatar: {},\n  // button: {\n  //   width: \"50%\",\n  //   color: \"#F15A22\",\n  //   fontWeight: \"medium\",\n  //   backgroundColor: theme.palette.background.default,\n  // },\n  // buttonContainer: {\n  //   padding: theme.spacing(4, 0, 2, 0),\n  //   display: \"flex\",\n  //   justifyContent: \"center\",\n  // },\n}));\n\nfunction TenantReport() {\n  const { reportId } = useParams();\n  const { getReportStats, getReportEntry } = useContext(Context);\n  const classes = useStyles();\n  const [failedEntries, setFailedEntries] = useState();\n\n  useEffect(() => {\n    async function getResponse() {\n      try {\n        const entryArray = await getReportStats(reportId).then((response) => {\n          console.log(response);\n          return response.data.Failed_Entries;\n        });\n        // console.log(entryArray);\n\n        let entryInfoArray = [];\n\n        for (let i = 0; i < entryArray.length; i++) {\n          // console.log(entryArray[i]);\n          // console.log(reportId);\n          let info = await getReportEntry(reportId, entryArray[i]).then(\n            (response) => {\n              //   console.log(response);\n              return response;\n            }\n          );\n          entryInfoArray.push(info);\n        }\n        if (entryInfoArray.length === entryArray.length) {\n          console.log(entryInfoArray);\n          setFailedEntries(entryInfoArray);\n        }\n      } catch (err) {\n        console.error(err);\n      }\n    }\n    getResponse();\n  }, []);\n\n  return (\n    <div>\n      {failedEntries ? (\n        <>\n          <Navbar />\n          <Box className={classes.header} textAlign=\"center\" boxShadow={1}>\n            <Typography variant=\"h5\">Report Non-Compliance Overview</Typography>\n          </Box>\n          <Box className={classes.reportBasicInfo}></Box>\n          <div className={classes.root}>\n            {failedEntries.map((entry) => {\n              const { data } = entry;\n              let severity = data.severity / 1000000;\n              severity = Math.floor(severity);\n              let timeframe = \"\";\n              switch (severity) {\n                case 1:\n                  timeframe = \"3 weeks\";\n                  break;\n                case 2:\n                  timeframe = \"2 weeks\";\n                  break;\n                case 3:\n                  timeframe = \"1 week\";\n                  break;\n                case 4:\n                  timeframe = \"4 days\";\n                  break;\n                case 5:\n                  timeframe = \"1 day\";\n                  break;\n              }\n              return (\n                <TenantReportCard\n                  remarks={data.remarks}\n                  entry_id={data.entry_id}\n                  requirement={data.Requirement}\n                  timeframe={timeframe}\n                />\n              );\n            })}\n          </div>\n        </>\n      ) : (\n        <Loading />\n      )}\n    </div>\n  );\n}\n\nexport default TenantReport;\n"]},"metadata":{},"sourceType":"module"}