{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Documents/SingHealthAuditApp/frontend/src/components/ChatCards.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { Context } from '../Context';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Chat from \"../pages/Chat\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%'\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    fontWeight: theme.typography.fontWeightRegular\n  }\n}));\n\nconst ChatCards = () => {\n  _s();\n\n  //console.log(chatEntriesOfUserState);\n  const styles = useStyles();\n  const {\n    setAllChatsOfUserState,\n    allChatsOfUserState,\n    getAllChatsOfUser,\n    chatEntriesOfUserState,\n    getChatEntriesOfUser\n  } = useContext(Context);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"All Chats of User:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), () => {\n      console.log(\"ChatCard: allChatsOfUser: \" + allChatsOfUserState);\n      console.log(\"ChatCard: chatEntriesOfUser: \" + chatEntriesOfUserState);\n    }]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ChatCards, \"X2GLYu37cQ46uKRNxZ0yMX/2CpI=\", false, function () {\n  return [useStyles];\n});\n\n_c = ChatCards;\nexport default ChatCards;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatCards\");","map":{"version":3,"sources":["/Users/mac/Documents/SingHealthAuditApp/frontend/src/components/ChatCards.js"],"names":["React","useContext","useEffect","useState","Context","makeStyles","Accordion","AccordionSummary","AccordionDetails","Typography","ExpandMoreIcon","Chat","useStyles","theme","root","width","heading","fontSize","typography","pxToRem","fontWeight","fontWeightRegular","ChatCards","styles","setAllChatsOfUserState","allChatsOfUserState","getAllChatsOfUser","chatEntriesOfUserState","getChatEntriesOfUser","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,SAASC,OAAT,QAAwB,YAAxB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,cAAP,MAA2B,+BAA3B;AACA,OAAOC,IAAP,MAAiB,eAAjB;;AAEA,MAAMC,SAAS,GAAGP,UAAU,CAAEQ,KAAD,KAAY;AACvCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,KAAK,EAAE;AADH,GADiC;AAIvCC,EAAAA,OAAO,EAAE;AACPC,IAAAA,QAAQ,EAAEJ,KAAK,CAACK,UAAN,CAAiBC,OAAjB,CAAyB,EAAzB,CADH;AAEPC,IAAAA,UAAU,EAAEP,KAAK,CAACK,UAAN,CAAiBG;AAFtB;AAJ8B,CAAZ,CAAD,CAA5B;;AAUA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACtB;AACA,QAAMC,MAAM,GAAGX,SAAS,EAAxB;AAEA,QAAM;AACJY,IAAAA,sBADI;AAEJC,IAAAA,mBAFI;AAGJC,IAAAA,iBAHI;AAIJC,IAAAA,sBAJI;AAKJC,IAAAA;AALI,MAMF3B,UAAU,CAACG,OAAD,CANd;AAQA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEG,MAAM;AACLyB,MAAAA,OAAO,CAACC,GAAR,CAAY,+BAA+BL,mBAA3C;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAY,kCAAkCH,sBAA9C;AACD,KALH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA2CD,CAvDD;;GAAML,S;UAEWV,S;;;KAFXU,S;AAyDN,eAAeA,SAAf","sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\nimport { Context } from '../Context';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Chat from \"../pages/Chat\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    fontWeight: theme.typography.fontWeightRegular,\n  },\n}));\n\nconst ChatCards = () => {\n  //console.log(chatEntriesOfUserState);\n  const styles = useStyles();\n\n  const {\n    setAllChatsOfUserState,\n    allChatsOfUserState,\n    getAllChatsOfUser,\n    chatEntriesOfUserState,\n    getChatEntriesOfUser,\n  } = useContext(Context);\n\n  return (\n    <div>\n      <h3>All Chats of User:</h3>\n      {() => {\n        console.log(\"ChatCard: allChatsOfUser: \" + allChatsOfUserState);\n        console.log(\"ChatCard: chatEntriesOfUser: \" + chatEntriesOfUserState);\n      }}\n      {/* {allChatsOfUserState.map((chat, index) => {\n        return (\n          <React.Fragment key={index}>\n            <Accordion>\n              <AccordionSummary\n                expandIcon={<ExpandMoreIcon />}\n                aria-controls=\"panel1a-content\"\n                id=\"panel1a-header\"\n              >\n                <Typography className={styles.heading}>Chat ID: {chat.chat_id} -</Typography>\n                <Typography className={styles.heading}>Tenant ID: {chat.tenant_id}</Typography>\n              </AccordionSummary>\n\n              {chatEntriesOfUserState[chat.chat_id].map((entry, index) => {\n                return (\n                  <React.Fragment key={index}>\n                    <AccordionDetails>\n                      <div>Chat Entry ID: {entry.chat_entry_id}</div>\n                      <div>Subject: {entry.subject}</div>\n                      <div>Sender ID: {entry.sender_id}</div>\n                      <div>Message Body: {entry.messageBody}</div>\n                      <div>Date: {entry.date}</div>\n                      <div>Time: {entry.time}</div>\n                      <div>Attachments: {entry.attachments}</div>\n                      <br />\n                    </AccordionDetails>\n                  </React.Fragment>\n                );\n              })}\n            </Accordion>\n            <br />\n          </React.Fragment>\n        );\n      })} */}\n    </div>\n  )\n}\n\nexport default ChatCards;"]},"metadata":{},"sourceType":"module"}