{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Documents/SingHealthAuditApp/frontend/src/pages/Chat.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useContext, useState } from \"react\";\nimport { Link } from 'react-router-dom';\nimport { Typography, Button } from \"@material-ui/core\";\nimport axios from \"axios\";\nimport { Context } from \"../Context\";\nimport Navbar from \"../Navbar\";\nimport useStyles from \"../styles\";\nimport { FormGroup } from \"@material-ui/core\";\nimport ChatCards from \"../components/ChatCards\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Chat() {\n  _s();\n\n  const {\n    // setAllChatsOfUserState,\n    // allChatsOfUserState,\n    getAllChatsOfUser\n  } = useContext(Context);\n  const [allChatsState, setAllChatsState] = useState([]);\n  const styles = useStyles();\n  const chatsArray = [];\n  useEffect(() => {\n    //getAllChatsOfUser();\n    async function getResponse() {\n      try {\n        await getAllChatsOfUser().then(response => {\n          console.log(response.data);\n          response.data.map((chat, index) => {\n            console.log(chat);\n            let messages = [];\n\n            if (chat.messages.messages) {\n              messages = [...chat.messages.messages];\n              console.log(\"Messages: \" + messages);\n            } else {\n              console.log(\"No message\");\n            }\n\n            ;\n            chatsArray.push(chat);\n          });\n          console.log(chatsArray); // setAllChatsState(chatsArray);\n          // console.log(allChatsState);\n        });\n      } catch {\n        console.log(\"Failed to retrive allChatsOfUser\");\n      }\n    }\n\n    getResponse();\n  }, []);\n\n  const ChatInfo = props => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Chat ID: \", props.chat_id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Tenant ID: \", props.tenant_id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Auditor ID: \", props.auditor_id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Messages: \", props.messages]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: styles.main,\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h3\",\n      align: \"center\",\n      children: \"Chat\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      className: styles.buttons,\n      align: \"center\",\n      variant: \"outlined\",\n      color: \"primary\",\n      fullWidth: true // onClick={() => {\n      //   console.log(\"chatState: \" + allChatsOfUserState);\n      //   console.log(\"firstChat: \" + allChatsOfUserState[0]);\n      //   console.log(\"firstChatID: \" + allChatsOfUserState[0].chat_id);\n      // }}\n      ,\n      children: \"Get All Chats of User\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ChatCards, {\n      array: chatsArray\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Chat, \"cDo86tiHqCteAKYBhn2VoxqtDgM=\", false, function () {\n  return [useStyles];\n});\n\n_c = Chat;\nexport default Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["/Users/mac/Documents/SingHealthAuditApp/frontend/src/pages/Chat.js"],"names":["React","useEffect","useContext","useState","Link","Typography","Button","axios","Context","Navbar","useStyles","FormGroup","ChatCards","Chat","getAllChatsOfUser","allChatsState","setAllChatsState","styles","chatsArray","getResponse","then","response","console","log","data","map","chat","index","messages","push","ChatInfo","props","chat_id","tenant_id","auditor_id","main","buttons"],"mappings":"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","sourcesContent":["import React, { useEffect, useContext, useState } from \"react\";\nimport { Link } from 'react-router-dom';\nimport { Typography, Button } from \"@material-ui/core\";\nimport axios from \"axios\";\n\nimport { Context } from \"../Context\";\nimport Navbar from \"../Navbar\";\nimport useStyles from \"../styles\";\nimport { FormGroup } from \"@material-ui/core\";\nimport ChatCards from \"../components/ChatCards\";\n\nfunction Chat() {\n\n  const {\n    // setAllChatsOfUserState,\n    // allChatsOfUserState,\n    getAllChatsOfUser\n  } = useContext(Context);\n\n  const [allChatsState, setAllChatsState] = useState([]);\n  const styles = useStyles();\n  const chatsArray = [];\n\n  useEffect(() => {\n    //getAllChatsOfUser();\n    async function getResponse() {\n      try{\n        await getAllChatsOfUser().then((response) => {\n          console.log(response.data);\n          response.data.map((chat, index) => {\n            console.log(chat);\n            let messages = [];\n            if (chat.messages.messages) {\n              messages = [...chat.messages.messages];\n              console.log(\"Messages: \" + messages);\n            } else {\n              console.log(\"No message\");\n            };\n            chatsArray.push(chat);\n          });\n          console.log(chatsArray);\n          // setAllChatsState(chatsArray);\n          // console.log(allChatsState);\n        });\n      } catch {\n        console.log(\"Failed to retrive allChatsOfUser\");\n      }\n    }\n    getResponse();\n  }, []);\n\n  const ChatInfo = (props) => {\n    return (\n      <div>\n        <div>Chat ID: {props.chat_id}</div>\n        <div>Tenant ID: {props.tenant_id}</div>\n        <div>Auditor ID: {props.auditor_id}</div>\n        <div>Messages: {props.messages}</div>\n      </div>   \n    );\n  };\n\n  return (\n    <main className={styles.main}>\n      <Navbar />\n      <br />\n      <Typography variant=\"h3\" align=\"center\">Chat</Typography>\n      <Button\n        className={styles.buttons}\n        align=\"center\"\n        variant=\"outlined\"\n        color=\"primary\"\n        fullWidth\n        // onClick={() => {\n        //   console.log(\"chatState: \" + allChatsOfUserState);\n        //   console.log(\"firstChat: \" + allChatsOfUserState[0]);\n        //   console.log(\"firstChatID: \" + allChatsOfUserState[0].chat_id);\n        // }}\n      >\n        Get All Chats of User\n      </Button>\n      <ChatCards array={chatsArray}/>\n\n    </main>\n  )\n}\n\nexport default Chat;"]},"metadata":{},"sourceType":"module"}